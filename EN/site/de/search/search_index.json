{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Wilkommen zur AAPS Dokumentation","text":"<p>AAPS is an open source app for people living with insulin-dependent diabetes that acts as an artificial pancreas system (APS) on Google Android smartphones. It uses an openAPS software algorithm which aims to do what a living pancreas does: keeping blood sugar levels within healthy limits by using automated insulin dosing (AID). Additionally, you need a supported and FDA/CE approved insulin pump, and a continuous glucose meter.</p> <p>Interested? Read more about AAPS in the introduction.</p> <pre><code>**IMPORTANT SAFETY NOTICE**\n\nThe foundation of AAPS safety features discussed in this documentation is built on the safety features of the hardware used to build your system. It is critically important that you only use a tested, fully functioning FDA or CE approved insulin pump and CGM for closing an automated insulin dosing loop. Hardware or software modifications to these components can cause unexpected insulin dosing, causing significant risk to the user. If you find or get offered broken, modified or self-made insulin pumps or CGM receivers, *do not use* these for creating an AAPS system.\n\nAdditionally, it is equally important to only use original supplies such as inserters, cannulas and insulin containers approved by the manufacturer for use with your pump or CGM. Using untested or modified supplies can cause CGM inaccuracy and insulin dosing errors. Insulin is highly dangerous when misdosed - please do not play with your life by hacking with your supplies.\n\nLast not least, you must not take SGLT-2 inhibitors (gliflozins) as they incalculably lower blood sugar levels.  The combination with a system that lowers basal rates in order to increase BG is especially dangerous as due to the gliflozin this rise in BG might not happen and a dangerous state of lack of insulin can happen.\n</code></pre> <pre><code>**Disclaimer and Warning**\n\n- All information, thought, and code described here is intended for informational and educational purposes only. Nightscout currently makes no attempt at HIPAA privacy compliance. Use Nightscout and AAPS at your own risk, and do not use the information or code to make medical decisions.\n- Use of code from github.com is without warranty or formal support of any kind. Please review this repository's LICENSE for details.\n- All product and company names, trademarks, servicemarks, registered trademarks, and registered servicemarks are the property of their respective holders. Their use is for information purposes and does not imply any affiliation with or endorsement by them.\n\nPlease note - this project has no association with and is not endorsed by: [SOOIL](http://www.sooil.com/eng/), [Dexcom](https://www.dexcom.com/), [Accu-Chek, Roche Diabetes Care](https://www.accu-chek.com/), [Insulet](https://www.insulet.com/) or [Medtronic](https://www.medtronic.com/).\n</code></pre>"},{"location":"#how-to-read-the-documentation","title":"How to read the documentation?","text":"<p>We have provided this subsection of the documentation especially for those who are new to concept of Do-It-Yourself-APS (Artificial-Pancreas-Systems) in order to best show how to get acquainted with the information we consider to be the most important, especially in terms of understanding the reasons behind the \"limits\" set in place when you are first beginning your AAPS journey. These safety limits have been developed over many years by observations of the inadvertent mistakes that new users are most likely to make when first learning to set up, build, and then successfully loop with AAPS - as most often those mistakes occur simply because the user was so excited to get started using the system that they may have forgotten to sit down and dedicate the time needed to understand the information within this documentation thoroughly. We have all been there!</p> <p>Certainly the approach, \"read everything\" has merit and is certainly true. However, it is not uncommon for newcomers to quickly become overwhelmed by the sheer volume and variety of new information that they are expected to understand all at once! So these next few subsections are meant to lay out the most important foundations of the knowledge necessary to successfully run your own chosen setup with as few hiccups as is possible. New users can refer back to this guide when they run into aspects of the system they are not yet familiar with; and to remind themselves where to go within the Documentation in order to locate more in-depth information, as needed. It is also important to lay out the capabilities of AAPS in an up-front manner, as sometimes it can be disappointing to discover in the middle of reading the documentation that certain necessary tools are currently not available for use (due to constraints on which types of insulin pumps or CGMs are available in some countries vs. other countries etc.) or simply offers less/different functionality than first assumed. Finally, it is important to acknowledge that many experience-related aspects inside this documentation only become pertinent as you begin to use AAPS in real-time. Just as it is nearly impossible to learn to play a sport perfectly just by reading about the rules, it takes a combination of first learning the foundations of the rules for safely operating AAPS and then committing the time learning how best to apply those rules as you navigate through the steps of looping with AAPS.</p> <p>The Getting started subsection is a must read to understand the general concept of what an artificial pancreas system is designed to do; and is especially pertinent for users of AAPS.</p> <p>The subsection What do I need? specifies the CGMs (Continuous Glucose Monitors) and insulin pumps which are are available for use with AAPS. This subsection is important to understand so that your AAPS system can be assembled and built correctly the first time around and will function well in real world situations.</p> <p>The subsection Where to go for help? should help direct you to the best places to go to find help depending upon your levels of experience with AAPS. This is very important so that you don't feel left out, especially at the beginning, and so that you can get in touch with others as quickly as possible, clarify questions and solve the usual pitfalls as quickly as possible. Experience shows that a lot of people are already using AAPS successfully, but everyone has a question at some point that they couldn't solve on their own. The nice thing is, however, that due to the large number of users, the response times to questions are usually very quick, typically only a few hours. Don\u2019t worry about requesting help, as there is no such thing as a dumb question! We encourage users of any/all levels of experience to ask as many questions as they feel is necessary to help get them up and running safely. Just try it out please.</p> <p>In the subsection Glossary we have compiled a list of the acronyms (or short-term names) used throughout AAPS. For example, where to go to find out what the terms ISF or TT, stand for in in the more common (longer) terms.</p> <p>For parents who want to build AAPS for their children, we recommend the subsection AAPS for children , as there you will find more advanced information specifically tailored for learning the extra steps necessary in order to remotely control your child's AAPS app as well as a more comprehensive safety profile as compared to adults. You need to be able to support your children and understand the all the advanced concepts that AAPS offers to help you succeed.</p> <p>Now that you have a solid understanding of the concepts that AAPS uses, know where to go for the the necessary tools to build your APS and are familiar with where to get help in case of an emergency, it is the right time to start building the app! The subsection How to install AAPS? shows you this in detail. Since the requirements are very different from anything you might have set up in the past, we recommend that you really follow the instructions, step-by-step the first few times you build the app, so that you have a stronger sense of how the app building process is supposed to behave when all directions are followed exactly. Please remember to take your time. Later this will go very quickly when you build the app again for a new version. That way you will have a greater chance of noticing when something doesn't going as planned before too many steps are out of line. It is important to save the your keystore file (.jks file used to sign your app) in a safe place, so that you can always use that exact same keystore file and password each and every time you are asked to create a new updated version of AAPS, as this file is what makes sure that each new version of the app \"remembers\" all the information that you have provided to it in previous versions of the app and thus ensure that the updates will go as smoothly as possible. On average, you can assume that there will be one new version and 2-3 required updates per year. This number is based on experience and may change in the future. But we do want to at least give you a general guideline on what to expect. When you are more experienced at building updated AAPS app versions all the steps that are required in building an updated app will only take 15-30 minutes, on average. However, in the beginning there can be a rather steep learning curve as these steps are not always considered intuitive by new users! So do not get frustrated if you find that it takes half a day or a whole day with some help from the community before you are finally finished with the update process. If you find that you are getting very frustrated just take a short break, and oftentimes; after a stroll around the block or two...you'll find that you are better able to approach the problem again. We have also compiled a list of questions and answers to most of the typical errors that are likely to occur the first few updates located within the FAQs section; as well as within \"How to install AAPS?\" that provides additional information in the subsection \"Troubleshooting\".</p> <p>The subsection Component Setup explains how to properly integrate each of the various different separate component parts into AAPS, as well as how to set them up to work as seamlessly as possible together. All components are listed under the separate sections: CGM/FGM, xDrip Settings, Pumps, Phones, Nightscout setup, and Smartwatches. The sensor (BG) values and control of the insulin pump are particularly important information to understand. The subsection Configuration describes the best pump configurations to use in AAPS.</p> <p>This is followed by a particularly important subsection AAPS Usage, in which you are slowly introduced to the full usage of what AAPS has to offer via a safe and carefully calibrated step-by-step gradual process designed to make sure that you/your child are thoroughly familiar and comfortable navigating all the different levels and menu configurations before graduating on the next phase, each commonly referred to as the next Objective, until you are have enough experience to begin using the more advanced options available within the app. These Objectives are specially designed in such a way that will gradually unlock more possibilities of AAPS and switch from Open Loop to Closed Loop.</p> <p>After that there is a subsection General Hints with e.g. information on how to deal with the crossing of time zones as well as knowing what to do during the Spring Forward - Fall Back daylight saving time changes which will occur twice a year while using AAPS.</p> <p>There is a subsection for the clinicians who have expressed interest in open source artificial pancreas technology such as AAPS, or for patients who want to share such information with their clinicians.</p> <p>Finally, in the subsection How to help? we would like to provide you with information so that you are able to suggest small or larger changes to the documentation yourself and work together with us on the documentation. We further need support for translation of the documentation By the way, it also very helpful for everyone if you could provide links to the corresponding documentation (or screenshots of where the links are located within the Documentation if you are not familiar with how to send a link) when answering questions from other users. That way the correct information can easily be located again should other users also be trying to find answers to the same types of questions in the future.</p> <pre><code>:caption: Change language\n\nChange language &lt;./changelanguage.md&gt;\n</code></pre> <pre><code>:caption: Home\n\nIntroduction &lt;./introduction.md&gt;\n</code></pre> <pre><code>:caption: Getting started\n\nPreparing &lt;preparing.md&gt;\n\nDocs updates &amp; changes &lt;./Getting-Started/WikiUpdate.md&gt;\n</code></pre> <pre><code>:caption: Setting up AAPS\n\nSetting up the reporting server &lt;./Installing-AndroidAPS/setting-up-the-reporting-server.md&gt;\nBuilding AAPS &lt;./Installing-AndroidAPS/building-AAPS.md&gt;\nTransferring and Installing AAPS &lt;./Installing-AndroidAPS/Transferring-and-installing-AAPS.md&gt;\nSetup Wizard&lt;./Installing-AndroidAPS/setup-wizard.md&gt;\nChange AAPS configuration&lt;./Installing-AndroidAPS/change-configuration.md&gt;\nCompleting the objectives &lt;./Usage/completing-the-objectives.md&gt;\n</code></pre> <pre><code>:caption: Remote control and following\n\nRemote control &lt;remote-control.md&gt;\nFollowing-only &lt;following-only.md&gt;\n</code></pre> <pre><code>:caption: Advanced Setting up APPS\n\nRelease notes &lt;./Installing-AndroidAPS/Releasenotes.md&gt;\n\nUpdate to a new version or branch &lt;./Installing-AndroidAPS/Update-to-new-version.md&gt;\n\nDev branch &lt;./Installing-AndroidAPS/Dev_branch.md&gt;\n\nDedicated Google account for AAPS (optional)&lt;./Installing-AndroidAPS/Dedicated-Google-account-for-AAPS.md&gt;\n</code></pre> <pre><code>:caption: Full Closed Loop\n\nFull Closed Loop &lt;./Usage/FullClosedLoop.md&gt;\n</code></pre> <p>(index-component-setup)=</p> <pre><code>:caption: Component Setup\n\nCGM/FGM &lt;./Configuration/BG-Source.md&gt;\n\nxDrip Settings &lt;./Configuration/xdrip.md&gt;\n\nPump choices &lt;./Getting-Started/Pump-Choices.md&gt;\n\nPhones &lt;./Hardware/Phoneconfig.md&gt;\n\nSmartwatch  &lt;./Hardware/Smartwatch.md&gt;\n</code></pre> <pre><code>:caption: AAPS Usage\n\nAAPS screens &lt;./Getting-Started/Screenshots.md&gt;\n\nOpenAPS features &lt;./Usage/Open-APS-features.md&gt;\n\nDynamic ISF &lt;./Usage/DynamicISF.md&gt;\n\nCOB calculation &lt;./Usage/COB-calculation.md&gt;\n\nSensitivity detection &lt;./Configuration/Sensitivity-detection-and-COB.md&gt;\n\nProfile switch &lt;./Usage/Profiles.md&gt;\n\nTemp-targets &lt;./Usage/temptarget.md&gt;\n\nExtended carbs &lt;./Usage/Extended-Carbs.md&gt;\n\nAutomation &lt;./Usage/Automation.md&gt;\n\nAutotune (dev only) &lt;./Usage/autotune.md&gt;\n\nCareportal (discontinued) &lt;./Usage/CPbefore26.md&gt;\n\nOpen Humans Uploader &lt;./Configuration/OpenHumans.md&gt;\n\nAutomation with 3rd party apps &lt;./Usage/automationwithapp.md&gt;\n\nAndroid auto &lt;./Usage/Android-auto.md&gt;\n\nCustom Watchface reference document &lt;./Usage/Custom_Watchface_Reference.md&gt;\n\nExchange Site Custom Watchfaces &lt;./ExchangeSiteCustomWatchfaces/index.md&gt;\n\nSport with AAPS &lt;./Usage/making-sport-with-AAPS.md&gt;\n</code></pre> <pre><code>:caption: General Hints\n\nCrossing timezones with pumps &lt;./Usage/Timezone-traveling.md&gt;\n\nAccessing logfiles &lt;./Usage/Accessing-logfiles.md&gt;\n\nAccu-Chek Combo tips for basic usage &lt;./Usage/Accu-Chek-Combo-Tips-for-Basic-usage.md&gt;\n\nExport/Import Settings &lt;./Usage/ExportImportSettings.md&gt;\n\nxDrip engineering mode &lt;./Usage/Enabling-Engineering-Mode-in-xDrip.md&gt;\n</code></pre> <pre><code>:caption: Troubleshooting\n\nTroubleshooting &lt;./Usage/troubleshooting.md&gt;\n\nNightscout client &lt;./Usage/Troubleshooting-NSClient.md&gt;\n</code></pre> <pre><code>:caption: FAQ\n\nFAQ &lt;./Getting-Started/FAQ.md&gt;\n</code></pre> <pre><code>:caption: Glossary\n\nGlossary &lt;./Getting-Started/Glossary.md&gt;\n</code></pre> <pre><code>:caption: Where to go for help\n\nUseful resources to read before you start &lt;./Where-To-Go-For-Help/Background-reading.md&gt;\n\nWhere to go for help &lt;./Where-To-Go-For-Help/Connect-with-other-users.md&gt;\n\nDocs updates &amp; changes &lt;./Getting-Started/WikiUpdate.md&gt;\n</code></pre> <pre><code>:caption: For Clinicians\n\nFor Clinicians &lt;./Resources/clinician-guide-to-AndroidAPS.md&gt;\n</code></pre> <pre><code>:caption: How to help\n\nHow to help &lt;./Getting-Started/How-can-I-help.md&gt;\n\nHow to translate the app and docs &lt;./translations.md&gt;\n\nHow to edit the docs &lt;./make-a-PR.md&gt;\n\nState of translations &lt;./Administration/stateTranslations.md&gt;\n</code></pre> <pre><code>:caption: Legacy\n\nHints and Checks after update to AAPS 3.0&lt;./Installing-AndroidAPS/update3_0.md&gt;\n\nChecks after update to AAPS 2.7 &lt;./Installing-AndroidAPS/update2_7.md&gt;\n</code></pre> <pre><code>:caption: Sandbox\n\nSandbox &lt;./Sandbox/sandbox1.md&gt;\nCrowdin Test &lt;./Sandbox/crowdintest.md&gt;\n</code></pre> <pre><code>**Disclaimer And Warning**\n\n- All information, thought, and code described here is intended for informational and educational purposes only. Nightscout currently makes no attempt at HIPAA privacy compliance. Use Nightscout and AAPS at your own risk, and do not use the information or code to make medical decisions.\n- Use of code from github.com is without warranty or formal support of any kind. Please review this repository's LICENSE for details.\n- All product and company names, trademarks, servicemarks, registered trademarks, and registered servicemarks are the property of their respective holders. Their use is for information purposes and does not imply any affiliation with or endorsement by them.\n\nPlease note - this project has no association with and is not endorsed by: [SOOIL](&lt;https://www.sooil.com/eng/&gt;), [Dexcom](&lt;https://www.dexcom.com/&gt;), [Accu-Chek, Roche Diabetes Care](&lt;https://www.accu-chek.com/&gt;) or [Medtronic](&lt;https://www.medtronic.com/&gt;)\n</code></pre>"},{"location":"following-only/","title":"Following AAPS (no interaction with the AAPS system)","text":"<p>In addition to the range of possibilities available for remotely controlling and following AAPS which are described at remote control, there are several additional apps and devices which the community has developed, to simply follow numbers (glucose levels and other information), without interacting with AAPS. </p> <p>A good overview of the extensive options available for following AAPS is at Nightscout follower webpage; if you expand the menu on the left-hand side:</p> <p></p> <p>The most common strategies used in combination with AAPS are explained in more detail below.</p>"},{"location":"following-only/#1-smartphone-apps","title":"1) Smartphone apps","text":"<p>These are some of the main \u201cfollower\u201d apps used by AAPS users. All of these apps are \u201cfree\u201d: </p> <p>A)  Dexcom Follow (Android/iOs)  B)  Nightguard (iOs)  C)  Nightwatch (Android) D)  xDrip+ (Android)  E)  Shuggah (iOs) F)  Sugarmate (iOs) G)  Spike (iOs)</p>"},{"location":"following-only/#a-dexcom-follow-compatible-with-both-android-and-ios-devices","title":"A) Dexcom Follow (compatible with both Android and iOs devices)","text":"<p>\u25cf   Dexcom Follow is compatible with a wide range of handsets (both Android and iPhone). Dexcom Follow can be used even if you are not using the official Dexcom app to receive sensor data. </p> <p>\u25cf   Many caregivers are familiar with Dexcom Follow, preferring its clear interface over something more complicated. </p> <p>\u25cf   Dexcom Follow is very good for teachers/grandparents and people who know very little about diabetes and sugar levels. It has customisable alerts (BG level, what sound to play etc). Alarms can be completely switched off if needed, which is very useful if you have a sensor which is still settling down and creating multiple fake lows.  </p>"},{"location":"following-only/#setting-up-dexcom-follow-how-to-guide","title":"setting up Dexcom Follow: how-to-guide","text":"<p>If you use the unofficial Dexcom app BYODA for receiving sensor data, you may be able to send invites to followers from within the BYODA app. You should also be able to send invitations to Dexcom Follow from Xdrip+ (settings - cloud upload-Dexcom share server upload, see instructions here: </p> <p>https://xdrip.readthedocs.io/en/latest/use/cloud/?h=#dexcom-share-server-upload</p> <p>However, some users have reported not being able to send invite emails to Dexcom followers from these third-party apps. In Xdrip+ the invite request may just result in the message \u201cinvite not sent\u201d. </p> <p>If you find it difficult to invite new Dexcom Followers from these 3rd party apps, then one solution is to install the official Dexcom G6 app, send the invite, and then uninstall the official app. </p> <p>The steps to do this are as follows: </p> <p>1)  Install the official \u201cDexcom G6\u201d app on any smartphone (Android/iPhone), this can be the Follower phone, if it is more convenient. 2)  Log in with your Dexcom username and password, this is the same login details you would use for Dexcom Clarity, if you are already a current Dexcom/Clarity customer. If you don\u2019t have a Dexcom login, there is the option to create a new login at this point.  3)  Swipe through the introduction menus. 4)  Add \u201cno code\u201d for the sensor code. 5)  Under Transmitter SN select \u201center manually\u201d and enter any valid transmitter code (use one of your expired transmitter codes, if you know one, so it doesn\u2019t interfere with the running of your current transmitter, they follow a specific format of certain numbers and letters: \u201cNLNNNL\u201d and only use certain combinations, so it\u2019s easiest to use one you already know is valid).  6)  Once the app is trying to find the transmitter and sensor, you will be able to invite followers: select the small three dots in the top left of the app, and add new follower. You can also use this if one of your followers has changed their handset and needs a fresh invite, here you can delete them from the follower list and resend a new invite email for them to use on their new handset. 7)  On the Follower phone, install Dexcom Follow by downloading it from the App Store (iPhone) or Play (Android). Set up the Dexcom Follow app, and you will be prompted to open your email to find the invite to be a Follower.   8)  You can now delete the official Dexcom G6 app.</p> <p>For Dexcom Follow, the sensor data is then exported from the AAPS phone either directly from BYODA, or from Xdrip+, depending on which app you are using. </p>"},{"location":"following-only/#b-nightguard-ios-only","title":"B) Nightguard (iOs only)","text":"<p>Pros (as reported by users): </p> <p>\u25cf   simple, user-friendly interface.</p> <p>\u25cf   Swipe button or shake phone to snooze alarms at different intervals ranging from 5 mins to 24 hours</p> <p>\u25cf   Customise alarms (high, low alerts, missed readings when no data for 15-45 minutes.</p> <p>\u25cf   Fast rise/drop over 2-5 consecutive readings (you choose). Can also choose the delta between two individual readings </p> <p>\u25cf   Smart snooze so doesn't alert if levels are moving in right direction</p> <p>\u25cf   There is a Care tab which appears to enable you to set a new temp target for a certain duration, delete the temp target or enter carbs.</p> <p>Cons (as reported by users) </p> <p>\u25cf   Only available for iOS </p> <p>\u25cf   The TT shows as 5 mmol regardless of which TT level is set</p> <p>\u25cf   Never shows Temp Basal rate even though it shows TB</p>"},{"location":"following-only/#c-nightwatch-android-only","title":"C) Nightwatch (Android only)","text":"<p>\u25cf   Nightwatch markets itself as a Nightscout client and monitors the user\u2019s Nightscout glucose levels on either Android phone or tablet. </p> <p>\u25cf   The app can be downloaded from Google play and displays BG data in real time. </p> <p>\u25cf   The user can be alerted with customised noisy low and high alarms set. </p> <p>\u25cf   BG data can be viewed in either mmol/L or mg/dL.</p> <p>\u25cf   It requires Android 5.0 and up.</p> <p>\u25cf   It has a dark Ul, large readings and buttons, designed for usage at night. </p>"},{"location":"following-only/#d-xdrip-android-only","title":"D) xDrip+ (Android only)","text":"<p>Followers can be alarmed by using the xDrip+ in follower mode.  xDrip+. (mainly BG values and  alarms)</p>"},{"location":"following-only/#e-shuggah-ios-only","title":"E) Shuggah (iOs only)","text":"<p>Historically, it has been difficult to get hold of the app of the iOs or \"Apple\" version of xDrip+ (known as xDrip4iOS), in order to follow AAPS. </p> <p>A free, modified version of xDrip+4iOs has become available as Shuggah**. This can be downloaded directly from the Apple App store on iPhone or tablet. </p> <p>:::{admonition} Further detail about how to attempt to obtain the original xDrip4iOS app :class: dropdown</p> <p>xDrip4iOS is an Apple version of xDrip+, and the XdripiOs Facebook group is the main community support. xDrip4iOS can connect to many different CGM systems and transmitters and display blood glucose values, charts and statistics as well as provide alarms. It can also upload to Nightscout or act as a follower app for Nightscout. However, it is difficult to actually get the xDrip4iOS app for your phone. </p> <p>\"How can I get xDrip4iOS on my iPhone?\" There are two options: 1. If you have a Mac and an Apple Developer account (99 EUR/USD per year) then you can build your own xDrip4iOS by following the instructions below:</p> <p>https://xdrip4ios.readthedocs.io/en/latest/install/build/</p> <p>If you want, you can then become a \"releaser\" and share a Personal Testflight with up to 100 other people to help them: https://xdrip4ios.readthedocs.io/.../personal_testflight/</p> <ol> <li>You join the XdripiOs Facebook group and monitor the posts\u2026 wait for somebody to offer an invitation to their Personal Testflight releases in the group.You are not permitted to ask for the app (read their group rules). </li> </ol> <p>An easier solution is therefore to download the Shuggah app. </p> <p>:::</p>"},{"location":"following-only/#shuggah","title":"Shuggah","text":"<p>App: </p> <p></p> <p></p> <p>\"What is Shuggah?\" A group of Ukrainian developers took the project code for xDrip4iOS (which is shared publicly on Github) and released it on the App Store under a business account (the app is free, and their intentions are good). The app had to be slightly modified to add a privacy statement and disclaimer to get past the review, but the rest of the app should be the same as xDrip4iOS. The Shuggah release is not officially managed by the xDrip4iOS developers so it cannot be guaranteed that it will function in the same way as xDrip4iOS, or that Apple won't remove it from the App Store at some point.</p> <p>The XdripiOs Facebook group supports xDrip4iOS, Shuggah, as well as the Apple Watch app. </p>"},{"location":"following-only/#f-sugarmate-ios","title":"F) Sugarmate (iOs)","text":"<p>Sugarmate is available to download onto iPhones from the App store. Sugarmate is compatible with: \u25cf   Apple iPhone (Requires software version 13.0 or later) \u25cf   Apple iPad (Requires software version 13.0 or later) \u25cf   Google Android (Save web app to your homescreen)</p> <p>It has been reported by users of Sugarmate that it can be used with Apple CarPlay in the USA to display glucose readings when driving. It is not yet established if this is possible in countries outside the USA. If you know more about this, please add details in here to the documentation by completing a pull-request (link) which is quick and easy to do. </p>"},{"location":"following-only/#g-spike-on-ios","title":"G)  Spike on iOS","text":"<p>Spike can be used as a primary receiver or as a follower app, providing BG, alarms and IOB and more. Whilst the website is no longer biDetails are here. Details and support can be found on Facebook and Gitter](https://gitter.im/SpikeiOS/Lobby). </p> <p>To install Spike, see here</p>"},{"location":"following-only/#2-smartwatches-for-monitoring-of-aaps-full-profile-data-or-glucose-only-where-aaps-is-running-on-a-phone","title":"2) Smartwatches for Monitoring of AAPS (full profile data, or glucose-only) where AAPS is running on a phone.","text":"<p>Smartwatch options which also allow interaction with AAPS are described in the \"remote control\" section of the documentation. </p> <p>There are a wide range of affordable smartwatches which can provide display only. If you are using Nightscout, then a good overview of all the options is here</p> <p>Here we summarise some of the follow-only watch options popular with AAPS users: </p>"},{"location":"following-only/#a-xiaomi-and-amazfit-watches","title":"a) Xiaomi and Amazfit watches","text":"<p>A developer called Artem has created xDrip integration for various smartwatch models, mostly for Xiaomi (e.g. Mi band) and Amazfit brands:</p> <p></p> <p>You can read more about them, including how to set-up at his website here. The advantage of these watches is that they are small and relatively affordable (the Xiaomi Mi Band 5 has a RRP of \u00a339.99 GBP). They are a popular option especially for kids and those with smaller wrists to wear.</p>"},{"location":"following-only/#b-pebble-watch","title":"b) Pebble watch","text":"<p>Pebble watches now discontinued) were on general sale from 2013 - 2016, and may still be available second-hand. Fitbit took over Pebble\u2019s assets. Pebble users can use the Urchin watchface to view Nightscout data. Displayed data options include IOB, currently active temp basal rate and predictions. If open looping you can use IFTTT to create an applet that says if a Notification has been received from AAPS  then send either an SMS or pushover notification.</p>"},{"location":"following-only/#c-bluejay-gts-watch","title":"c) Bluejay GTS watch","text":"<p>This is a unique piece of technology which can receive glucose data directly from the Dexcom G6 transmitter. It is not widely known that a Dexcom G6 transmitter actually broadcasts the current glucose data on two separate channels, a phone channel and a pump channel. The Bluejay GTS watch runs a modified version of Xdrip+ software, and can be set to receive glucose data on either channel, so if **AAPS **  is using the phone channel, then the Bluejay GTS watch can use the pump channel. </p> <p>The Bluejay GTS watch is small, waterproof and reasonably affordable (currently \u00a3115 GBP) and can be shipped internationally from the UK. The key advantage is that it is currently the only watch which is completely independent of both the phone and the looping system. So, for example, if you disconnect the pump and the AAPS  phone at the beach or flume park, and are out of range of the AAPS phone, you can still get readings from the Dexcom G6 directly to the Bluejay watch.</p> <p>Reported disadvantages are that it doesn\u2019t always pickup a reading every 5 min, and the battery is not replaceable. The Bluejay GTS watch runs a modified version of Xdrip+ software, and it currently doesn\u2019t work with other Dexcom versions (G7) or Libre sensors.  </p>"},{"location":"following-only/#d-apple-watch","title":"d) Apple watch","text":"<p>Check Nightscout on your watch: </p> <p>Options include Nightguard, sugarmate, Gluco-Tracker, nsapple and Loop Follow.</p>"},{"location":"following-only/#3-devices-for-following-aaps","title":"3) Devices for following AAPS","text":"<p>Devices include: A)  M5 stack/M5 stickC B)  Sugarpixel C) PC (Teamviewer)</p>"},{"location":"following-only/#a-m5-stack","title":"A) M5 stack","text":"<p>The M5Stack is a small box which can be programmed for many applications, one of which is displaying sensor glucose values and trends, IOB and COB. It is in a plastic box, equipped with a colour display, micro SD card slot, 3 buttons, speaker and internal battery. It is a great blood sugar monitor and is relatively easy to set-up if you have a Nightscout account. Users typically run it on their home wifi, but some users report using it as a display when motorbiking, by running it off a phone wifi hotspot. </p>"},{"location":"following-only/#b-sugarpixel","title":"B) Sugarpixel","text":"<p>SugarPixel is a device for secondary glucose display alert system for continuous glucose monitoring that connects with Dexcom app or Nightscout app on the user\u2019s smartphone. The device displays real time blood sugar readings. This CGM hardware monitor benefits from random tone generation audio alerts (which are incredibly loud), vibration alerts for hearing impaired, customisable display options and native multi-user following.</p> <p></p> <p></p> <p>\u25cf   SugarPixel has multiple display options in mg/dL and mmol/L to suit the user\u2019s needs with colour-coded glucose values. \u25cf   The standard face displays BG, Trend Arrow, and Delta. Delta is the change + or - from the last reading. \u25cf   SugarPixel can be customised for use in low brightness with the BG and Time face to see the user\u2019s BG reading and current time on the user\u2019s nightstand. \u25cf   SugarPixel\u2019s xolour face utilises the entire display to show a single colour representing the BG value. This enables the user to see BG readings at a distance through the window while outside playing in the backyard, patio, or pool. \u25cf   The Big BG face is useful for nightstand users who wear glasses or contact lenses.</p>"},{"location":"following-only/#c-pcteamviwer","title":"C) PC(Teamviwer)","text":"<p>Some users find a full remote access tool like TeamViewer to be helpful for advanced remote troubleshooting.  </p>"},{"location":"introduction/","title":"Introduction to APS and AAPS","text":""},{"location":"introduction/#what-is-an-artificial-pancreas-system","title":"What is an \u201cArtificial Pancreas System\u201d?","text":"<p>A human pancreas does a lot of things besides regulating blood sugar. However, the term \u201cArtificial Pancreas System\u201d (APS) usually refers to a system which works to automatically keep blood sugar levels within healthy limits.</p> <p>The most basic way to do this is by detecting glucose levels, using these values to do calculations, and then delivering the (predicted) right amount of insulin to the body. It repeats the calculation, every few minutes, 24/7. It uses alarms and alerts to inform the user if intervention or attention is needed. This system is typically made up of a glucose sensor, an insulin pump and an app on a phone.</p> <p>You can read more about the different artificial pancreas systems currently in use and in development in this 2022 review article:   </p> <p> Future Directions in Closed-Loop Technology.</p> <p>In the near future, some so-called \"dual-hormone\" systems will also have the ability to infuse glucagon alongside insulin, with the aim of preventing severe hypos and allowing even tighter blood glucose control.</p> <p>An artificial pancreas can be thought of as an \u201cautopilot for your diabetes\u201d. What does that mean?</p> <p>In an aircraft, an autopilot does not do the complete job of the human pilot, the pilot cannot sleep through the entire flight. The autopilot aids the work of the pilot. It relieves them of the burden of permanently monitoring the aircraft, allowing the pilot to concentrate on wider monitoring from time to time. The autopilot receives signals from various sensors, a computer evaluates them together with the pilot\u2019s specifications and then makes the necessary adjustments, alerting the pilot to any concerns. The pilot no longer has to worry about constantly making decisions.</p> <p></p>"},{"location":"introduction/#what-does-hybrid-closed-loop-mean","title":"What does hybrid closed loop mean?","text":"<p>The best solution for type 1 diabetes would be a \u201cfunctional cure\u201d (probably an implant of pancreatic cells which are protected from the immune system). While we are waiting for that, a \u201cfull closed loop\u201d artificial pancreas is probably the next best thing. This is a tech system that doesn\u2019t need any user input (like bolusing insulin for meals, or announcing exercise), with good regulation of blood glucose levels. At the moment, there are no widely available systems which are \u201cfull\u201d closed loop, they all need some user input. The currently available systems are called \u201chybrid\u201d closed loop, because they use a combination of automated technology and user input. </p>"},{"location":"introduction/#how-and-why-did-looping-start","title":"How and why did looping start?","text":"<p>The development of commercial technology for people with type 1 diabetes (T1D) is very slow. In 2013 the T1D community founded the #WeAreNotWaiting movement. They developed systems themselves using existing approved technology (insulin pumps and sensors) to improve blood glucose control, safety, and quality of life. These are known as DIY (do-it-yourself) systems, because they are not formally approved by health bodies (FDA, NHS etc). There are four main DIY systems available: OpenAPS, AAPS, Loop and iAPS. </p> <p>A great way to understand the fundamentals of DIY looping is to read Dana Lewis\u2019s book \u201cAutomated Insulin Delivery\u201d. You can access it here for free (or buy a hardcopy of the book). If you want to understand more about OpenAPS, which AAPS has developed from, the OpenAPS website is a great resource. </p> <p>Several commercial hybrid closed loop systems have been launched, the most recent of which are CamAPS FX (UK and EU) and Omnipod 5 (USA and EU). These are very different to DIY systems, mainly because they both include a \u201clearning algorithm\u201d which adjusts how much insulin is delivered according to your insulin needs from previous days. Many people in the DIY community have already tried out these commercial systems and compared them with their DIY system. You can find out more about how the different systems compare by asking on the dedicated Facebook groups for these systems, on the AAPS Facebook group or on Discord.</p>"},{"location":"introduction/#what-is-android-aps-aaps","title":"What is Android APS (AAPS)?","text":"<p>Figure 1. Basic outline of the Android APS (Artificial Pancreas System), AAPS.</p> <p>Android APS (AAPS) is a hybrid closed loop system, or Artificial Pancreas System  (APS). It makes its insulin dosing calculations using established OpenAPS algorithms (a set of rules) developed by the #WeAreNotWaiting type 1 diabetes community. </p> <p>Since OpenAPS is only compatible with certain older insulin pumps, AAPS (which can be used with a wider range of insulin pumps) was developed in 2016 by Milos Kozak, for a family member with type 1 diabetes. Since those early days, AAPS has been continually developed and refined by a team of volunteer computer developers and other enthusiasts who have a connection to the type 1 diabetes world. Today, AAPS is used by approximately 10,000 people. It is a highly customisable and versatile system, and because it is open-source, it is also readily compatible with many other open-source diabetes softwares and platforms. The fundamental components of the current AAPS system are outlined in Figure 1 above.</p>"},{"location":"introduction/#what-are-the-basic-components-of-aaps","title":"What are the basic components of AAPS?","text":"<p>The \u201cbrain\u201d of AAPS is an app which you build yourself. There are detailed step-by-step instructions for this. You then install the AAPS  app on a compatible Android smartphone (1). A number of users prefer their loop on a separate phone to their main phone. So, you don\u2019t necessarily have to be using an Android phone for everything else in your life, just for running your AAPS loop.  </p> <p>The Android smartphone will also need to have another app installed on it as well as AAPS. This is either a modified Dexcom app called build-your-own dexcom app BYODA or Xdrip+. This additional app receives glucose data from a sensor (2) by bluetooth, and then sends the data internally on the phone to the AAPS app. </p> <p>The AAPS app uses a decision making process (algorithm) from OpenAPS. Beginners  start out using the basic oref0 algorithm, but it is possible to switch to using the newer oref1 algorithm as you progress with AAPS. Which algorithm you use (oref0 or oref1), depends on which suits your specific situation best.  In both cases, the algorithm takes into account multiple factors, and performs rapid calculations every time a new reading comes in from the sensor. The algorithm then sends instructions to the insulin pump (3) on how much insulin to deliver by bluetooth. All the information can be sent by mobile data or wifi to the internet (4). This data can also be shared with followers if desired, and/or collected for analysis.</p>"},{"location":"introduction/#what-are-the-advantages-of-the-aaps-system","title":"What are the advantages of the AAPS system?","text":"<p>The OpenAPS algorithm used by AAPS controls blood sugar levels in the absence of user input, according to the users\u2019 defined parameters (important ones being basal rates, insulin sensitivity factors, insulin-to-carb ratios, duration of insulin activity etc.), reacting every 5 minutes to the new sensor data. Some of the reported advantages of using AAPS are extensive fine-tunable options, automations and increased transparency of the system for the patient/caregiver. This can result in better control over your (or your dependant\u2019s) diabetes, which in turn may give improved quality of life and increased peace of mind.  </p>"},{"location":"introduction/#specific-advantages-include","title":"Specific advantages include:","text":""},{"location":"introduction/#1-safety-built-in","title":"1) Safety built-in","text":"<p>To read about the safety features of the algorithms, known as oref0 and oref1, click here. The user is in control of their own safety constraints.  </p>"},{"location":"introduction/#1-hardware-flexibility","title":"1) Hardware flexibility","text":"<p>AAPS works with a wide range of insulin pumps and sensors. So for example, if you develop an allergy to Dexcom sensor patch glue, you could switch to using a Libre sensor instead. That offers flexibility as life changes. You don't have to rebuild or reinstall the AAPS app, just tick a different box in the app to change your hardware. AAPS is independent of particular pump drivers and also contains a \"virtual pump\" so users can safely experiment before using it on themselves. </p>"},{"location":"introduction/#2-highly-customisable-with-wide-parameters","title":"2) Highly customisable, with wide parameters","text":"<p>Users can easily add or remove modules or functionality, and AAPS can be used in both open and closed loop mode. Here are some examples of the possibilities with the AAPS system:</p> <p>a) The ability to set a lower glucose target 30 min before eating; you can set the target as low as 72 mg/dL (4.0 mmol/L).</p> <p>b) If you are insulin-resistant resulting in high blood sugars, AAPS allows you to set an automation rule  to activate when BG rises above 8 mmol/L (144 mg/dL), switching to (for example) a 120% profile (resulting in an 20% increase in basal and strengthening of other factors too, compared to your normal profile setting). The automation will last according to the scheduled time you set. Such an automation could be set to only be active on certain days of the week, at certain times of day, and even at certain locations.</p> <p>c) If your child is on a trampoline with no advance notice, AAPS allows insulin  suspension for a set time period, directly via the phone.</p> <p>d) After reconnecting a tubed pump which has been disconnected for  swimming, AAPS will calculate the basal insulin you have missed while disconnected and deliver it carefully, according to your current BG. Any insulin not required can be overridden by just \u201ccancelling\u201d the missed basal.</p> <p>e) AAPS has the facility for you to set different profiles for different situations and easily switch between them. For example, features which make the algorithm quicker to bring down elevated BG (like supermicro boluses (\u201cSMB\u201d), unannounced meals, (\u201cUAM\u201d) can be set to only work during the daytime, if you are worried about night-time hypos. </p> <p>These are all examples, the full range of features gives huge flexibility for daily life including sport, illness, hormone cycles etc. Ultimately, it is for the user to decide how to use this flexibility, and there is no one-size-fits-all automation for this.</p>"},{"location":"introduction/#3-remote-monitoring","title":"3) Remote monitoring","text":"<p>There are multiple possible monitoring channels (Sugarmate, Dexcom Follow, Xdrip+, Android Auto etc.) which are useful for parents/carers and adults in certain scenarios (sleeping/driving) who need customisable alerts. In some apps (Xdrip+) you can also turn alarms off totally, which is great if you have a new sensor \u201csoaking\u201d or settling down that you don\u2019t want to loop with yet.</p>"},{"location":"introduction/#4-remote-control","title":"4) Remote control","text":"<p>A significant advantage of AAPS over commercial systems is that it is possible for followers, using authenticated text (SMS) commands or via an app (Nightscout or AAPSClient) to send a wide range of commands back to the AAPS system. This is used extensively by parents of kids with type 1 diabetes who use AAPS. It is very useful: for example, in the playground, if you want to pre-bolus for a snack from your own phone, and your child is busy playing. It is possible to monitor the system (e.g. Fitbit), send basic commands (e.g. Samsung Galaxy watch 4), or even run the entire AAPS system from a high-spec smartwatch (5) (e.g. LEMFO LEM14). In this last scenario, you don\u2019t need to use a phone to run AAPS. As battery life on watches improves and technology becomes more stable, this last option is likely to become increasingly attractive.</p>"},{"location":"introduction/#5-no-commercial-constraints-due-to-open-application-interfaces","title":"5) No commercial constraints, due to open application interfaces","text":"<p>Beyond the use of an open-source approach, which allows the source code of AAPS to be viewed at any time, the general principle of providing open programming interfaces gives other developers the opportunity to contribute new ideas too. AAPS is closely integrated with Nightscout. This accelerates development and allows users to add on features to make life with diabetes even more convenient. Good examples for such integrations are NightScout, Nightscout Reporter, Xdrip+, M5 stack etc. There is ongoing dialogue between open-source developers and those developing commercial systems. Many of the DIY innovations are gradually adopted by commercial systems, where developments are understandably slower, partly because interfaces between systems from different companies (pumps, apps, sensors etc) need to be carefully negotiated and licenced. This can also slow innovations which are convenient for the patient (or a small sub-population of patients, who have a very specific requirement) but do not generate any sizable profit. </p>"},{"location":"introduction/#6-detailed-app-interface","title":"6) Detailed app interface","text":"<p>With AAPS it is easy to keep track of things like: pump insulin levels, cannula age, sensor age, pump battery age, insulin-on-board etc. Many actions can be done through the AAPS app (priming the pump, disconnecting the pump etc.), instead of on the pump itself, which means the pump can stay in your (or your dependant's) pocket or belt. </p>"},{"location":"introduction/#7-accessibility-and-affordability","title":"7) Accessibility and affordability","text":"<p>AAPS gives people who currently can\u2019t afford to self-fund, or don\u2019t have funding/insurance, access to a world-class hybrid closed looping system which is conceptually years ahead, in terms of development, of the commercial systems. You currently need to have a Nightscout account to set up AAPS, although the Nightscout account is not required for day-to-day running of the AAPS loop. Many people continue to use Nightscout for collecting their data, and for remote control. Although AAPS itself is free, setting up Nightscout through one of the various platforms may incur a fee (\u20ac0 - \u20ac12), depending on what level of support you want (see comparison table) and whether you want to keep using Nightscout after setup or not. AAPS works with a wide range of affordable (starting from approx \u20ac150) Android phones. Different versions are available for specific locations and languages, and AAPS can also be used by people who are blind.</p>"},{"location":"introduction/#8-support","title":"8) Support","text":"<p>No automated insulin delivery system is perfect. Commercial and open-source systems share many common glitches in both communications and temporary hardware failure. There is support available from community of AAPS users on Facebook, Discord and Github who designed, developed and are currently using AAPS, all over the world. There are also Facebook support groups and help from clinic/commercial companies for the commercial APS systems -  it is worth speaking to the users, or former users of these systems to get feedback on the common glitches, the quality of the education programme and the level of ongoing support provided.</p>"},{"location":"introduction/#9-predictability-transparency-and-safety","title":"9) Predictability, transparency and safety","text":"<p>AAPS is totally transparent, logical and predictable, which may make it easier to know when a setting is wrong, and to adjust it accordingly. You can see exactly what the system is doing, why it is doing it, and set its operational limits, which puts the control (and responsibility) in your hands. This can provide the user with confidence, and a sounder sleep. </p>"},{"location":"introduction/#10-access-to-advanced-features-through-development-dev-modes-including-full-closed-loop","title":"10) Access to advanced features through development (dev) modes including full closed loop","text":"<p>This AAPS documentation focuses on the mainstream \u201cmaster\u201d branch of AAPS. However, research and development is going on all the time. More experienced users may wish to explore the experimental features in the development branch. This includes integration of Dexcom G7, and automatically adjusting insulin delivery according to short-term sensitivity changes (DYNISF). The development innovations focus on strategies for full closed looping (not having to bolus for meals etc.), and generally trying to make life with type 1 diabetes as convenient as possible.</p>"},{"location":"introduction/#11-ability-to-contribute-yourself-to-further-improvements","title":"11) Ability to contribute yourself to further improvements","text":"<p>Type 1 diabetes can be highly frustrating and isolating. Having control over your own diabetes tech, with the possibility to \u201cpay it forward\u201d as soon as you are making progress by helping others on their journey can be really rewarding. You can educate yourself, discover the roadblocks and look for, and even contribute, to new developments and the documentation. There will be others in the community with the same quest that you can bounce ideas off and work with. This is the essence of #WeAreNotWaiting.</p>"},{"location":"introduction/#how-does-aaps-compare-to-mdi-and-open-looping","title":"How does AAPS compare to MDI and open looping?","text":"<p>Multiple daily injections (MDI, (a) in Figure 2 below) usually involve giving an injection of a long-lasting insulin (e.g. Tresiba) once a day, with injections of faster-acting insulin (e.g. Novorapid, Fiasp) at mealtimes, or for corrections. Open pumping (b) involves using a pump to deliver basal at pre-programmed rates of rapid-acting insulin, and then boluses through the pump at mealtimes or for corrections. The basics of a looping system are that the looping app uses the sensor glucose data to instruct the pump to stop insulin delivery when it predicts you are heading for a low, and to give you extra insulin if your glucose levels are rising and predicted to go too high (c). Although this figure is oversimplified compared to real-life, it aims to demonstrate the key differences of the approaches. It is possible to achieve exceptionally good glucose control with any of these three approaches. </p> <p></p> <p>Figure 2. Basic overview of (a) MDI, (b) open-loop pumping and (c) hybrid closed loop pumping. </p>"},{"location":"introduction/#how-does-aaps-compare-to-other-looping-systems","title":"How does AAPS compare to other looping systems?","text":"<p>As of June 25 2023, there are four major open source closed loop systems available: OpenAPS, AAPS, Loop and iAPS, (formerly FreeAPS X). The features of the different systems are shown in the table below:</p> <p>The features of the different systems are shown in the table below:</p> Devicestype Name AAPS Loop Open APS iAPS Phone Android Phone iPhone Rig tiny computer (1) PUMP Dana I PUMP Dana RS PUMP Dana R PUMP Omnipod (Dash) (2) PUMP Omnipod (Eros) PUMP Diaconn G8 PUMP EOPatch 2 PUMP Medtrum TouchCare Nano PUMP Medtrum TouchCare 300U PUMP Roche Combo PUMP Roche Insight PUMP Older Medtronic CGM Dexcom G7 CGM Dexcom One CGM Dexcom G6 CGM Dexcom G5 CGM Dexcom G4 CGM Libre 3 CGM Libre 2 CGM Libre 1 CGM Eversense CGM MM640g/MM630g CGM PocTech CGM Nightscout as BG Source <p>Table notes:  1. A rig is a small computer which you carry around with you, without a monitor. One supported device type is Intel Edison + Explorer Board and the other Raspberry Pi + Explorer HAT or Adafruit RFM69HCW Bonnet. The first APS were based on this setup, as mobile phones were not capable of running the required algorithms. Use of these systems has declined, as the setup on mobile phones has become easier, and phones have a display included. Intel has also stopped selling the Intel Edison. The excellent OpenAPS algorithms oref0 and oref1 are now incorporated in AAPS and iAPS. 2. Omnipod Dash is the successor of Omnipod Eros. It supports bluetooth communication and does not need a rig gateway to communicate between the Omnipod and mobile phone. If you have a choice, we recommend use of the Dash instead of Eros.</p> <p>An international peer-reviewed consensus statement containing practical guidance on open source looping was written by and for health-care professionals, and published in a leading medical journal in 2022: Lancet Diabetes Endocrinol, 2022; 10: 58\u201374(1). It is well worth a read (including for your diabetes clinic) and summarises the main technical differences between the different open-source hybrid closed loop systems. </p> <p>It is hard to get a \u201cfeel\u201d for any system without using it, or talking to others who are using it, so do reach out to others on Facebook/Discord and ask. Most people find that AAPS is incredibly sophisticated in comparison to other hybrid closed loop systems (particularly the commercial systems), with a huge number of potentially customisable settings and features,  discussed above. Some people can find this a little overwhelming in the beginning, but there is no rush to investigate all the possibilities at once, you can progress as slowly or as fast as you would like, and there is help available at every step of the way.  </p>"},{"location":"introduction/#does-aaps-use-artificial-intelligence-or-any-learning-algorithm","title":"Does AAPS use artificial intelligence or any learning algorithm?","text":"<p>The current master version of AAPS (3.1.0.3) does not have any machine learning algorithms, multiple-parameter insulin response models, or artificial intelligence. As such, the system is open and transparent in how it works, and has the ability to be understood not just by experts, but also by clinicians and patients. It also means that if you have a sharply varying schedule (maybe switching from a stressful week at work to a relaxing holiday) and are likely to need a significantly different amount of insulin, you can immediately switch AAPS to run a weaker/stronger customised profile. A \u2018learning system\u2019 will do this adjustment for you automatically, but is likely to take longer to adjust the insulin delivery.   </p>"},{"location":"introduction/#which-system-is-right-for-me-or-my-dependant","title":"Which system is right for me or my dependant?","text":"<p>Practically, your choice of system is often restricted by which pump you already have, or can obtain from your medical provider, and your choice of phone (Apple or Android). If you don\u2019t yet have a pump you have the biggest choice of systems. Technology is continually evolving, pumps are being discontinued and new pumps and sensors are being released. Most open-source systems work with the main sensors (Libre and Dexcom) or are quickly adapted to work with new sensors a year or so after they are released (with a bit of time delay for safety and stability testing). </p> <p>Most AAPS users report more time in range, HbA1c reductions, as well as quality of life improvements from having a system that can auto-adjust basal rates overnight during sleep, and this is true for most hybrid closed loop systems. Some people have a preference for a very simple system which is not very customisable (which means you may prefer a commercial system), and others find this lack of control very frustrating (you may prefer an open-source system). If you (or your dependant) are newly diagnosed, a common route is to get used to using MDI plus a glucose sensor first, then progress to a pump which has the potential for looping, then progress to AAPS, but some people (especially small kids) may go straight to a pump.</p> <p>It is important to note that the AAPS user needs to be proactive to troubleshoot and fix problems themselves, with help from the community. This is a very different mindset to that when using a commercial system. With AAPS a user has more control, but also the responsibility, and needs to be comfortable with that. </p>"},{"location":"introduction/#is-it-safe-to-use-open-source-systems-like-aaps","title":"Is it safe to use open-source systems like AAPS?","text":""},{"location":"introduction/#safety-of-the-aaps-system","title":"Safety of the AAPS system","text":"<p>A more accurate question is probably \u201cis it safe compared with my current insulin delivery system?\u201d since no method of insulin delivery is without risk. There are many checks and balances in place with AAPS. A recent paper looked at the use of AAPS in a computer simulated set-up, which was an effective way to unobjectively trial how safe and effective the system is. More generally, it is estimated that over 10,000 individuals worldwide are using open-source automated-insulin delivery systems, and uptake continues to increase globally.</p> <p>Any device that uses radio communications could be hacked, and this is true for a non-looping insulin pump as well. Currently, we are not aware of anyone attempting to harm individuals by hacking their diabetes-related medical equipment. However, there are multiple ways to protect against such risks:  </p> <ol> <li> <p>In the pump settings, limit both the max bolus allowed and max temporary basal settings to amounts that you believe are safest. These are hard limits that we do not believe any malicious hacker could circumvent. </p> </li> <li> <p>Set your CGM alarms enabled for both highs and lows. </p> </li> <li> <p>Monitor your insulin delivery online. Nightscout users can set additional alarms to alert for a wide variety of conditions, including conditions that are much more likely to occur than a malicious attack. In addition to highs and lows, Nightscout can display diagnostic data useful for verifying that the pump is operating as desired, including current IOB, pump temporary basal history, pump bolus history. It can also be configured to proactively alert users to undesirable conditions, such as predicted highs and lows, low insulin reservoir, and low pump battery.</p> </li> </ol> <p>If a malicious attack was made on your insulin pump, these strategies would significantly mitigate the risk. Every potential AAPS user needs to weigh the risks associated with using AAPS, versus the risks of using a different system.  </p>"},{"location":"introduction/#safety-considerations-around-improving-blood-glucose-control-too-fast","title":"Safety considerations around improving blood glucose control too fast","text":"<p>A rapid reduction in HbA1c and improved blood glucose control sounds appealing. However, reducing average blood glucose levels too fast by starting any closed loop system can cause permanent damage, including to the eyes, and painful neuropathy that never goes away. This damage can be avoided simply by reducing levels more slowly. If you currently have an elevated HbA1c and are moving to AAPS (or any other closed loop system), please discuss this potential risk with your clinical team before starting, and agree a timeplan with them. More general information on how to reduce your glucose levels safely, including links to medical literature is given in the [safety section here. </p>"},{"location":"introduction/#medical-safety-around-devices-consumable-supplies-and-other-medications","title":"Medical safety around devices, consumable supplies and other medications","text":"<p>Use a tested, fully functioning FDA or CE approved insulin pump and CGM for an artificial pancreas loop. Hardware or software modifications to these components can cause unexpected insulin dosing, causing significant risk to the user. If you find or get offered broken, modified or self-made insulin pumps or CGM receivers, do not use these for creating an AAPS system. </p> <p>Use original supplies such as inserters, cannulas and insulin containers approved by the manufacturer of your pump and CGM. Using untested or modified supplies can cause CGM inaccuracy and insulin dosing errors. Insulin is highly dangerous when misdosed - please do not play with your life by hacking your supplies.</p> <p>Do not take SGLT-2 inhibitors (gliflozins) when using AAPS as they incalculably lower blood sugar levels. Combining this effect with a system that lowers basal rates in order to increase BG is dangerous, there is more detail about this in the main safety section.</p> <p>(introduction-how-can-i-approach-discussing-aaps-with-my-clinical-team)=</p>"},{"location":"introduction/#how-can-i-approach-discussing-aaps-with-my-clinical-team","title":"How can I approach discussing AAPS with my clinical team?","text":"<p>Users are encouraged to speak with their clinicians about their intention to use AAPS. Please do not be afraid to have an honest conversation with your diabetes team if you intend to use AAPS (or any other DIY loop, for that matter). Transparency and trust between patient and doctor is paramount. </p>"},{"location":"introduction/#suggested-approach","title":"Suggested approach:","text":"<p>Start a conversation with your clinician to determine their familiarity and attitude towards diabetic technology such as CGMs,  pumps, hybrid loops and commercial looping. Your clinician/endocrinologist should be aware of the basic technology and be willing to discuss with you recent advancements with commercial loop products available within their regions. </p>"},{"location":"introduction/#local-precedent","title":"Local precedent","text":"<p>Obtain your clinicians/endocrinologists\u2019 views on DIY loop vs commercial looping, and gauge their knowledge in this area. Are they familiar with AAPS and can they share with you any helpful experience of working with patients with DIY looping?</p> <p>Ask if your team has any patients under their care who already use DIY looping. Due to patient confidentiality, doctors cannot pass other patient\u2019s details to you without obtaining the individual\u2019s consent. However, if you want to, you can ask them to pass your contact details to an existing DIY looping patient if there is one the clinician feels you might \"click\u201d with, suggesting that you would be happy for the patient to contact you to discuss DIY looping. Clinicians are not obliged to do this, but some are happy to, since they realise the importance of peer-to-peer support in type 1 diabetes management. You may also find it useful to meet local friendly DIY loopers. This is of course up to you, and not entirely necessary.  </p>"},{"location":"introduction/#national-and-international-precedent","title":"National and International Precedent","text":"<p>If you feel unsupported by your team to loop with AAPS, the following discussion points may help: </p> <p>a) The AAPS system has been designed BY patients and their caregivers. It has been designed ultimately for safety, but also drawing on in-depth patient experience. There are currently around 10,000 AAPS users worldwide. There is therefore likely to be other patients using DIY looping in your clinic's patient population (whether they know about it or not). </p> <p>b) Recent peer-reviewed published guidance in the internationally leading medical journal The Lancet(1) has confirmed that DIY loops are safe and effective at improving diabetic control, including time in range. There are regular articles in leading journals like Nature(3) which highlight the progress of the DIY looping commmunity. </p> <p>c) Starting with AAPS involves a gradual migration from \u201copen\u201d loop pumping, through low-glucose suspend, through to hybrid \u201cclosed\u201d looping, by completing a number of objectives. There is therefore a structured programme, requiring the user to demonstrate a level of competence at each stage and fine-tuning their basic settings (basal, ISF and ICR) before they can close the loop. </p> <p>d) Technical support is available to you from the DIY community through Github, Discord and Facebook closed groups. </p> <p>e) You will be able to provide both CGM and insulin looping/pumping information as combined reports at clinic meetings (through Nightscout or Tidepool), either printed out or on-screen (if you bring a laptop/tablet). The streamlining of both CGM and insulin data will allow more effective use of your clinician\u2019s time to review your reports and aid their discussions in assessing your progress.</p> <p>f) If there is still strong objection from your team, hand your clinician printouts of the reference articles linked here in the text, and give them the link to the AAPS clinicians section: For Clinicians \u2013 A General Introduction and Guide to AAPS</p>"},{"location":"introduction/#support-for-diy-looping-by-other-clinicians","title":"Support for DIY looping by other clinicians","text":"<p>The paper published in the Lancet Diabetes Endocrinology(1)[ (co led by Kings\u2019 and Guy\u2019s and St Thomas\u2019 NHS Foundation Trust, and co lead by Dr Sufyan Hussain, a consultant diabetologist and honorary senior lecturer from King\u2019s in London) provides:</p> <p>a) Assurance for professionals that DIY artificial pancreas systems/ open source as a \u201csafe and effective treatment\u201d option for type 1 diabetes and provides guidance on recommendations, discussions, supports, documentation;</p> <p>b) Recognition that open-source automated insulin delivery (\u201cAID\u201d) systems can increase time in range (TIR) while reducing variability in blood glucose concentrations and the amount of hypo and hyperglycaemic episodes in various age groups, genders and communities;</p> <p>c) Recommendation that healthcare workers should support type 1 patients or their caregivers who choose to manage their diabetes with an open source AID system;</p> <p>d) Recommendation that healthcare workers should attempt to learn about all treatment options that might benefit patients including available open-source AID systems.  If health care professionals do not have resources to educate themselves, or have legal or regulatory concerns, they should consider cooperating, or teaming up with other healthcare professionals who do;</p> <p>e) Emphasis that all users of CGMs should have real-time and open-access to their own health data at all times</p> <p>f) Emphasis that these open source systems have not undergone the same regulatory evaluations as commercially available medical technologies, and there is no commercial technical support. However, extensive community support is available; and</p> <p>g) A recommendation that regulation and legal frameworks should be updated to ensure clarity on permitting ethical and effective treatment of such open source systems.</p> <p>Another paper in Medical Law International, 2021(4) also highlights the UK General Medical Council\u2019s \u2018consent guidance\u2019 places a strong emphasis on doctor and patients making decisions together. The doctor should explain the potential benefits, risks, burdens and side-effects on DIY APS and may recommend a particular option without pressuring the patient. </p> <p>Ultimately it is up to the patient to weigh up these factors, along with any non-clinical issues relevant to them and decide which treatment option, if any, to accept. </p> <p>If a doctor discovers in a clinic that their patient is looping with a DIY system, they are not exempted from their obligations to monitor the patient, simply because they did not prescribe the particular piece of technology the patient is using; clinicians must continue to monitor patients.</p> <p>Doctors (at least in the UK) are not prohibited from prescribing unlicensed medicines and can use their clinical discretion. They should therefore use their clinical judgement to decide if a DIY APS is suitable for a specific patient, and discuss what they consider to be the pros and cons with the patient.</p>"},{"location":"introduction/#the-articles-referenced-above-and-other-useful-links-and-position-statements-are-listed-below","title":"The articles referenced above, and other useful links and position statements are listed below:","text":"<ol> <li>Open-source automated insulin delivery: international consensus statement and practical guidance for health-care professionals  Lancet Diabetes Endocrinol, (2022) 10, 58\u201374</li> <li>In Silico Trials of an Open-Source Android-Based Artificial Pancreas: A New Paradigm to Test Safety and Efficacy of Do-It-Yourself Systems, 2020</li> <li>A DIY \u2018bionic pancreas\u2019 is changing diabetes care \u2014 what's next? Nature (2023), 620, 940-941</li> <li>Prescribing unapproved medical devices? The case of DIY artificial pancreas systems Medical law international, (2021), 21, 42-68</li> <li>Berlin Institute of Health position statement, 2022</li> <li>Do-It-Yourself Automated Insulin Delivery: A Health-care Practitioner User\u2019s Guide (Diabetes Canada position and guide) Canadian Journal of Diabetes, (2023)47, E8, 389-397</li> <li>Netherlands (EN/NL) - for clinicians - how to help people on open source automated insulin delivery systems</li> <li>First Use of Open-Source Automated Insulin Delivery AndroidAPS in Full Closed-Loop Scenario: Pancreas4ALLRandomized Pilot Study Diabetes Technol. Ther., 25, 5, 2023</li> <li>Pre-school and school-aged children benefit from the switch from a sensor-augmented pump to an AndroidAPS hybrid closed loop: A retrospective analysis Pediatr. Diabetes  2021, 22, 594-604. 2021</li> <li>Outcomes of the OPEN project, an EU-funded project into the Outcomes of Patient\u2019s Evidence with Novel, Do-it-Yourself Artificial Pancreas Technology (https://www.open-diabetes.eu/publications)</li> </ol>"},{"location":"introduction/#why-cant-i-just-download-aaps-and-use-it-straight-away","title":"Why can\u2019t I just download AAPS and use it straight away?","text":"<p>The AAPS app is not provided in Google Play - you have to build it from source code by yourself for legal reasons. AAPS is unlicensed, meaning that it does not have approval by any regulatory body authority in any country. AAPS is deemed to be carrying out a medical experiment on yourself, and is carried out at the user\u2019s own risk.</p> <p>Setting up the system requires patience, determination and the gradual development of technical knowledge. All the information and support can be found in these documents, elsewhere online, or from others who have already done it. Over 10,000 people have successfully built and are currently using AAPS worldwide. </p> <p>The developers of AAPS take safety incredibly seriously, and want others to have a good experience of using AAPS. That is why it is essential that every user (or carer, if the user is a child):</p> <ul> <li> <p>builds the AAPS system themself and works through the objectives so that they have reasonably good personalised settings and understand the basics of how AAPS works by the time they \u201cclose the loop\u201d;</p> </li> <li> <p>backs up their system by exporting and saving important files (like keystore and settings .json file) somewhere safe, so you can setup again quickly if needed;</p> </li> <li> <p>updates to newer master versions as and when they become available; and</p> </li> <li> <p>maintains and monitors the system to ensure it is working properly.    </p> </li> </ul>"},{"location":"introduction/#what-is-the-connectivity-of-the-aaps-system","title":"What is the connectivity of the AAPS system?","text":"<p>Figure 3 (below) shows one example of the AAPS system for a user who do not require any followers interacting with the system. Additional open-source software and platforms which are not shown can also be integrated.  </p> <p></p> <p>Figure 4 (below) shows the full potential of the AAPS system for a user who has followers and requires a monitor and send adjust the system remotely (like a child with type 1 diabetes). Additional open-source software and platforms which are not shown can also be integrated.  </p> <p></p>"},{"location":"introduction/#how-does-aaps-get-continually-developed-and-improved","title":"How does AAPS get continually developed and improved?","text":"<p>Most AAPS users use the fully tested master version of AAPS, which has been tested for bugs and problems, before being released to the community. Behind the scenes, the developers try out new improvements, and test these out in \u201cdeveloper\u201d (dev) versions of AAPS with a user community who are happy to do bug updates at short notice. If the improvements work well, they are then released as a new \u201cmaster\u201d version of AAPS. Any new master release is announced on the Facebook group, so that the mainstream AAPS users can read about and update to the new master version. </p> <p>Some experienced and confident AAPS users conduct experiments with emerging technologies and with dev versions of the AAPS app, which can be interesting for the less adventurous users to read about, without having to do it themselves! People tend to share these experiments on the Facebook group too. </p> <p>You can read more about some of these experiments and discussion on emerging tech here: </p> <p>Tim Street https://www.diabettech.com/</p> <p>David Burren https://bionicwookie.com/</p>"},{"location":"introduction/#who-can-benefit-from-aaps","title":"Who can benefit from AAPS?","text":"User Type \u2714\ufe0f type 1 diabetic \u2714\ufe0f caregiver or parent of a type 1 diabetic \u2714\ufe0f blind users type 1 diabetic \u2714\ufe0f *clincians and healthcare professionals <p>The above table assumes that the user has access to both continuous gluocse monitor and insulin pump. </p> <p>All data from AAPS* can be made available to healthcare professionals via data sharing platforms, including Nightscout that provides logging and real time monitoring of CGM data, insulin delivery, carbohydrate entries, predictions and settings. Nightscout records include daily and weekly reports which can aid healthcare professionals' discussions with type 1 patients with more accurate data on glycemic control and any behavioural considerations.</p>"},{"location":"introduction/#accessibility-for-users-aaps-who-are-partially-or-completely-blind","title":"Accessibility for users AAPS who are partially or completely blind","text":""},{"location":"introduction/#day-to-day-aaps-use","title":"Day to day AAPS use:","text":"<p>AAPS can be used by blind people. On Android devices, the operating system has a program called TalkBack. This allows screen orientation via voice output as part of the operating system. By using TalkBack you can operate both your smartphone and AAPS without needing to be able to see. </p>"},{"location":"introduction/#building-the-aaps-app","title":"Building the AAPS app:","text":"<p>As a user you will build the AAPS app in Android Studio. Many people use Microsoft Windows for this purpose, where there is the Screenreader analogous to TalkBack. Since Android Studio is a Java application, the \u201cJava Access Bridge\u201d component must be enabled in the Control Panel. Otherwise, the screen reader of the PC will not speak in Android Studio.</p> <p>How you do this depends on your operating system, two methods are outlined below: </p> <p>1) In the Windows Start menu, enter \u201cControl Panel\u201d in the search field, open with Enter. It opens: \u201cAll Control Panel Items\u201d.</p> <p>Open the \"Ease of Access Centre\".</p> <p>Then open \u201cUse computer without a display\u201d with Enter.</p> <p>Under hear text read aloud select \"turn on narrator\" and \"turn on audio display\", and click \"apply\"</p> <p>or:</p> <p>2) Press Windows key and enter \u201cControl Panel\u201d in the search field, open with Enter. It opens: \u201cAll Control Panel Items\u201d.</p> <p>Press the letter C to get to \u201cCenter for Ease of Use\u201d, open with Enter.</p> <p>Then open \u201cUse computer without a screen\u201d with Enter.</p> <p>There, at the bottom, you will find the checkbox \u201cEnable Java Access Bridge\u201d, select it.</p> <p>Done, just close the window! The screen reader should work now.</p>"},{"location":"introduction/#what-benefits-can-i-get-from-aaps","title":"What benefits can I get from AAPS?","text":"<p>With investment of your time, AAPS can potentially lead to:</p> <ul> <li> <p>alleviating the stress and burden of managing type 1 diabetes;</p> </li> <li> <p>reducing the multitude of mundane decisions that arise from type 1 diabetes;</p> </li> <li> <p>the provision of personalised and dynamic insulin dosing based on real-time data which can cut down the need for hypo treatments and reduce hyperglycemia episodes;</p> </li> <li> <p>an increased knowledge of insulin management and confidence to better fine tune your settings;</p> </li> <li> <p>the ability to create automatic settings (automations) that are tailored to fit in with your lifestyle;</p> </li> <li> <p>improved sleep quality and overall reduction in the frequency of nighttime interventions;</p> </li> <li> <p>remote monitoring and administration of insulin delivery for caregivers of type 1 diabetics; and</p> </li> <li> <p>streamlining of all your portable diabetic equipment (continuous glucose monitor receiver and insulin controlling devices) by using an Android phone controlled by AAPS. </p> </li> </ul> <p>Ultimately, AAPS can empower individuals to better manage their diabetes, resulting in stable blood sugars and improved long term health outcomes.</p> <p>Interested in how to get started with setting up AAPS? Take a look at the preparing section.</p>"},{"location":"preparing/","title":"Preparing to start with AAPS","text":""},{"location":"preparing/#overview-of-the-aaps-documentation","title":"Overview of the AAPS documentation","text":"<p>Welcome. This documentation aims to guide users on every aspect of the Do-It-Yourself (DIY) system, Android Artificial Pancreas System (AAPS), which is also commonly referred to as \u2018looping\u2019.</p> <p>An expanded index of the documentation can be found here, and you can also use the tabs on the left of the page to navigate through the different sections. The glossary explains terms that you may not be familiar with. </p> <p>(preparing-safety-first)=</p>"},{"location":"preparing/#safety-first","title":"Safety First","text":"<p>\u201cWith great power comes great responsibility\u2026\u201d</p>"},{"location":"preparing/#technical-safety","title":"Technical safety","text":"<p>AAPS has an extensive set of safety features. These impose constraints which are gradually removed through staged completion of a series of Objectives which involve testing specific parameters and answering multiple choice questions. AAPS features are unlocked as the Objectives are successfully completed. This process allows the user to migrate safely in stages from Open Loop to Closed Loop, while learning about the different features of AAPS.</p> <p>The Objectives have been designed to achieve the best possible introduction to AAPS, taking into consideration the typical errors and general trends AAPS developers have observed with new users. Mistakes can happen because the beginner is inexperienced and too eager to get started with AAPS, or has overlooked key points. The Objectives aim to minimise these issues. </p>"},{"location":"preparing/#medical-safety","title":"Medical safety","text":"<p>:::{admonition} Avoid permanent and painful damage to your eyes and nerves :class: danger Caution is advised concerning rapid improvements in blood glucose control and lowering of HbA1c  :::</p> <p>An important safety consideration is that a rapid reduction in HbA1c and improved blood glucose control in those who have had elevated glucose levels for some time can cause permanent damage. Many people with diabetes are unaware of this, and not all clinicans make their patients aware of this issue. </p> <p>This damage can include sight loss, and permanent neuropathy (pain). It is possible to avoid this damage occuring, by reducing average glucose levels more slowly. If you currently have an elevated HbA1c and are moving to AAPS (or any other closed loop system), please discuss this potential risk with your clinical team before starting, and agree a timescale with gradually decreasing safe glucose targets with them. You can easily set higher glucose targets in AAPS initially (currently, the highest target you can select is 10.6 mmol/L but you can also maintain a purposefully weak profile if needed), and then reduce the target as the months pass.  </p>"},{"location":"preparing/#how-quickly-can-i-reduce-my-hba1c-without-risking-permanent-damage","title":"How quickly can I reduce my HbA1c without risking permanent damage?","text":"<p>One retrospective study of 76 patients reported that the risk of progression of retinopathy increased by 1.6 times, 2.4 times and 3.8 times if the Hba1C dropped 1%, 2% or 3% respectively over a 6 month period. They suggested that the \"decrease in HbA1c value during any 6-month period should be limited to less than 2% in order to prevent the progression of retinopathy....Too rapid a decrease at the initiation of glycemic control could cause severe or transient exacerbation of the progression of retinopathy.\" </p> <p>N.B. If you use different HbA1c units (mmol/mol rather than %), click here for a HbA1c calculator tool. </p> <p>In another retrospective evaluation of 954 patients, researchers noted that: </p> <p>\"With a decrease in HbA1c of 2\u20133% points over 3 months there was a 20% absolute risk of developing treatment-induced neuropathy in diabetes, with a decrease in HbA1c of &gt;4% points over 3 months the absolute risk of developing treatment-induced neuropathy in diabetes exceeded 80%.\" </p> <p>A commentary on this work agreed that to avoid complications the goal should be to reduce A1c by &lt;2% over 3 months. You can read other reviews on the topic here and here.</p> <p>It is generally recognised that newly diagnosed type 1 diabetics (who often have very high HbA1c at diagnosis, before starting insulin therapy) appear to be able to rapidly reduce their HbA1c immediately after diagnosis without encountering these risks to the same extent, because they have not had elevated blood glucose levels for such a sustained period. However, it is still a consideration which you should discuss with your clinician.  </p>"},{"location":"preparing/#no-sglt-2-inhibitors","title":"No SGLT-2 inhibitors","text":"<p>:::{admonition} NO SGLT-2 inhibitors :class: danger SGLT-2 inhibitors, also called gliflozins, inhibit reabsorption of glucose in the kidney. Gliflozins incalculably lower blood sugar levels, and so you MUST NOT take them while using a closed loop system like AAPS! There would be a significant risk of ketoacidosis and/or hypoglycemia! The combination of this medication with a system that lowers basal rates in order to increase BG is especially dangerous. </p> <p>In a nutshell: - Example 1: risk of Hypo</p> <p>During lunch, you use AAPS to bolus based on consuming 45g of glucose. The problem is that unbeknownst to AAPS, the inhibitors cause the body to eliminate some of the carbs resulting in your body having too much insulin compared to the absorbed Carbs, resulting in hypoglycemia.</p> <ul> <li>Example 2: risk of Ketoacidosis <p>The inhibitors eliminate some of the carbs in the background causing a reduction in your BG. AAPS will automatically instruct the pump to decrease insulin intake  including basal. Over time this can result  in your  BG remaining below target value to the point where the body does not have enough background insulin to absorb any carbs resulting in Ketoacidosis. Ordinarily, Ketoacidosis  develops in T1D patients because their pump fails which would trigger alerts on their phone and be noticeable due to a high BG value. However, the danger with Gliflozins  is that there would be no AAPS alerts as  the pump remains operational and the BG potentially remains within target.  </p> </li> </ul> <p>Common brand names of SGLT-2 inhibitors include: Invokana, Farxiga, Jardiance, Glyxambi, Synjardy, Steglatro, and Xigduo XR, others. :::</p>"},{"location":"preparing/#key-principles-of-looping-with-aaps","title":"Key principles of looping with AAPS","text":"<p>The key principles and concepts of looping must be understood before using AAPS. This is achieved by investing your personal time into reading the AAPS documentation, and completing the Objectives which aim to provide you with a solid platform for safe and effective use of AAPS. The volume of AAPS documentation may seem overwhelming at first but be patient and trust the process - with the proper approach, you'll get there! </p> <p>The speed of progression will depend upon the individual, but be aware that completion of all the objectives typically takes 6 - 9 weeks. Many people start to build, install and setup AAPS well in advance of starting to use it. To aid with this, the system has a \"virtual pump\" which can be used during completion of the early objectives, so that you can become familiar with AAPS without actually using it to deliver insulin. A detailed breakdown of the timeline is given below, be aware that by objective 8 of AAPS you are closed looping, the later objectives add in additional features like SMS commands and automations which are useful to some users, but not essential to the core function of AAPS. </p> <p>Success with AAPS requires a proactive approach, a willingness to reflect on the BG data and flexibility to make the necessary adjustments to AAPS in order to improve your outcomes. Just as it is nearly impossible to learn to play a sport by reading about the rules alone, the same can be said of AAPS.</p>"},{"location":"preparing/#plan-for-delays-and-minor-issues-in-getting-everything-set-up-and-running","title":"Plan for delays and minor issues in getting everything set up and running","text":"<p>In the preliminary stages of getting started with AAPS, you may experience difficulties getting all the components of the loop communicating effectively with each other (and potential followers), and when fine-tuning your settings. Some glitches cannot be resolved until AAPS is used in everyday life, but plenty of help is available on the Facebook group and Discord. Please plan accordingly and choose \"good\" times, like a quiet morning of a weekend (i.e. not late at night or when you are tired, or before a big meeting or travel) to troubleshoot and resolve issues.  </p>"},{"location":"preparing/#technology-compatibility","title":"Technology compatibility","text":"<p>AAPS is only compatible with certain types of insulin pumps, CGMs and phones, and some technology may not be available for use in various countries. In order to avoid any disappointment or frustrations, please read the CGM, pump and phone sections. </p>"},{"location":"preparing/#app-build-time-and-progressing-to-full-looping","title":"App build time and progressing to full looping","text":"<p>The time to build the AAPS app  depends on your level of expertise and technical ability. Typically for inexperienced users, it can take up to half a day or a full day (with help from the community) in order to build AAPS. The process will significantly speed up for newer AAPS versions, as you become more experienced.</p> <p>To aid the build process there are dedicated sections:</p> <ul> <li> <p>List of questions and answers for frequent errors that are likely to occur in FAQs (Section K);</p> </li> <li> <p>\u201cHow to install AAPS? (Section D) which includes Troubleshooting Subsection.</p> </li> </ul> <p>How long it takes to get to closed looping depends on the individual, but an approximate timescale for getting to full looping with AAPS can be found (here)</p>"},{"location":"preparing/#keystore-configuration-settings-export-file","title":"Keystore &amp; configuration settings export\u00a0file","text":"<p>A \u201ckeystore\u201d (.jks file) is a password encrypted file unique to your own copy of AAPS. Your Android phone uses it to ensure that nobody else can upgrade your own copy without the keystore. In short, as part of the AAPS build, you should:</p> <ol> <li> <p>Save the your keystore file (.jks file used to sign your app) in a safe place;</p> </li> <li> <p>Keep a note of your password for your keystore file.</p> </li> </ol> <p>This will ensure that you can use that exact same keystore file each time an updated version of AAPS is created. On average, there will be 2 AAPS updates required each year. </p> <p>In addition, AAPS provides the ability to export all your configuration settings. This ensures that you can safely recover your system while changing phones, upgrading/reinstalling the application with minimum disruption.\u00a0</p>"},{"location":"preparing/#troubleshooting","title":"Troubleshooting","text":"<p>Please feel free to reach out to the AAPS community if there is anything you feel unsure about - there is no such thing as a silly question! All users with various levels of experience are encouraged to ask questions. Response times to questions are usually quick due to the number of AAPS users. </p>"},{"location":"preparing/#ask-our-facebook-group","title":"ask our facebook group","text":""},{"location":"preparing/#ask-our-discord-channel","title":"ask our discord channel","text":""},{"location":"preparing/#section-overview","title":"Section overview","text":"<p>AAPS documentation is made up of the following Sections:</p>"},{"location":"preparing/#what-do-i-need","title":"What do I need?","text":"<p>This explains AAPS\u2019 compatibility with CGMs (Continuous Glucose Monitors) and insulin pumps. It also provides a guide on the correct assembly of an AAPS system to ensure that it functions correctly in everyday life.</p>"},{"location":"preparing/#how-to-build-and-install-aaps","title":"How to build and install AAPS","text":"<p>This section is the manual for building the AAPS. Strict adherence to the step-by-step instructions are required in order to successfully build AAPS.  Please take your time.</p>"},{"location":"preparing/#component-setup","title":"[Component Setup]","text":"<p>This explains how to properly integrate each of the various different separate component parts into AAPS, as well as how to set them up to work as seamlessly as possible together. All components are listed under the separate sections including: CGM/FGM, Pumps and Phones </p>"},{"location":"preparing/#configuration","title":"Configuration","text":"<p>This explains how to set and configure your \u2018Profile\u2019, \u2018Insulin\u2019, \u2018BG Source\u2019, \u2018Pump\u2019, \u2018Sensitivity Detection\u2019, \u2018APS\u2019, \u2018Loop\u2019, \u2018Treatments\u2019.</p>"},{"location":"preparing/#aaps-use","title":"AAPS Use","text":"<p>This section provides a breakdown of the features provided by AAPS, with screenshots.</p>"},{"location":"preparing/#general-hints","title":"General Hints","text":"<p>Useful tricks on how to tackle looping issues such as time zones, and daylight saving (i.e. Spring Forward/ - Fall Back).</p>"},{"location":"preparing/#aaps-for-children","title":"AAPS for Children","text":"<p>This is designed for parents or caregivers who want to build an AAPS for their child, or for adults who would like to have a significant other follow their data. It also explains the extra features necessary in order to support and safely control AAPS remotely. </p>"},{"location":"preparing/#troubleshooting_1","title":"Troubleshooting","text":"<p>This section contains links to help solve issues when building or using AAPS.</p>"},{"location":"preparing/#frequently-asked-questions-faq","title":"Frequently asked Questions, FAQ","text":"<p>This section addresses specific questions which tend to come up when building or using AAPS.</p>"},{"location":"preparing/#glossary","title":"Glossary","text":"<p>This contains a list of the acronyms (or short-term names) or defined terms developed specifically for AAP (for instance, the terms \u2018ISF\u2019 or \u2018TT\u2019 have special meanings in AAPS).</p>"},{"location":"preparing/#where-to-go-for-help","title":"Where to go for help?","text":"<p>This section is aimed to provide new users with links on resources in order to get help including accessing community support made up of both new and experienced users who can clarify questions, and resolve the usual pitfalls that come with AAPS.</p>"},{"location":"preparing/#section-for-clinicians","title":"Section For Clinicians","text":"<p>This is a section specificially for clinicians who want to know more about AAPS and open source artificial pancreas technology. There is also guidance on how to talk to your clinical team in the Introduction.                                                                                                                                                                                                                             </p>"},{"location":"preparing/#what-are-we-going-to-build-and-install","title":"What are we going to build and install?","text":""},{"location":"preparing/#an-android-phone-application-aaps","title":"An Android Phone Application: AAPS","text":"<p>AAPS is fundamentally an app that runs on android smartphones &amp; devices. You are going to build the AAPS app (an apk file) yourself, using a step-by-step guide, by downloading the AAPS source code from Github, installing the necessary programs (Android Studio, GitHub desktop) on your computer and building your own copy of AAPS app. You will then transfer the AAPS app across to your smartphone (by email, USB cable etc.) and install it.  </p>"},{"location":"preparing/#a-reporting-server-nightscout-tidepool","title":"A reporting server: NightScout (Tidepool*)","text":"<p>In order to fully take advantage of AAPS, you need to setup a Nightscout server. You can do this yourself (link to instructions) or alternatively, pay a small fee for a managed Nightscout service to be set up for you (link to T1 pal 10.be etc). Nightscout is used to collect data from AAPS over time and can generate detailed reports correlating CGM and insulin patterns. It is also possible for caregivers to use Nightscout to remotely communicate with the AAPS application, to oversee their child\u2019s diabetic management. Such remote communication features include real-time monitoring of glucose and insulin levels, remote bolusing of insulin (by texting) and meal announcements.  Attempting to analyse your diabetes performance by looking at CGM data separately from the pump data is like driving a car where the driver is blind and the passenger describes the scene.  () (as of 26-Jun-2023) Tidepool will be available as an alternative to Nightscout, with the upcoming version 3.2 of AAPS*.</p>"},{"location":"preparing/#maintenance-of-the-aaps-system","title":"Maintenance of the AAPS system","text":"<p>Both Nightscout and AAPS must be updated approximately once a year, as improved versions are released. You will have step-by-step instructions on how to do this on your preconfigured computer. In some cases, the update can be delayed, in others it is strongly recommended or considered essential for safety. Notification of these updates will be given on the Facebook groups and Discord servers. The release notes will make it clear what the scenario is. There are likely to be many people asking similar questions to you at update time, and you will have support for performing the updates. </p> <p>(preparing-how-long-will-it-take?)=</p>"},{"location":"preparing/#how-long-will-it-take","title":"How long will it take?","text":"<p>As mentioned earlier, using AAPS is more of a \u201cjourney\u201d that requires investment of your personal time. It is not a one-time setup. Current estimates for building AAPS, installing and configuring AAPS and CGM software and getting from open loop to hybrid closed looping with AAPS are about 2 to 3 months overall. Here is breakdown:</p> Tasks Approx time initial reading of the documentation: 1-2 days installing/configuring PC to allow the build: 2-8 hours building a Nightscout server: 1 hour installing (xdrip or BYODA or \u2026) 1 hour configuring CGM-&gt;xdrip-&gt;APPS initially: 1 hour configuring AAPS-&gt;pump initially: 1 hour configuring AAPS-&gt;NightScout (reporting only): 1 hour optional (for Parents) - configuring NightScout &lt;-&gt; AAPS &amp; NSFollowers: 1 hour Objective 1: Setting up visualization and monitoring, analysing basals and ratios 1 hour Objective 2: Learn how to control AAPS 2 hour Objective 3: Prove your knowledge Up to 14 days Objective 4: Starting on an open loop 7 days Objective 5: Understanding your open loop, including its temp basal recommendations 7 days Objective 6: Starting to close the loop with Low Glucose Suspend Up to 5-14 days Objective 7: Tuning the closed loop, raising maxIOB and gradually lowering BG targets Up to 7 days Objective 8: Adjust basals and ratios if needed, and then enable autosens Up to 7-14 days Objective 9: Enabling additional oref1 features, such as super micro bolus (SMB) Up to 14 days Objective 10: Automation 1 day <p>Once you are fully operational on AAPS, you will need to fine tune your setting parameters in order to improve your overall diabetic management.</p>"},{"location":"preparing/#requirements","title":"Requirements","text":""},{"location":"preparing/#medical-considerations","title":"Medical considerations","text":"<p>In addition to the medical warnings in the safety section there are also different parameters, depending on which insulin you are using in the pump. </p>"},{"location":"preparing/#insulin-choice","title":"Insulin choice","text":"<p>AAPS calculations are based on insulin concentrations of 100U/ml (same as pump\u2019s standard). The following types of insulin profile presets are supported:</p> <ul> <li>Rapid-Acting Oref: Humalog/NovoRapid/NovoLog</li> <li>Ultra-Rapid ORef:  Fiasp</li> <li>Lyumjev: </li> </ul> <p>For Experimental/Advanced users only: - Free-Peak Oref: Allows you to define peak of the insulin activity</p>"},{"location":"preparing/#technical","title":"Technical","text":"<p>This documentation aims to reduce the technical expertise required to an absolute minimum. You will need to use your computer to build the AAPS application in Android Studio (step-by-step instructions). You also need to set up a server over the internet in a public cloud, configure several android phone apps and develop expertise in diabetes management. This can be  achieved by moving step-by-step, being patient, and help from the AAPS community. If you are already able to navigate the internet, manage your own Gmail emails, and keep your computer up-to-date, then it is a feasible task to build the AAPS. Just take your time.</p>"},{"location":"preparing/#personal","title":"Personal","text":"<p>Understanging and using AAPS requires a steep learning curve. It will take time, patience and significant efforts however it can be hugely beneficial as arguably proven by the 10,000 active users of AAPS.</p>"},{"location":"preparing/#smartphones","title":"Smartphones","text":""},{"location":"preparing/#aaps-and-android-versions","title":"AAPS and Android Versions","text":"<p>The current version of AAPS (3.1.0.3) requires an Android smartphone with Google Android 9.0 or above. If you are considering buying a new phone, (as of July 2023), Android 13 is preferred. Users are strongly encouraged to keep their build of AAPS up to date for safety reasons, however for users unable to use a device with Android 9.0 or newer, earlier versions of  AAPS compatible for older Android versions remain available from our old repository (check the release notes for legacy versions). </p>"},{"location":"preparing/#smartphone-model-choice","title":"Smartphone model choice","text":"<p>The exact model you buy depends on the desired function(s). There are currently two spreadsheets recording compatible smartphones and smartphones and watches. We encourage people to record their findings of compatibility and any issues here. </p> <p>To report any problem with the spreadsheet please email hardware@androidaps.org </p> <p>To make a donation of smartphone or smartwatch models that still need testing, please email donations@androidaps.org.</p> <ul> <li>List of tested phones</li> <li>Jelly Pro Settings</li> <li>Huawei Settings</li> </ul> <p>Users are encouraged to keep their phone version of Android up-to-date including with security parameters. However, if you are new with AAPS or are not a technical expert you might want to delay updating your phone until others have done so and confirmed it is safe to do so, on our various forums. </p> <p>:::{admonition} delaying Samsung phones updates :class: warning Samsung has an unfortunate track record of forcing updates of their phones which cause bluetooth connectivity issues. To disable these forced updates you need to switch the phone to \"developper mode\" by:  go to settings and about then software information, then tap build number u til it confirms you have unlocked developer mode. Got back to main settings menu and you should see a new developer options menu item. Open developer options and scroll to find auto system update and turn it off :::</p> <p>:::{admonition} Google Play Protect potential Issue :class: warning There have been several reports of AAPS being shut down arbitrarily by Google Play Protect every morning. If this happens you will have to go to the google play options and disable \u201cGoogle Play Protect\u201d. Not all  phone models or all Android versions are affected.. :::</p>"},{"location":"preparing/#introduction-to-your-aaps-profile","title":"Introduction to your AAPS profile","text":""},{"location":"preparing/#what-is-an-aaps-profile","title":"What is an AAPS profile?","text":"<p>Your AAPS profile is a set of five key parameters which define how AAPS should deliver insulin in response to your sensor glucose levels. AAPS has several additional modifiable parameters (like SMB settings), but using these well relies on your underlying AAPS profile being correct. The AAPS profile incorporates: duration of insulin action (DIA), glucose targets, basal rates (BR), insulin sensitivity factors (ISF) and insulin-to-carb ratios (IC or ICR). Screenshots from AAPS of an example profile are shown in below. Please note, this profile shows a large number of timepoints. When you start out with AAPS, your profile is likely to be much simpler. Profiles vary significantly from person-to-person, for examples of AAPS profiles for small children, teenagers and adults please see the later section, optimising your profile.    </p>"},{"location":"preparing/#duration-of-insulin-action-dia","title":"Duration of insulin action (DIA)","text":"<p>The duration of insulin action is set to a single value in AAPS, because your pump will continually infuse the same type of insulin. The remaining four parameters can be set to different values, changing hourly if required, over a 24 hour period. </p>"},{"location":"preparing/#glucose-targets","title":"Glucose targets","text":"<p>Glucose targets are set according to your personal preferences. For example, if you are concerned about hypos at night, you may set your target slightly higher at 117/mg/dL (6.5 mmol/L) from 9 pm - 7am. If you want to make sure you have plenty of insulin on board (IOB) in the morning before bolusing for breakfast, you may set a lower target of 81 mg/dL (4.5 mmol/L) from 7 am - 8 am. A glucose target, particularly if it is only short-term (less than 4 hours in duration), does not need to be the actual value you expect or want your glucose level to get to, rather, it is a good way to tell AAPS to be more or less aggressive, while still keeping your glucose levels in range. The figure below shows an example of how the DIA and glucose targets could be set in an AAPS profile.   </p> <p></p> <p>For the final three parameters, basal rates (BR), insulin sensitivity factors (ISF) and insulin-to-carb ratios (IC or ICR), the absolute values and trends in your insulin requirements vary significantly from person to person, depending on your biology, gender, age, fitness level etc. as well as shorter term factors like illness and recent exercise. For more guidance on this, the book \u201cBrights Spots and Landmines\u201d by Adam Brown is an excellent book to read. </p>"},{"location":"preparing/#basal-rates","title":"Basal rates","text":"<p>Your basal rate of insulin (Units/hour) provides background insulin, keeping your glucose levels stable in the absence of food or exercise. </p> <p>Accurate basal rates enable you to wake up in range, and to skip meals - or eat - earlier or later in the day, without going high or low. The insulin pump delivers small amounts of rapid acting insulin every few minutes, to keep the liver from releasing too much glucose, and to move glucose into body cells. Basal insulin usually makes up between 40 - 50% of your total daily dose (TDD), depending on your diet, and typically follows a circadian rhythm, with one peak and one valley in insulin requirements over 24 hours. For more information, chapter 23 of \u201cThink like a Pancreas\u201d by Gary Scheiner is very useful. </p> <p>Most type 1 diabetes educators (and people with type 1 diabetes!) agree that you should work on getting your basal rates correct, before attempting to optimise your ISF and ICR. </p>"},{"location":"preparing/#insulin-sensitivity-factor-isf","title":"Insulin sensitivity factor (ISF)","text":"<p>The insulin sensitivity factor (sometimes called correction factor) is a measure of how much your blood glucose level will be reduced by 1 unit of insulin. </p> <p>In mg/dL units:  If you have an ISF of 40, each unit of insulin will reduce your blood glucose by approx. 40 mg/dL (for example, your blood glucose will fall from 140 mg/dL to 100 mg/dL). </p> <p>In mmol/L units:  If you have an ISF of 1.5, each unit of insulin will reduce your blood glucose by approx. 1.5 mmol/L (for example from 8 mmol/L to 6.5 mmol/L). </p> <p>From these examples you can see that the smaller the ISF value, the less sensitive you are to insulin. So if you reduce your ISF from 40 to 35 (mg/dl) or 1.5 to 1.3 (mmol/L) this is often called strengthening your ISF. Conversely, increasing the ISF value from 40 to 45 (mg/dl) or 1.5 to 1.8 mmol/L) is weakening your ISF. </p> <p>If your ISF is too strong (small value) it will result in hypos, and if it is too weak (large value), it will result in hyperglycemia.  </p> <p>A basic starting point for determining your daytime ISF is to base it on your total daily dose (TDD) using the 1,700 (94) rule. More detail is given in Chapter 7 of \u201cThink like a Pancreas\u201d by Gary Scheiner.</p> <p>1700 (if measuring in mg/dl) or 94 (mmol/L)/ TDD = approx ISF. </p> <p>Example: TDD = 40 U Approx ISF (mg/dl) = 1700/40 = 43 Approx ISF (mmol/L) = 94/40 = 2.4</p> <p>See the figure below for an example of how the basal rates and ISF values could be set in an AAPS profile.   </p> <p></p>"},{"location":"preparing/#insulin-to-carb-ratio-icr","title":"Insulin to Carb ratio (ICR)","text":"<p>The ICR is a measure of how many grams of carbohydrate are covered by one unit of insulin.</p> <p>Some people also use I:C as an abbreviation instead of ICR, or talk about carb ratio (CR). </p> <p>It is common to have different ICR at different times of day due to hormone levels and physical activity. Many people find they have their lowest ICR around breakfast time. So, for example, your ICR could be 1:8 for breakfast, 1:10 for lunch and 1:10 for dinner, but these patterns are not universal, and some people are more insulin resistant at dinner time, and require a stronger/smaller ICR then. </p> <p>For example, a 1-to-10 (1:10) insulin-to-carb ratio means that you take 1U of insulin for every 10 grams of carbs eaten. A meal of 25g carbs would need 2.5U of insulin. </p> <p>If your ICR is weaker, perhaps 1:20, you would only need 0.5U of insulin to cover 10 g of carbs. A meal of 25g of carbs would need 25/20 = 1.25U of insulin.  </p> <p>As shown in the figure below, when entering these values into an AAPS profile, we just enter the final part of the ratio, so an insulin-to-carb ratio of 1:3.5 is entered simply as \u201c3.5\u201d.</p> <p></p>"},{"location":"preparing/#why-should-i-try-to-get-my-profile-settings-right-cant-the-loop-just-take-care-of-it","title":"Why should I try to get my profile settings right? Can\u2019t the loop just take care of it?","text":"<p>A hybrid closed loop can attempt to make insulin delivery adjustments to minimise poor glycemic control that results from having incorrect profile values. It can do this, for example, by withholding insulin delivery if you are hypo. However, you can achieve much better glycemic control if your profile settings are already as close as possible to what your body needs. This is one of the reasons that AAPS uses staged objectives to move from open loop pumping towards hybrid closed loop. In addition, there will be times when you need to open the loop (sensor warmups, sensor failure etc.), sometimes in the middle of the night, and you will want to have your settings right for these situations. </p> <p>If you are starting with AAPS after using a different open or closed-loop pumping system, you will already have a reasonable idea of what values to use for basal rates (BR), insulin sensitivity factors (ISF) and insulin-to-carb ratios (IC or ICR). </p> <p>If you are moving from injections (MDI) to AAPS, then it is a good idea to read up on how to make the transfer from MDI to pump first, and plan and make the move carefully in consultation with your diabetes team. \"Pumping insulin\" by John Walsh &amp; Ruth Roberts and \u201cThink like a Pancreas\u201d by Gary Scheiner are very useful.  </p> <p>In the later section we present example profiles, dscuss how to set and optimise the parameters which form your AAPS profile(s), and provide guidance on additional resources such as Autotune which aim to automate optimisation of your profile.</p>"},{"location":"remote-control/","title":"Remote control of AAPS","text":"<p>There are four highly effective tools for remotely managing AAPS:</p> <p>1) SMS commands (follower phone can be either Android or iOS),  2) AAPSClient (follower phone is Android) 3) Nightscout (Android, iOS or other computer/device). 4) Smartwatches (Android) </p> <p>The first three are mostly appropriate for carers/parents, but smartwatches are very useful for carers/parents and for adults with diabetes themselves. </p> <p></p>"},{"location":"remote-control/#considerations-when-setting-up-remote-control-of-aaps-for-a-child","title":"Considerations when setting up remote control of AAPS for a child","text":"<ol> <li>Think about how you will keep the child\u2019s phone in range of their pump and CGM. This can be challenging with children who are too young to be responsible for a phone. Ensuring you select an AAPS phone with a good bluetooth connection range and finding a comfortable way for the child to carry the pump and phone - if they are old/big enough to have the phone on them -  (e.g. a SPI Belt may help.</li> <li>Take your time to set-up and test commands with your child next to you, before starting remote treatment and monitoring. Many parents choose school holidays or weekends.</li> <li>Make sure other caregivers/teachers are aware of your child's treatment plan and work out how adding in remote control is going to work with/enhance the existing plan. </li> <li>Many parents find it helpful to have a separate line of communication with childcare providers, for example a cheap small teacher \u201cfollow\u201d phone. </li> <li>Examples for school care plans for children of different ages can be found in the \u201cfiles section\u201d of the AAPS Facebook page. </li> <li>What is your emergency plan for when remote control does not work (i.e. network problems or lost bluetooth connection)?  Always consider what will happen with AAPS if you suddenly can\u2019t send a new command. AAPS overwrites the pump basal, ISF and ICR with the current profile values. Only use temporary profile switches (i.e. with a set time duration) if switching to a stronger insulin profile, in case your remote connection is disrupted. Then the pump will revert to the original profile when the time expires.</li> </ol> <p>(sms-commands)=</p>"},{"location":"remote-control/#sms-commands","title":"SMS Commands","text":"<p>You can control AAPS remotely via text (SMS) message through a feature known as SMS Commands. SMS commands can be sent to AAPS  by any type of phone (iPhone/Android). </p> <p>SMS commands are really useful:  1. For routine remote control</p> <ol> <li> <p>If you want to remotely bolus insulin</p> </li> <li> <p>In a region of poor internet reception, where text messages are able to get through, but data/internet phone reception is limited. This is very useful when going to remote areas (e.g. camping, skiing).</p> </li> <li> <p>If your other methods of remote control (Nightscout/AAPSClient) are temporarily not working</p> </li> </ol>"},{"location":"remote-control/#sms-command-safety","title":"SMS command safety","text":"<p>If you enable SMS Communicator in AAPS, consider that the phone which is set up to give remote commands could be stolen, and/or used by someone else. Always lock your phone handset with at least a PIN. A strong password and/ or biometric lock are highly recommended, and ensure this is different from your APK Master password (the password which is required to change AAPS settings) . A second phone number must be enabled for SMS commands to work, even if you only have one primary caregiver/follower. You can then use the second number to temporarily disable SMS communicator (with the command \u201cSMS stop\u201d) if your main caregiver/parent phone is compromised. Versions of AAPS 2.7 and newer also use an Authenticator app). </p>"},{"location":"remote-control/#different-types-of-sms-commands","title":"Different types of SMS commands","text":"<p>The SMS Commands Table below shows all the possible SMS commands. Example values are given, to aid understanding. The commands have the same range of possible values (targets, percent profile etc.) which are allowable in the AAPS app itself. The commands below have been listed by how commonly used they are likely to be, the first two tables should have most of the SMS commands you need with full looping. </p>"},{"location":"remote-control/#sms-commands-tables","title":"SMS commands tables","text":"<p>(authentication-or-not)=</p>"},{"location":"remote-control/#authentication-or-not","title":"Authentication or not?","text":"<p>You may notice from the table above that some SMS commands give an immediate response, and some SMS commands require authenticating with a security code from an additional app and a PIN (see below (link for more detail). A simple enquiry like \u201cbg\u201d (which requests an update on current glucose) is quick to type, doesn\u2019t need authenticating, and returns the AAPS status information shown below: </p> <p></p> <p>Commands which need more security require a code to be entered, for example:</p> <p></p>"},{"location":"remote-control/#how-to-set-up-sms-commands","title":"How to set up SMS commands","text":"<p>The overall process is as follows: </p> <p>1)    Download an authenticator (caregiver phone)</p> <p>2)    Check phone settings (AAPS phone)</p> <p>3)    Date and time synching (caregiver and AAPS phone)</p> <p>4)    AAPS settings (APPS phone)</p> <p>5)    Testing SMS commands works (caregiver and AAPS phone)</p>"},{"location":"remote-control/#lets-get-started","title":"Let's get started!","text":"<p>1) Download an authenticator: On the caregiver phone, download (from the App store or Google play) and install one authenticator of your choice from the list below:</p> <p>Authy</p> <p>Google Authenticator - Android / iOS</p> <p>LastPass Authenticator</p> <p>FreeOTP Authenticator</p> <p>These Authenticator apps produce a time-limited, one-time 6-digit password, similar to mobile banking or shopping. You can use an alternative Authenticator app, as long as it supports RFC 6238 TOTP tokens. The Microsoft Authenticator does not work.</p> <p>2) Check phone settings: In the AAPS phone settings go to Apps &gt; AndroidAPS &gt; Permissions  &gt; SMS  &gt; Allow SMS</p> <p></p> <p>3) Date and time synching: In both the AAPS phone and the caregiver phone, check the date and time are synched. Exactly how you do this depends on your specific handsets, you may need to try out different settings.</p> <p>Example (for Samsung S23 handset): Settings \u2013 general management \u2013 date and time- automatic date and time </p> <p>Some options may be greyed out, due to needing admin via a family account if the phone has been set up as a child account. This date and time setting is called \u201cset automatically\u201d on a caregiver/parent iPhone. If you are not sure if you have synched the handsets, don\u2019t worry, you can set up the SMS commands and troubleshoot afterwards if it seems to be causing problems (ask for help if needed). </p> <p>4) AAPS settings: </p> <p>i) Now that the phone settings have been checked, in the AAPS app itself, use the left hand hamburger menu to navigate to Config Builder: </p> <p></p> <p>ii) Enable \u201cSMS communicator\u201d by checking the boxes, then click the \u201ccog\u201d to get to the SMS communicator preferences screen:</p> <p></p> <p>Note - as an alternative route to Config Builder, you can also use the new \u201cSMS Communicator tab\u201d at the top of the AAPS screen, then right click on the custom right hand hamburger menu for that page, to get to the SMS communicator preferences screen. </p> <p>iii) On the preferences screen enable \u201callow remote commands via SMS\u201d: </p> <p></p> <p>iv) Enter the caregiver phone number(s). Include the country code and exclude the first \u201c0\u201d of the phone number, as shown in these examples:</p> <p>UK phone number: +447976304596</p> <p>US phone number: +11234567890</p> <p>FR phone number:  +33612344567</p> <p>etc. </p> <p>Note that the \u201c+\u201d in front of the number may or may not be required based on your location. To determine this, send a sample text which will show the received format in the SMS Communicator tab. </p> <p>If you have more than one phone number to add, separate them by semicolons, with NO space between numbers (this is critical!). Select \u201cOK\u201d:  </p> <p></p> <p>v) Choose a PIN which you (and any other caregivers) are going to use at the end of the authenticator code when the SMS command is sent. </p> <p>PIN requirements are:</p> <p>\u20223 to 6 digits</p> <p>\u2022not the same digits (i.e. 1111 or 1224)</p> <p>\u2022not sequential numbers (i.e. 1234) </p> <p></p> <p>vi) On the preferences screen select \u201cAuthenticator setup\u201d</p> <p>\u25cf   Follow the step-by-step instructions on the screen.</p> <p>\u25cf   Open your installed authenticator app on the caregiver\u2019s phone set up a new connection and</p> <p>\u25cf   Use the caregiver phone to scan the QR code provided by AAPS, when prompted.</p> <p>\u25cf   Test the one-time passcode from the authenticator app on the caregiver phone followed by your PIN:</p> <p>Example:</p> <p>The token from the authenticator app is 457051</p> <p>Your mandatory PIN is 2401</p> <p>Code to check: 4570512401</p> <p>If the entry is correct, the red text \u201cWRONG PIN\u201d will change automatically to a green \u201cOK\u201d. The process is now complete, there is no \u201cOK\u201d button you need to press after entering the code:</p> <p></p> <p>You should now be set up with SMS commands.</p>"},{"location":"remote-control/#first-steps-using-sms-commands","title":"First steps using SMS commands","text":"<p>1)  To check you have set everything up correctly, test the connection by typing \u201cbg\u201d as an SMS message from the caregiver phone to the AAPS phone. You should get a response similar to that shown here:</p> <p></p> <p>2)  Now try an SMS command that requires the authenticator. To do this, send a text from the caregiver\u2019s phone with the required command to theAAPS phone (e.g. \u201ctarget hypo\u201d). The caregiver\u2019s phone will receive a text back, prompting you to enter the six-digit authenticator password from the authenticator app, followed by an additional secret PIN known only to caregivers/followers (a string of ten digits in total, assuming your PIN is only 4 digits).</p> <p>This example is shown below, with the SMS command \u201ctarget hypo\u201d to set a hypo temp target:</p> <p>\u25cf   In this example, your PIN is 1289</p> <p>\u25cf   Code from your authenticator app is 274127</p> <p>\u25cf   When prompted, text 2741271289</p> <p>Commands must be sent in English. The response should be in your local language. When you try sending an SMS command for the first time, try it in the presence of the AAPS phone, to see how it works: </p> <p></p> <p>The caregiver\u2019s phone will receive a SMS in reply from AAPS to confirm if the remote SMS command has been carried out successfully. There are several possible reasons the command may not be successful:</p> <p>\u25cf   SMS commands setup isn\u2019t complete/correct</p> <p>\u25cf   You sent a command which had an incorrect format (like \u201cdisconnect pump 45\u201d instead of \u201cpump disconnect 45\u201d)</p> <p>\u25cf   You used an incorrect, or expired authenticator code (it is usually good to wait a few seconds for a fresh code, if the current one is about to expire)</p> <p>\u25cf   The code+PIN was OK, but there was a delay in the SMS leaving/arriving, which led AAPS to calculate that the authenticator code had expired</p> <p>\u25cf   The AAPS phone is out of range/contact with the pump</p> <p>\u25cf   The system is already busy delivering a bolus</p> <p>If your command is successful, you will receive a reply to confirm this. If there is a problem you will receive an error message.</p> <p>Common errors are shown in the examples below: </p> <p></p>"},{"location":"remote-control/#additional-safety-notes-on-sms-commands","title":"Additional safety notes on SMS commands","text":"<p>The default minimum time delay between bolus commands is 15 minutes. For safety reasons, you have to add at least two authorised phone numbers to change this to a shorter time delay. If you try to remotely bolus again within 15 minutes of the previous bolus, you will receive the response \u201cRemote bolus not available. Try again later\u201d</p> <p>If you want to remove the ability of a caregiver phone to send SMS commands, use the emergency button \u201cRESET AUTHENTICATORS\u201d in AAPS (see preferences screenshot above, link) or send the SMS command \u201cSMS stop\u201d. By resetting authenticators you make ALL the caregivers' phones invalid. You will need to set them up again.</p>"},{"location":"remote-control/#delivering-mealtime-boluses-through-sms-commands","title":"Delivering mealtime boluses through SMS commands","text":"<p>Remote bolusing of insulin can only be done via SMS Commands, it cannot be actioned through NightScout or AAPSClient. Carbs however, can be announced through any of the three methods. It is not possible to send both carbs and insulin commands in one single SMS message. These commands must be sent separately as follows:</p> <p>1)  Send the insulin bolus (e.g.\u201cbolus 2\u201d will command a bolus of 2 units) through SMS commands is equivalent to using the \u201csyringe\u201d icon in AAPS.  2)  Send the carbs (e.g. \u201ccarbs 20\u201d will announce 20g of carbs). This is equivalent to using the \u201ccarbs\u201d tab in AAPS.</p> <p>The order in which you send these commands is important. If you announce a large amount of carbs by any route, and have SMBs enabled, AAPS may immediately respond by giving a partial bolus of insulin. So, if you then try to send an insulin bolus after announcing the carbs, you may have a frustrating delay and a \u201cbolus in progress\u201d message, and you then need to check what has been given as an SMB. Or, if you do not realise an SMB is being delivered, and your own subsequent bolus is also successful, too much insulin may be delivered for the meal overall. Therefore, if bolusing for meals remotely, always send the insulin bolus before the carb announcement. If you prefer, you can use a combination of Nightscout or AAPSClient with SMS commands. Carbs can be announced through Nightscout without any authentication (see instructions sub section below) , and are therefore quicker than SMS commands.</p>"},{"location":"remote-control/#sms-commands-troubleshooting-and-faq","title":"SMS commands troubleshooting and FAQ","text":""},{"location":"remote-control/#q-what-cant-we-do-with-sms-commands","title":"Q: What can\u2019t we do with SMS commands?","text":"<p>1)  You cannot set a temporary profile switch (so for example, setting \u201cprofile exercise\u201c for 60 minutes), although you can permanently switch to \u201cprofile exercise\u201d. Temporary profiles switches can instead be set through Nightscout or AAPSClient.</p> <p>2)  You cannot cancel automations or set user-defined targets but there are approximate solutions:  As an example, imagine the normal profile target is 5.5. You have set an automation in AAPS, to always set a high target of 7.0 between 2.30pm and 3.30pm because of a sports class in school, and a condition of the automation is that \u201cno temp target exists\u201d. This week, you have been told at short notice that the sports class is cancelled, and is being replaced by a pizza-eating session, but your kid is already at school with the AAPS phone. If the high temporary target of 7.0 is started by the automation and you cancel it (on the AAPS phone, or remotely) the conditions for the automation are still met and AAPS will simply set the high target again, a minute later.</p> <p>If you did have access to the AAPS phone, you could uncheck/modify the automation, or, if you don\u2019t want to do that, you could simply set a new temp target of 5.6 for 60 min under the Actions Tab or by pressing on the target tab. This would prevent the automation from setting the high target of 7.0.   </p> <p>If you don\u2019t have access to the AAPS phone SMS commands can be used for an approximate fix: for example, by using the command \u201ctarget meal\u201d to set a target of 5.0 for 45 mins (other default targets are 8.0 for activity or hypo, see Table). However, with SMS commands you cannot specify a specific value target value (of 5.6 for 60 minutes, for example), you would need to use AAPSClient or Nightscout to do this.</p>"},{"location":"remote-control/#q-what-happens-if-i-change-my-mind-about-a-command-i-have-just-sent","title":"Q: What happens if I change my mind about a command I have just sent?","text":"<p>AAPS will only deliver on the most recent command. So, if you type \u201cbolus 1.5\u201d, and then, without authenticating, you send a new command \u201cbolus 1\u201d, it will ignore the earlier 1.5 command. AAPS will always send the caregiver's phone a response to confirm what the SMS command is before you are prompted to enter the authentication code, as well as a response following the action. </p> <p>If you don\u2019t get a response to an SMS command it could be for one of these reasons: </p> <p>1)  The message has not got through to the phone (network issues). 2)  AAPS is still in the process of processing the request (e.g. a bolus, which can take some time to deliver depending on your bolus rate). 3)  The AAPS phone does not have good bluetooth connection to the pump when the command is received, and the command has failed (this usually creates an alarm on the AAPS phone).  You cannot stop a command once it has been authenticated. Many commands (apart from bolusing and carb announcements) can be easily reversed, or actions taken to mitigate the effects. For errors in bolusing and carb announcements, you can still take action. For example, if you have announced 20g carbs but your child only eats 10g and you (or an onhand caregiver) is unable to delete the treatment in the AAPS phone directly, you could set a high temporary target, or set a reduced profile, to encourage AAPS to be less aggressive.</p>"},{"location":"remote-control/#q-why-am-i-getting-multiple-sms-texts-of-the-same-message","title":"Q. Why am I getting multiple SMS texts of the same message?","text":"<p>If you receive the same message repeatedly (e.g. a profile switch) you may have accidentally set up a looping condition with other apps. This could be xDrip+, for example. If so, please ensure that xDrip+ (or any other app) does not upload treatments to NightScout. </p>"},{"location":"remote-control/#q-ive-just-set-up-sms-commands-and-i-am-now-getting-far-too-many-text-messages-can-i-reduce-the-frequency-or-make-them-stop","title":"Q. I\u2019ve just set up SMS commands and I am now getting far too many text messages. Can I reduce the frequency, or make them stop?","text":"<p>Using SMS commands may generate a lot of automated messages from the AAPS phone to the caregiver\u2019s phone. You will also receive messages, for example \u201cbasal profile in pump updated\u201d if you have automations set up in AAPS. It can be useful to have unlimited SMS allowance on your AAPS phone plan (and for each caregiver phone used) if a lot of SMS will be sent, and to deactivate SMS notifications, alarms or vibrations on all phones. It is not possible to use SMS commands and not receive these updates.  Because of this, you may want an alternative way to communicate directly with your child (if they are old enough), instead of SMS. Common alternative communication apps used by AAPS caregivers include Whatsapp, Lime, Telegram, and Facebook Messenger. </p>"},{"location":"remote-control/#q-why-are-sms-commands-not-working-on-my-samsung-phone","title":"Q. Why are SMS commands not working on my Samsung phone?","text":"<p>There was a report of SMS commands stopping after an update on a Samsung Galaxy S10 phone. This was solved by disabling \u2018send as chat message\u2019.</p> <p></p>"},{"location":"remote-control/#q-how-can-i-fix-issues-with-the-android-messages-app","title":"Q. How can I fix issues with the Android Messages App?","text":"<p>If you are having issues sending or receiving SMS commands with the Android Messages app, disable end-to-end encryption on both caregiver and dependent\u2019s phones:</p> <p>\u25cf   Open the specific SMS conversation in Messages</p> <p>\u25cf   Select the options ellipsis in the top right corner</p> <p>\u25cf   select \u201cDetails\u201d</p> <p>\u25cf   Activate \u201cOnly send SMS and MMS messages\u201d</p> <p>(aapsclient)=</p>"},{"location":"remote-control/#aapsclient","title":"AAPSClient","text":"<p>Note that NSClient has been replaced by AAPSClient for AAPS version 3.2 and higher, check the version release notes for more information. </p> <p>For versions of AAPS which are older than AAPS 3.2, if you have a caregiver/parent Android phone you can directly download and install the AAPSClient app. AAPSClient looks very similar in appearance to AAPS itself, offering the caregiver tabs that will remotely action commands in AAPS:</p> <p></p> <p>There are 2 versions of the app you can download, AAPSClient &amp; AAPSClient2. The only difference between the two versions is the app name. This allows you to install the AAPSClient app twice on the same phone, to follow two different people or Nightscout accounts at the same time. To download AAPSClient, click on \"app-AAPSClient-release\" (it may be a newer version to that shown in the screenshot):</p> <p></p> <p>Then go to  downloads on your computer. On Windows, -downloads_ will show the right hand ribbon:</p> <p></p> <p>Once downloaded, click show in folder to locate the file.</p> <p>The apk can now be either:</p> <p>Transferred by a USB cable onto the follower phone; or Dragged into Google drive folder, and then added onto the follower phone by clicking on the \"app-AAPSClient-release\" file.</p>"},{"location":"remote-control/#features-of-aapsclient-include","title":"Features of AAPSClient include:","text":"<p>AAPSClient allows the caregiver to make many of the adjustments that are allowed directly in AAPS (excluding insulin boluses) remotely, via the mobile or internet network. The main benefits of AAPSClient are the speed and ease with which caregivers/parents can use it to remotely control APPS. AAPSClient can be much faster than entering SMS Commands, if delivering a command which would require authentication. Commands entered on AAPSClient are uploaded onto Nightscout.</p> <p>Remote control through AAPSClient is only recommended if your synchronization is working well (i.e. you don\u2019t see unwanted data changes like self-modification of TT, TBR etc) see release notes for Version 2.8.1.1 for further details.</p>"},{"location":"remote-control/#ns-client-with-smartwatch-options","title":"NS Client with smartwatch options","text":"<p>A smartwatch can be a very useful tool for helping to manage AAPS with kids. A couple of different configurations are possible. If AAPSClient is installed on the parents phone, the AAPSClient WearOS app can be downloaded and installed on a compatible smartwatch which is connected to the parent's phone. This will show current BG, loop status and allow carb entry, temp targets and profile changes. It will NOT allow bolusing from the WearOS app. You can read more about Smartwatches here.</p> <p>(nightscout)=</p>"},{"location":"remote-control/#nightscout","title":"Nightscout","text":"<p>As well as Nightscout being a server in \u201cthe Cloud\u201d, there is also a dedicated Nightscout app which can be downloaded directly from the App Store on your iPhone. If you have an Android follower phone, there is not a dedicated Nightscout app and it is better to use AAPSClient, or, if you only want to follow, and not send treatments you can download and install the Nightwatch app from the Playstore.</p> <p>Once you have installed the Nightscout app on your iPhone, open the app and follow the set-up prompts, entering your Nightscout address (see below, left). The form of this may vary depending on how your Nightscout is hosted. (e.g. http://youraddresshere.herokuapp.com). Then enter your Nightscout API secret (see below, right). If not prompted for your API password, then you need to enter this by clicking on the padlock at the top of the app: </p> <p></p> <p>More info on setup is available directly from Nightscout</p> <p>When you first log in, you will have a very simple display (below, left). Customise the display options, by selecting the \u201chamburger\u201d in the top right and scrolling down:</p> <p></p> <p>Scroll down through to \u201cSettings\u201d. You may wish to change the \u201cscale\u201d to \u201clinear\u201d as the default for the BG display is logarithmic, and under \u201crender basal\u201d select \u201cdefault\u201d so that the pump basal shows up. Continue to scroll down until you get to \u201cshow plugins\u201d. You need to make sure \u201ccareportal\u201d is checked, and can also select various other metrics (most useful are: IOB, care portal, pump, cannula age, insulin age, basal profile and OpenAPS). </p> <p></p> <p></p> <p>Importantly, you now need to click \u201csave\u201d at the bottom for these changes to take effect.</p> <p>After pressing \u201csave\u201d the app will return to your main Nightscout screen which will look a little like this:</p> <p></p> <p>Looking in more detail at the top left menu of the Nightscout app: </p> <p></p> <p>There is a huge amount of information on the status of the AAPS system in the grey tabs (and even more information is revealed if you tap the tab) on this screen:</p> <p></p> <p></p>"},{"location":"remote-control/#sending-treatments-through-the-nightscout-app-to-aaps","title":"Sending treatments through the Nightscout app to AAPS","text":"<p>To set-up sending treatments from the Nightscout app to AAPS, on the main AAPS phone, go into the AAPSClient tab in the AAPS app. Open the right-hand dot menu, and open AAPSClientpreferences \u2013 synchronisation and select the relevant options in this menu. Set it to receive the different commands (temporary targets, etc) and also to synchronise profiles. If things don\u2019t seem to be synchronised, go back to the AAPSClient tab and select \u201cfull synchronisation\u201d and wait a few minutes.</p> <p>Nightscout on your iPhone has all the same functions as Nightscout on your PC. It allows you to send many commands to AAPS, but it does not allow you to send insulin boluses.</p>"},{"location":"remote-control/#cancelling-negative-insulin-to-avoid-repeat-hypos","title":"Cancelling negative insulin to avoid repeat hypos","text":"<p>Although you cannot actually bolus insulin, you can however \u201cannounce\u201d insulin through Nightscout as a \u201ccorrection bolus\u201d, although it is not delivered. Because AAPS now takes that fake insulin bolus into account, announcing insulin actually works to make AAPS less aggressive, and can be useful for cancelling negative insulin and preventing lows in the event that your profile has been too strong (for example due to prior exercise). You will want to check this for yourself in the presence of the AAPS phone, in case your Nightscout setup differs. </p> <p></p> <p>Some of the most useful Nightscout commands are described in the table below. </p>"},{"location":"remote-control/#nightscout-command-table","title":"Nightscout command table","text":"<p>Read more about Nightscout options here</p>"},{"location":"remote-control/#tips-for-getting-the-most-out-of-the-nightscout-app","title":"Tips for getting the most out of the Nightscout app","text":"<p>1). If you get \u201cstuck\u201d on a page and want to be able to see the main screen again, just click \u201crefresh\u201d (bottom middle) and this will take you back to the Nightscout homepage with the BG graph.</p> <p>To see the current profile which is running on the phone, press the various icons on the screen above the graph. More info (current carb ratio, sensitivity and timezone etc.) can be seen by pressing \u201cbasal\u201d and \u201cOpenAPS\u201d gives info about the profile and current target etc. Both the phone battery% and the pump battery % can also be monitored. BWP gives information on what the algorithm thinks will happen in the future, given the IOB and COB.</p>"},{"location":"remote-control/#other-icons-in-the-menu-what-does-the-pencil-edit-mean","title":"Other icons in the menu: what does the pencil (edit) mean?","text":"<p>You can (technically) use the edit pencil to move or delete bolus or correction treatments from the last 48h.</p> <p>More about this here</p> <p>Although this could potentially be useful for deleting announced (but not bolused for) carbs, in practice it doesn\u2019t currently work well with AAPS and we recommend making changes like this via the AAPS app directly.</p> <p>(smartwatches)=</p>"},{"location":"remote-control/#4-smartwatches","title":"4) Smartwatches","text":"<p>Smartwatches are becoming increasingly used with AAPS both for adults with diabetes and carers/parents of children with diabetes. </p>"},{"location":"remote-control/#general-advantages-of-using-smartwatches-with-aaps","title":"General advantages of using smartwatches with AAPS","text":"<p>Smartwatches - depending on the model - can be used in many different ways with AAPS. They can be used to fully or partly control AAPS, or simply to remotely check glucose levels, insulin-on-board, and other parameters.</p> <p>Integrating a smartwatch with AAPS can be useful in many situations, including driving a car or (motor) bike and during exercise. Some people feel that looking at a watch (in a meeting, party, dinner table etc.) is more discreet than looking on a phone. From a security perspective, a smartwatch can also be beneficial while on the move, enabling user to have their AAPS phone stored out of sight (like inside a bag), but with the aid of the smartwatch for remote control use. </p>"},{"location":"remote-control/#specific-advantages-for-parentscarers-using-aaps","title":"Specific advantages for parents/carers using AAPS","text":"<p>For a child - if their AAPS  phone is nearby - a caregiver can use a smartwatch to monitor or make modifications without needing to use the AAPS  phone. This can be useful, for example, if the AAPS phone is hidden away in a pump belt. </p> <p>A smartwatch can be used either in addition to, or as an alternative to the PHONE-based options for remote control or following only. </p> <p>Additionally, unlike parent/carer follower phones (which rely on the mobile network or wifi connection), bluetooth connected smartwatches can be useful in remote locations, like a cave, in a boat, or half-way up a mountain. If both devices (AAPS phone and smartwatch) are on the same wifi network, they can also use wifi. </p>"},{"location":"remote-control/#different-types-of-smartwatch-aaps-interactions","title":"Different types of Smartwatch-AAPS interactions","text":"<p>Many of the possible smartwatch options available to AAPS users are detailed at Nightscout on your watch, so you are strongly advised to read those pages first to get a good idea of all the possibilities.   </p> <p>There are currently five main ways in which smartwatches are used in conjunction with AAPS. These are shown in the table below:\u2003</p> <p></p> <p>Please note this table was prepared in 2023, it is not exhaustive, and additional options are being added all the time. </p>"},{"location":"remote-control/#before-you-buy-a-smartwatch","title":"Before you buy a smartwatch\u2026","text":"<p>The exact model of smartwatch you buy depends on the desired function(s). There are currently two spreadsheets recording compatible smartphones and smartphones and watches. </p> <p>There are a huge number of options for smartwatch setups for use with AAPS, and this is a quickly moving field as new watches are released. Popular watch brands include Samsung Galaxy, Garmin, Fossil, Mi band and Fitbit. The different options summarised in the Table above are explained in more detail below, to help you decide which smartwatch is right for your situation.</p> <p>If you are integrating a smartwatch with AAPS on a phone with the intention to remotely interact with AAPS, you also need to consider if the two devices are compatible with each other, particularly if you have an older, or an unusual phone. We intend to add a specific page to one of the spreadsheets concerning watch-phone compatibility.</p> <p>In general, if you only want to follow glucose numbers and not interact with AAPS, there are a wider range of affordable and simpler watches you can use.</p>"},{"location":"remote-control/#for-smartwatch-options-1-3-what-is-wear-os","title":"For Smartwatch Options 1 - 3: What is Wear OS?","text":"<p>The first three smartwatch options require the smartwatch to have Wear OS installed. </p> <p>Wear OS is the operating system which runs on some modern Android smartwatches. In 2018, Google rebranded Android Wear 1.x to Wear OS from version 2.x. So, if a device is labelled \u201cAndroid Wear\u201d rather than Wear OS it may indicate an older version. If the description of the smartwatch indicates only compatibility with Android and iOS - it does not mean it is running Wear OS. It may be some other sort of Vendor specific operating system which is not compatible with AAPS.  To support installation and use of any version of AAPS or AAPSClient, a smartwatch will need to be running Wear OS, and ideally be Android 10 or newer. As a guide, as of October 2023, the latest release of Wear OS is version 4.0 (based on Android 13).</p> <p>If you install AAPS wear.apk on a Wear OS watch, there are a range of different custom AAPS watchfaces which  can be  selected. Alternatively, you can use a standard smartphone watchface, with your AAPS information included in small tiles known as \u201ccomplications\u201d on the face. A complication is any feature that is displayed on a watch face in addition to the time. Features like complications require Wear OS version 2.0 or newer to work.</p>"},{"location":"remote-control/#what-could-my-smartwatch-look-like-with-remote-control-of-aaps","title":"What could my smartwatch look like with remote control of AAPS?","text":"<p>Examples of complications (where AAPS is embedded in an existing watchface) are shown here:</p> <p></p> <p>These are the currently available AAPS-dedicated watchfaces: </p> <p></p> <p>More information about the possible smartwatch faces and their functions can be found in Smartwatches </p>"},{"location":"remote-control/#watchfaces-for-wear-os","title":"Watchfaces for Wear OS","text":"<p>Further details about the watchfaces and configurations for complications, including how to make your own, can be found here</p>"},{"location":"remote-control/#option-1-standalone-watch-running-aaps","title":"Option 1) Standalone Watch running AAPS","text":"<p>It sounds like an attractive option, right? However, at present, only a few enthusiasts are experimenting with AAPS  on a stand-alone watch. There are a limited number of smartwatches with a reasonable interface which also which work well with standalone use of AAPS and your CGM app. Popular models include the LEMFO LEM 14, 15 and 16. You will need to load the watch with the AAPS \"full\" apk (the apk which is usually installed on a smartphone) rather than the AAPS \"wear\" apk. </p> <p>While there is no clear specification which helps you to know if a watch will work well for standalone AAPS use, the following parameters will help:</p> <p>1)  Android 10 or newer. 2)  Being able to take the watchface off \u201csquare\u201d mode to make text larger and easier to read. 3)  Very good battery life. 4)  Good bluetooth range.</p> <p>Most of the frustrations of standalone AAPS watches come from interacting with a tiny screen, and the fact that the current AAPS full app interface has not been designed for a watch. You may prefer to use a stylus to edit AAPS  settings on the watch, due to the restricted screen size, and some AAPS buttons may not be visible on the watch screen. </p> <p>Additional challenges are that it is hard to get sufficient battery life, and watches with sufficient battery are often bulky and thick. Users report fighting with the OS and power-saving settings, difficulty in starting sensors on the watch, poor bluetooth range (for maintaining connection with both the sensor and pump) and questionable water resistance. Examples are shown in the photos below (photo credit: Janvier Doyon).</p> <p></p> <p></p> <p>If you are interested in setting up a standalone watch, read the posts and comments on the AAPS  Facebook group (good search options are \u201cstandalone\u201d and \u201cLemfo\u201d) and Discord for more information.</p>"},{"location":"remote-control/#option-2-aaps-on-watch-for-remote-control-of-aaps-on-a-phone","title":"Option 2) AAPS on watch, for remote control of AAPS on a phone","text":"<p>Similarly to using a follower phone with either AAPSClient, Nightscout or SMS commands (link to sections) a smartwatch can be used to remotely control AAPS and provide full profile data. A key difference to using a follower phone is that the smartwatch to AAPS phone link is via bluetooth and does not require an authenticator code. As a side-note, users have reported that if both smartwatch and phone linked by bluetooth are also on the same wifi network, the watch may also interact with the smartphone over the wifi, giving a longer range of communication.</p> <p>A remote control smartwatch is therefore often useful in any situation where:</p> <p>a)  AAPSClient/Nightscout/SMS commands cannot work; or</p> <p>b)  the user wishes to avoid the need for authenticator code (as required for the follower phone with inputting data, selecting TT or entering carbs).</p> <p>A smartwatch needs to have Android wear software (ideally 10 or higher) to be able to control AAPS. Please check the technical specifications of the watch, and check the spreadsheet of compatible watches. Search, or ask in the AAPS  Facebook/Discord groups if unsure. </p> <p>Specific How-to guides for setting up AAPS on the Samsung Galaxy Watch 4 (40mm) is given below. The Garmin watch is also a popular choice. If you have experience of setting up a different smartwatch which you think would be useful to others, please add it into these pages edit the documentation to share your findings with the wider AAPS community. </p>"},{"location":"remote-control/#the-aaps-wear-apk","title":"The AAPS Wear apk","text":"<p>The Wear OS App of AAPS  (\u201cWear OS apk\u201d) required for the smartwatch has been separated from the \"full\" AAPS build for the Android phone. Therefore you have to generate a second installation file, or apk, to install AAPS wear onto the watch (which is done by side-loading it from the phone). It is strongly recommended that the AAPS Wear apk file is built immediately after first building the full AAPS apk for the phone. Not only is this very quick to do if you are building AAPS for the first time, but it will avoid any potential compatibility issues when you try to set up the watch-phone communication. The AAPS Wear apk on the watch is unlikely to be compatible with the AAPS phone apk if they have been built in different versions of Android Studio, or if months have past since the initial AAPS build. </p> <p>If you are already using AAPS on a phone and you did not build both the phone and watch (wear) AAPS apks at the same time, to ensure success it is therefore best to do a fresh build of both apk files at the same time. If you have already installed Android studio, then you may wish to uninstall and then reinstall Android studio as outlined below, and build the AAPS phone and watch apks at the same time, using the same keystore file. </p>"},{"location":"remote-control/#how-to-uninstall-android-studio","title":"How to uninstall Android Studio","text":"<p>Make sure your keystore file is safely stored elsewhere on your computer, outside of the Android Studio folders. </p> <p>There are several steps required to completely remove Android Studio from a computer. This is a good guide if you are using a Windows machine.  In the final step of these instructions, you also need to manually remove the folder \u201cStudioProjects\u201d.</p> <p>Now reinstall the latest version of Android Studio.</p>"},{"location":"remote-control/#building-the-aaps-wear-apk","title":"Building the AAPS Wear apk","text":"<p>As a summary, the build process for the Wear apk is very similar to that for the \"full\" phone apk, the difference is that in Android Studio you need to select \u201cAndroidAPS.wear\u201d  in the drop-down menu, and as build variant choose \u201cfullRelease\u201d. This will generate the AAPS Wear apk file.  If you prefer, you can build \u201cpumpcontrolRelease\u201d instead, from the drop-down menu, which will allow you to just remotely control the pump but without looping. </p> <p>The following guide assumes you have reinstalled the latest version of Android studio (scenario below has used Giraffe 2022.3.1)).</p> <p></p> <p>To get back here: </p> <p></p> <p>continue to follow the instructions.</p> <p>Follow the prompts through the different screens until you are given an option with a dropdown menu offering to build the AAPS full apk. At this point, select  \u201cWear\u201d from the dropdown instead of \u201cAndroidAPS.apk\u201d because you are building the apk for the smartwatch. </p> <p>Next Step go to \"Build\" in the ribbon </p> <p></p> <p>Go to Build &gt; Generate Signed Bundle / APK</p> <p></p> <p>Select &gt; APK:</p> <p></p> <p>Select in Module: AndroidAPSwear</p> <p></p> <p>Enter keystore file at the default location. Your keystore path will depend where you have stored your Keystore. For this scenario the keystore path was located:  C:\\Program Files\\Android\\Android Studio\\jbr\\bin</p> <p>The next screen should show this:</p> <p></p> <p>And select \u201cfullRelease\u201d.</p> <p>Be patient - the AAPS Wear apk should be built in around 10-20 minutes, depending on the speed of your internet connection. </p>"},{"location":"remote-control/#troubleshooting","title":"Troubleshooting","text":"<p>In the process of building the 3.2 full AAPS app (and in fact any signed app), Android Studio generates a .json file in the same folder. This then causes errors with uncommitted changes when you try to build the next signed app, like the AAPS wear app. The quickest way to resolve this is to navigate to the folder where the full AAPS app has been built, your folder is probably something like: </p> <p>C:\\Users\\Your Name\\StudioProjects\\AndroidAPS\\app\\aapsclient\\release. </p> <p>Either delete, or move the unneeded .json file out of the folder. Then try to build the AAPS wear app again. If that doesn't work, the more detailed troubleshooting guide will help you to identify the specific file causing the issue, which could also be your keystore file. </p>"},{"location":"remote-control/#how-to-set-up-a-samsung-galaxy-4-smartwatch-with-aaps","title":"How to set up a Samsung Galaxy 4 smartwatch with AAPS","text":"<p>This section assumes you are totally new to Smartwatches, and gives you basic orientation of a popular watch, the Galaxy Watch 4, followed by a step-by-step guide to setup AAPS on the watch. </p> <p>This guide assumes the Samsung Galaxy watch you are setting up is running Wear OS version 3 or lower. If you are setting up a watch running Wear OS 4/OneUI 5 or later, you will need to use a new ADB pairing process, this is explained in the Samsung software on your phone and will be updated here in due course.  Here are basic setup guides for the Galaxy Watch 5 and Galaxy Watch 6 </p>"},{"location":"remote-control/#basic-smartwatch-familiarity","title":"Basic smartwatch familiarity","text":"<p>After basic setup of your watch according to the video above, go to the playstore on the phone and download the following apps: \"Galaxy Wearable\" \u201cSamsung\u201d and either \u201cEasy Fire tools\u201d or \"Wear Installer 2\". </p> <p>There are plenty of 3rd party YouTube videos which will help you with getting familiar with your new smartwatch, for example:</p> <p>https://www.youtube.com/watch?v=tSVkqWNmO2c</p> <p>The app \u201cGalaxy Wearable\u201d also has an instruction manual section in it. Open galaxy wearable on the phone, search for the watch, attempt to pair the watch with the phone. Depending on your version, this may prompt you to install a further 3rd app \u201cgalaxy watch 4 plugin\u201d from the playstore (takes a while to download). Install this on the phone, and then attempt to pair the watch and phone again in the wearable app. Go through a series of menus and tick various preferences. </p>"},{"location":"remote-control/#setting-up-a-samsung-account","title":"Setting up a Samsung account","text":"<p>You need to make sure that the email account you use to set up the Samsung account has a date-of-birth such that the user is age 13+, as otherwise the Samsung permissions are really difficult to approve. If you have given your child under 13 a Gmail account and are using that email address, you cannot simply change it to an adult account. One way around this is to modify the current date-of-birth to make the current age 12 years and 363 days old. The following day, the account will be converted to an adult account, and you can progress with the setup of the Samsung account. </p>"},{"location":"remote-control/#transferring-the-aaps-wear-app-onto-your-aaps-phone","title":"Transferring the AAPS Wear app onto your AAPS phone","text":"<p>Loading the Wear.apk from Android Studio to your phone can be done either by: </p> <p>a)  using a USB cable to put the AAPS wear apk file onto the phone, and then \u201cside-load\u201d it to the watch. Transfer Wear.apk to the phone via USB into the downloads folder; or</p> <p>b)  cut and paste Wear.apk from Android Studio onto your Gdrive.</p> <p>You can use either Wear Installer 2 or Easy Fire tools to side-load AAPS onto the watch. Here we recommend Wear Installer 2, because the instructions and process in the video are so clear and well-explained.  </p>"},{"location":"remote-control/#using-wear-installer-2-to-side-load-aaps-wear-from-the-phone-onto-the-watch","title":"Using Wear Installer 2 to side-load AAPS Wear from the phone onto the watch","text":"<p>Wear Installer 2, developed by Malcolm Bryant can be downloaded from Google Play onto your phone and can be used to side-load the AAPS wear app onto the watch. The app includes a handy \u2018how to sideload\u2019 video.</p> <p>This provides all the necessary detail (best to open the video on a separate device so you can watch it whilst setting up the phone). </p> <p>As mentioned in the video, once complete, switch ADB debugging off on the watch, to avoid draining the smartwatch battery.</p> <p>Alternatively, you can:</p> <p>:::{admonition} Use Easy Fire tools to side-load the AAPS wear on the watch :class: dropdown</p> <p>1)   Download Easy Fire Tools from playstore onto phone </p> <p></p> <p>2)  Make yourself a developer in the watch (once set up and connected to phone): </p> <p>Go to settings &gt;about watch (bottom option) &gt;- software info &gt; software version. </p> <p>Rapidly tap on \u201c software version\u201d until a notification appears that the watch is now in \"developer mode\". Return to the top of settings menu, scroll to the bottom  and see \u201cdeveloper options\u201d below \u201cabout watch\u201d. </p> <p>In \u201cdeveloper options\u201d, turn on \u201cADB debugging\u201d and \u201cwireless debugging\u201d. The latter option then reveals the IP address of the watch, the final two digits of which changes each time the watch is paired with a new phone. It will be something like: 167.177.0.20. 5555 (ignore the last 4 digits). Note that the last two digits (here, \u201c20\u201d) of this address will change every time you change to a new phone handset for AAPS.  </p> <p></p> <p>STEP 3)     Enter IP address e.g. 167.177.0.20 into Easy Fire tools on the phone (go into the left hamburger, settings and enter the IP address). Then click the plug socket icon on the top right.  </p> <p></p> <p></p> <p>STEP 4) Follow the instructions here to side-load (i.e. transfer)  Wear.apk onto the smartwatch using Easy Fire tools</p> <p>Click side \"plug-in\" socket in the app, in order to upload Wear OS.apk onto the smartwatch: </p> <p></p> <p>Next step &gt; accept the authorisation request on the smartwatch</p> <p></p> <p>:::</p>"},{"location":"remote-control/#setting-up-the-connection-between-the-watch-and-the-phone-from-aaps","title":"Setting up the connection between the watch and the phone from AAPS","text":"<p>The final step is to configure AAPS on the phone to interact with AAPS Wear\u201d on the watch. To do this, enable the Wear plugin in Config Builder:</p> <p>\u25cf   Go to the AAPS app on the phone</p> <p>\u25cf   Select &gt; Config Builder in the left-hand Hamburger tab</p> <p>\u25cf   Tick for Wear selection under General</p> <p></p> <p>To change to a different AAPS  watchface, press on the home screen of the  watch and it will come to \u201ccustomise\u201d. Then swipe right until you get to all the AAPS  faces. </p> <p>If the AAPS Wear.apk has been successfully side-loaded onto the smartwatch, it will look like this: </p> <p></p>"},{"location":"remote-control/#troubleshooting-the-aaps-watch-aaps-phone-communication","title":"Troubleshooting the AAPS watch- AAPS phone communication","text":"<ol> <li>If EasyFire tools does not connect or if you are receiving \u2018authorisation failed\u2019 &gt; check IP address has been correctly entered.</li> <li>Check that the smartwatch is connected to the internet (and not just connected to the phone via Bluetooth).</li> <li>Check that the AAPS Phone and smartwatch are paired or linked in Samsung app.</li> <li>It may also help to do a hard restart of Phone and smartwatch (meaning turning phone on and off)</li> <li>Assuming you have managed to download the Wear.apk onto your phone but you are not receiving any BG data, check that you have side-loaded the correct AAPS apk version onto the watch. If your AAPS wear.apk version is listed as any of the following: a) \u201cwear-AAPSClient-release\u2019; b) \u2018wear-full-release.aab\u2019; or c) the word \u2018debug\u2019 appears in the title,  you have not selected the correct Wear OS apk version during the build.</li> <li>Check that your router is not isolating the devices from one another.</li> </ol> <p>More troubleshooting tips can be found here</p>"},{"location":"remote-control/#troubleshooting-sony-smartwatch-setup","title":"Troubleshooting Sony smartwatch setup","text":"<p>Although it was discontinued a few years ago, if you are using a Sony Smartwatch SW 3 please see here for a troubleshooting guide:  Troubleshooting Sony Smartwatch SW 3</p>"},{"location":"remote-control/#controlling-aaps-from-the-wear-watch","title":"Controlling AAPS from the Wear Watch","text":"<p>The following functions can be triggered from the smartwatch:</p> <p>\u25cf   set a temporary target</p> <p>\u25cf   use the bolus calculator (calculation variables can be defined in settings on the phone)</p> <p>\u25cf   administer eCarbs</p> <p>\u25cf   administer a bolus (insulin + carbs)</p> <p>\u25cf   watch settings</p> <p>\u25cf   status</p> <p>\u25cf   check pump status</p> <p>\u25cf   check loop status</p> <p>\u25cf   check and change profile, CPP (Circadian Percentage Profile = time shift + percentage)</p> <p>\u25cf   show TDD (Total daily dose = bolus + basal per day)</p>"},{"location":"remote-control/#communication-from-caregivers-to-the-watch-using-other-apps-like-whatsapp","title":"Communication from caregivers to the watch using other apps (like Whatsapp)","text":"<p>It is possible to add additional apps to the watch, like Whatsapp, for messaging (for example) between caregivers and kids. It is important only to have ONE Google account associated with the phone, or the watch will not bring this data across. You need to be 13 or older to have a Samsung account, and this needs to be set up in the same email address which is used on the Android phone.  </p> <p>A video explaining getting Whatsapp setup for messaging on the Galaxy 4 watch (you can\u2019t get full functionality of Whatsapp) is shown here</p> <p>Making adjustments in both the Galaxy wearable app on the AAPS phone and the watch makes it possible for Whatsapp messages to announce with a slight vibration, and also for the Whatsapp message to display over the existing watchface.</p>"},{"location":"remote-control/#option-3-aapsclient-on-a-watch-for-remote-control-of-aaps-on-a-phone","title":"Option 3) AAPSClient on a watch for remote control of AAPS on a phone","text":"<p>The software for the watch, AAPSClient Wear apk, can be downloaded directly from Github.</p> <p>To download the software, click on the required app (in this screenshot, either wear-aapsclient-release_3.2.0.1 or wear-aapsclient2-release_3.2.0.1 would work, there are two versions in case you need a copy for a second caregiver watch):</p> <p></p> <p>Then \"save as\" and save the file to a convenient location on your computer:</p> <p></p> <p>The AAPSClient wear apk can be transferred to your phone and side-loaded onto the watch in the same way as the AAPS Wear app, as detailed in Transferring the Wear app onto your AAPS phone </p>"},{"location":"remote-control/#option-4-limited-nightscout-and-other-options-on-a-watch-fitbit-watches","title":"Option 4) Limited Nightscout (and other options) on a watch - Fitbit watches","text":"<p>\"Sentinel\" is a clockface developed by Ryan Chen for his family and shared for free for the Fitbit smart watches: Sense1/2, Versa 2/3/4. it is not compatible with the FitBit Luxe since this is only a fitness tracker. Sentinel can be downloaded from the FitBit mobile app. </p> <p>It allows the monitoring of 1, 2, or 3 individual's blood glucose numbers using either Dexcom Share, Nightscout, or a combination of the two as data sources. </p> <p>You can also use xDrip+ or SpikeApp if used with local web server mode. Users can set custom alarms and submit events using Nightscout's careportal functionality directly from the watch to help track insulin-on-board (IOB), carbs-on-board (COB), enter meal information (carb count and bolus amount), and BG check values. </p> <p>All will appear on the Nightscout timeline-graph, and as updated values in the IOB and COB fields. Community support can be found at the dedicated Facebook group, Sentinel.</p> <p>There are additional options for FitBit watches which appear to be for monitoring only. This includes Glance. These additional options are described in the Nightscout webpages.</p>"},{"location":"remote-control/#option-5-monitoring-of-aaps-full-profile-data-or-glucose-only-where-aaps-is-running-on-a-phone","title":"Option 5) Monitoring of AAPS (full profile data, or glucose-only) where AAPS is running on a phone.","text":"<p>These options are described in more detail in the \"following only\" section of the documentation. </p> <p>In general, there are a wide range of affordable smartwatches which can provide glucose display only. If you are using Nightscout, then a good overview of all the options are described in the Nightscout pages.</p>"},{"location":"Installing-AndroidAPS/Building-APK/","title":"Building the APK","text":""},{"location":"Installing-AndroidAPS/Building-APK/#build-yourself-instead-of-download","title":"Build yourself instead of download","text":"<p>AAPS is not available as download due to regulation for medical devices. It is legal to build the app for your own use, but you must not give a copy to others! See FAQ page for details.</p>"},{"location":"Installing-AndroidAPS/Building-APK/#important-notes","title":"Important notes","text":"<ul> <li>Please use Android Studio Giraffe\" (2022.3.1) or newer to build the apk.</li> <li>Windows 32-bit systems are not supported by Android Studio</li> </ul> <p>(Building-APK-recommended-specification-of-computer-for-building-apk-file)=</p>"},{"location":"Installing-AndroidAPS/Building-APK/#recommended-specification-of-computer-for-building-apk-file","title":"Recommended specification of computer for building apk file","text":"OS (Only 64 bit) Windows 8 or higher Mac OS 10.14 or higher Any Linux supports Gnome, KDE, or Unity DE;\u00a0\u00a0GNU C Library 2.31 or later <p>CPU (Only 64 bit) x86_64 CPU architecture; 2nd generation Intel Core or newer, or AMD CPU with support for a Windows Hypervisor ARM-based chips, or 2nd generation Intel Core or newer with support for Hypervisor.Framework x86_64 CPU architecture; 2nd generation Intel Core or newer, or AMD processor with support for AMD Virtualization (AMD-V) and SSSE3 <p>RAM <p>8GB or more <p>Disk <p>At least 30GB free space. SSD is recommended. <p>Resolution <p>1280 x 800 Minimum  <p>Internet <p>Broadband <p>Please keep in mind that both 64 bit CPU and 64 bit OS are mandatory condition. If your system DOES NOT meet this condition, you have to change affected hardware or software or the whole system. It is strongly recommended to use SSD (Solid State Disk) instead of HDD (Hard Disk Drive) because it will take less time when you are building the APS installation apk file. Recommended is just recommended and it is not a mandatory. However, you may still use a HDD when you are building apk file but note that the building process can take a long time to complete, although once started, you can leave it running unattended.</p>"},{"location":"Installing-AndroidAPS/Building-APK/#this-article-is-divided-into-two-parts","title":"This article is divided into two parts.","text":"<ul> <li>In the overview part there is an explanation on what steps are necessary to build the APK file.</li> <li>In the step by step walkthrough part you will find the screenshots of a concrete installation. Because the versions of Android Studio - the software development environment which we will use to build the APK - will change very quickly this will be not identical to your installation but it should give you a good starting point. Android Studio also runs on Windows, Mac OS X and Linux and there might be small differences in some aspects between each platform. If you find that something important is wrong or missing, please inform the facebook group \"AAPS users\" or in the Discord chat Android APS so that we can have a look at this.</li> </ul>"},{"location":"Installing-AndroidAPS/Building-APK/#overview","title":"Overview","text":"<p>In general, the steps necessary to build the APK file:</p> <ol> <li>Install git</li> <li>Install Android Studio</li> <li>Set git path in Android Studio preferences</li> <li>Download AAPS code</li> <li>Download Android SDK</li> <li>Build the app (generate signed apk)</li> <li>Transfer apk file to your phone</li> <li>Identify receiver if using xDrip+</li> </ol>"},{"location":"Installing-AndroidAPS/Building-APK/#step-by-step-walkthrough","title":"Step by step walkthrough","text":"<p>Detailed description of the steps necessary to build the APK file.</p>"},{"location":"Installing-AndroidAPS/Building-APK/#install-git-if-you-dont-have-it","title":"Install git (if you don't have it)","text":"<p>Follow the manual on the git installation page.</p> <p>(Building-APK-install-android-studio)=</p>"},{"location":"Installing-AndroidAPS/Building-APK/#install-android-studio","title":"Install Android Studio","text":"<p>The following screenshots have been taken from Android Studio Version Arctic Fox | 2020.3.1. Screens can change in future versions of Android Studio. But you should be able to find your way through. Help from the community is provided.</p> <p>One of the most important things when installing Android Studio: Be patient! During installation and setup Android Studio is downloading a lot of stuff which will take its time.</p> <p>Download Android Studio from here and install it on your computer.</p> <p>On first start you will find the setup wizard:</p> <p>Select \"Do not import settings\" as you have not used it before.</p> <p></p> <p>Decide whether you want to share data with Google or not.</p> <p></p> <p>On the following screen click \"Next\".</p> <p></p> <p>Select \"Standard\" installation and click \"Next\".</p> <p></p> <p>Select the theme for the user interface you like. (In this manual we used \"Light\".) Then click \"Next\".</p> <p>Note:  This is just the color scheme. You can select whatever you like (i.e. \"Darcula\" for dark mode). This selection has no influence on building the APK but the following screenshots might look different.</p> <p></p> <p>Click \"Next\" on the \"Verify Settings\" dialog.</p> <p></p> <p>Click on all three license agreement parts and select \"Agree\". When you have agreed to all, the \"Finish\" button will be enabled and you can \"Finish\".</p> <pre><code>![Agree license agreements](../images/studioSetup/07_LicenseAgreement.png)\n</code></pre> <p>Wait while Android Studio downloads additional components and be patient. Once everything is downloaded button \"Finish\" turns blue. Click the button now.</p> <p></p> <p>(Building-APK-download-AAPS-code)=</p>"},{"location":"Installing-AndroidAPS/Building-APK/#download-aaps-code","title":"Download AAPS code","text":"<ul> <li>On the Android Studio welcome screen select \"Projects\" (1) on the left and then \"Get from VCS\" (2).</li> </ul> <ul> <li> <p>If you already opened Android Studio and do not see the welcome screen anymore select File (1) &gt; New (2) &gt; Project from Version Control... (3)</p> <p></p> </li> <li> <p>We will now tell Android Studio were to get the code from:</p> <ul> <li>Make sure you have selected \"Repository URL\" on the left (1).</li> <li>Check if \"Git\" is selected as version control (2).</li> <li>Copy and paste the URL   <pre><code>https://github.com/nightscout/AndroidAPS\n</code></pre>   to the main AAPS repository into the URL textbox (3).</li> <li>Choose the directory where you want to save the cloned code (4).</li> </ul> <p></p> </li> <li> <p>Click button \"Clone\" (5).</p> </li> </ul> <p></p> <ul> <li> <p>Do not click \"Background\" while repository is cloned!</p> </li> <li> <p>After the repository is cloned successfully, Android Studio will open the cloned project.</p> </li> <li> <p>You will be asked whether you want to trust the project. Click on \"Trust project\"!</p> </li> </ul> <p></p> <ul> <li>In the status bar at the bottom you will see the information that Android Studio is running background tasks.</li> </ul> <p></p> <ul> <li>Windows only: Grant access if your firewall is asking for permission.</li> </ul> <p></p> <ul> <li>Once the background tasks are finished you will probably see an error saying that errors occurred (1) or (2) or (3).</li> </ul> <p> </p> <p>Don't worry, this will be solved soon!</p> <p>(Building-APK-set-git-path-in-preferences)=</p>"},{"location":"Installing-AndroidAPS/Building-APK/#set-git-path-in-preferences","title":"Set git path in preferences","text":"<p>Make sure git is installed on your computer and you have restarted your computer since installing.</p> <p>On the Android Studio welcome screen click \"Customize\" (1) on the left and then select the link  \"All settings...\" (2):</p> <p></p>"},{"location":"Installing-AndroidAPS/Building-APK/#windows","title":"Windows","text":"<ul> <li> <p>As windows user, make sure you have restarted your computer after installing Git.</p> </li> <li> <p>In the menu, go to  File (1) &gt; Settings (2) (or Android Studio &gt; Preferences on Mac).</p> </li> </ul> <p></p> <ul> <li>Double-click \"Version Control\" (1) to open the sub-menu.</li> <li>Click Git (2).</li> <li>Make sure update method \"Merge\" (3) is selected.</li> <li>Check if Android Studio can locate path to git.exe automatically by clicking the button \"Test\" (4).</li> </ul> <p></p> <ul> <li>If automatic setting is successful git version will be displayed next to the path.</li> </ul> <p></p> <ul> <li>Eventually git.exe cannot be found automatically or the Test will result in an error (1):</li> </ul> <p></p> <p>In this case click on the folder icon (2).</p> <ul> <li> <p>Use search function in windows explorer to find \"git.exe\" if you are unsure where git has been installed. You are looking for a file named \"git.exe\", located in *\\bin* folder.</p> </li> <li> <p>Select path to git.exe and make sure you selected the one in ** \\bin\\ ** folder (3) and click \"OK\" (4).</p> </li> </ul> <p></p> <ul> <li> <p>Check your selected git path again with the \"Test\" button as described above.</p> </li> <li> <p>When the git version is displayed next to the path (see screenshot above), close settings window by clicking \"OK\" button (5).</p> </li> </ul>"},{"location":"Installing-AndroidAPS/Building-APK/#mac","title":"Mac","text":"<ul> <li>Any git version should work. For example https://git-scm.com/download/mac.</li> <li>Use homebrew to install git: <code>$ brew install git</code>.</li> <li>For details on installing git see the official git documentation.</li> <li>If you install git via homebrew there is no need to change any preferences. Just in case: They can be found here: Android Studio - Preferences.</li> </ul> <p>(Building-APK-download-android-sdk)=</p>"},{"location":"Installing-AndroidAPS/Building-APK/#download-android-sdk","title":"Download Android SDK","text":"<ul> <li>In the menu, go to  File (1) &gt; Settings (2) (or Android Studio &gt; Preferences on Mac).</li> </ul> <ul> <li>Double-click on Languages &amp; Frameworks to open its submenu (1).</li> <li>Select Android SDK (2).</li> <li>Tick the box left of \"Android 9.0 (Pie)\" (3) (API Level 28).</li> </ul> <ul> <li>Confirm changes by clicking OK.</li> </ul> <ul> <li>Wait until the SDK download and installation is finished.</li> </ul> <ul> <li>When SDK installation is completed the \"Finish\" button will turn blue. Click this button.</li> </ul> <ul> <li> <p>Android Studio might recommend to update the gradle system. Never update gradle! This will lead to difficulties!</p> </li> <li> <p>If you see an information on the lower right side of your Android Studio window that Android Gradle Plugin is ready to update click on the text \"upgrade\" (1).</p> </li> </ul> <p></p> <ul> <li>In the dialog box the select \"Don't remind me again for this project\" (2).</li> </ul> <p></p> <ul> <li>Restart Android Studio before you continue.</li> </ul> <p>(Building-APK-generate-signed-apk)=</p>"},{"location":"Installing-AndroidAPS/Building-APK/#generate-signed-apk","title":"Generate signed APK","text":"<p>Signing means that you indicate your app to be your own creation but in a digital way as a kind of digital fingerprint within the app itself. That is necessary because Android has a rule that it only accepts signed code to run for security reasons. For more information on this topic, follow this link.</p> <ul> <li>After Android Studio is started, wait until all background tasks are finished.</li> </ul> <p></p> <ul> <li>Warning:  If errors occur, do not continue with the following steps.   \\   Consult the troubleshooting section for known problems!</li> </ul> <p></p> <ul> <li>Click \"Build\" (1) in the menu bar and select \"Generate Signed Bundle / APK...\" (2).</li> </ul> <p></p> <ul> <li>Select \"APK\" (1) instead of \"Android App Bundle\" and click \"Next\" (2).</li> </ul> <p></p> <ul> <li>Make sure that module is set to \"AndroidAPS.app\" (1).</li> <li>Click \"Create new...\" (2) to start creating your key store.</li> </ul> <p>Note: A key store in this case is nothing more than a file in which the information for signing is stored. It is encrypted and the information is secured with passwords.</p> <p></p> <ul> <li>Click the folder symbol to select a path on your computer for your key store.</li> </ul> <p></p> <ul> <li>Select the path where your key store shall be saved (1).</li> </ul> <p></p> <p>Warning: Do not save in same folder as project. You must use a different directory!   A good location would be your home folder.</p> <ul> <li> <p>Type a file name for your key store (2) and confirm with \"OK\" (3).</p> </li> <li> <p>Enter (2) and confirm (3) the password for your key store.   </p> </li> </ul> <p>Note: Passwords for key store and key do not have to be very sophisticated. Make sure to remember those or make a note in a safe place. In case you will not remember your passwords in the future, see troubleshooting for lost key store.</p> <ul> <li> <p>Enter an alias (4) for your key. Choose whatever you like.</p> </li> <li> <p>Enter (5) and confirm (6) the password for your key</p> </li> <li> <p>Validity (7) is 25 years by default. You do not have to change the default value.</p> </li> <li> <p>First and last name must be entered (8). All other information is optional.</p> </li> <li> <p>Click \"OK\" (9) when you are done.</p> </li> <li> <p>Make sure the box to remember passwords is checked (1). So you don't have to enter them again next time you build the apk (i.e. when updating to a new AAPS version).</p> </li> <li>Click \"Next\" (2).</li> </ul> <p></p> <ul> <li>Select build variant \"fullRelease\" (1) and press \"Finish\".</li> </ul> <p></p> <ul> <li>Android Studio will show \"Gradle Build running\" at the bottom. This takes some time, depending on your computer and internet connection. Be patient!</li> </ul> <p></p> <ul> <li>Android Studio will display the information \"Generate Signed APK\" after build is finished.</li> </ul> <p></p> <ul> <li> <p>In case build was not successful refer to the troubleshooting section.</p> </li> <li> <p>Click on the notification to expand it.</p> </li> <li> <p>Click on the link \"locate\".</p> </li> </ul> <p>  * If the notification is gone, you can always open the \"Event log\" and select the same link there.     </p> <ul> <li>Your file manager/explorer will open. Navigate to the directory \"full\" (1) &gt; \"release\" (2).</li> </ul> <p></p> <ul> <li>\"app-full-release.apk\" (3) is the file you are looking for!</li> </ul> <p>(Building-APK-transfer-apk-to-smartphone)=</p>"},{"location":"Installing-AndroidAPS/Building-APK/#transfer-apk-to-smartphone","title":"Transfer APK to smartphone","text":"<p>Easiest way to transfer app-full-release.apk to your phone is via USB cable or Google Drive. Please note that transfer by mail might cause difficulties and is not the preferred way.</p> <p>On your phone you have to allow installation from unknown sources. Manuals how to do this can be found on the internet (i.e. here or here).</p>"},{"location":"Installing-AndroidAPS/Building-APK/#troubleshooting","title":"Troubleshooting","text":"<p>See separate page troubleshooting Android Studio.</p>"},{"location":"Installing-AndroidAPS/Dedicated-Google-account-for-AAPS/","title":"A dedicated Google account for AAPS (optional)","text":"<p>Some AAPS users prefer to use their main email account for AAPS as well. Alternatively, some AAPS users (or their caregivers) set-up a dedicated AAPS email account - this is optional, we give an example of how to do it below.    </p> <p>If you don't want to set up an AAPS-dedicated Gmail account, you can just go straight to the next section, building AAPS. </p> <p>:::{admonition} Advantages of a dedicated Google account for AAPS :class: dropdown</p> <ul> <li>Dedicated Google drive space means you will not risk filling up your personal Google drive limit with Export Preferences.</li> <li>Each version of AAPS (and supporting apps like xdrip+, BYODA, etc) will be stored in one single place which is independent of your computer hardware. If your PC or phone is stolen/lost/broken you will still have access.</li> <li>By harmonizing the setup, it will make online support simpler across users with similar folder structure.</li> <li>Depending on the setup (see below), you will have a separate identity as an alias to communicate within the community which can protect your privacy.\u00a0</li> <li>Children with T1D can preserve their own \u201ceveryday\u201d email account as minors while using AAPS and associated features which require an adult account.</li> <li>Gmail allows you to register up to 4 accounts under the same phone number.   :::</li> </ul>"},{"location":"Installing-AndroidAPS/Dedicated-Google-account-for-AAPS/#how-to-set-up-a-dedicated-google-account-for-aaps","title":"How to set up a dedicated Google account for AAPS","text":"<p>(\u231bAbout 10 minutes)</p> <p></p> <p>Requirements:</p> <ul> <li>You have a Windows\u2019 PC (Windows 10 or newer) and a Android phone (Android 9 or newer) which will host the AAPS app. These both have all the latest security updates, internet access and admin privileges, since some steps require downloading and installing programs.</li> <li>The Android phone is already set-up with your personal \u201deveryday\u201d\u00a0 email address, such as a Gmail account.</li> </ul> <p>:::{admonition} Things to consider when setting up your new account :class: dropdown - You could use a name different to your own, which has relevance to the account (like t1dsuperstar) for privacy reasons. You can then use it in AAPS public forums while keeping your own identity private. Since Google requires a recovery email and phone number, it is still traceable. - The new AAPS account will use the same phone number for verification as your \u201ceveryday\u201d one. It will use the \u201ceveryday\u201d email address for verification; - We will setup email forwarding such that any email sent to the new dedicated AAPS account will be forwarded to the primary one (so there is no need to check two different mailboxes); - Use separate passwords for your everyday Gmail account and the AAPS-dedicated Gmail account - If you use google \u201c2-step verification\u201d (aka multifactor) authentication for one Gmail account, you might as well do it for both Gmail accounts. - If you plan to use Google \u201cPasskeys\u201d, make sure you register multiple devices. This is so you don\u2019t lock yourself out. Only do it on devices that nobody else can access (i.e. not on a PC with a shared account that other people can unlock).   ::: \u00a0</p> <p>:::{admonition}  Video Walkthrough!  :class: Note Click here for a video walkthrough of how to set up a dedicated Google account. :::</p> <p>These are the steps outlined in the video:</p> <p>In this example:\u00a0 - Your existing \u201cEveryday\u201d Google account is donald.muck42@gmail.com\u00a0;  - Your new \u201cAAPS\u201d Gmail account will be: donald.muck42.aaps@gmail.com; </p>"},{"location":"Installing-AndroidAPS/Dedicated-Google-account-for-AAPS/#go-to-httpsaccountgooglecom","title":"Go to https://account.google.com","text":"<p>If you are already logged into Google, this will direct you to your \u201cEveryday\u201d My Account page.  (1) Click on the top right of the page on your profile picture (in this case, a simple   (2) select \u201cadd another account\u201d.</p> <p></p>"},{"location":"Installing-AndroidAPS/Dedicated-Google-account-for-AAPS/#enter-your-new-dedicated-account-details","title":"Enter your NEW dedicated account details:","text":"<ul> <li>Enter the new account:\u00a0</li> <li>Create Account</li> <li>for my personal use.\u00a0</li> </ul> <p>#### Enter your persona:  - Enter firstname  - lastname  - birthdate (needs to be an Adult age)</p>"},{"location":"Installing-AndroidAPS/Dedicated-Google-account-for-AAPS/#choose-your-new-email-address-password","title":"Choose your NEW email address &amp; password","text":"<p>This example appends \u201c.AAPS\u201d to Donald Muck\u2019s existing one\u2026\\ Set a password</p>"},{"location":"Installing-AndroidAPS/Dedicated-Google-account-for-AAPS/#enter-a-phone-number-which-can-receive-the-sms-verification","title":"Enter a phone number which can receive the SMS verification","text":"<p>Gmail will now send you a unique code to enter for validation.</p>"},{"location":"Installing-AndroidAPS/Dedicated-Google-account-for-AAPS/#enter-the-recovery-email-address","title":"Enter the recovery email address","text":"<p>In this case it will be your existing \u201ceveryday\u201d email\u2026</p>"},{"location":"Installing-AndroidAPS/Dedicated-Google-account-for-AAPS/#finish-setting-up-the-account","title":"Finish setting up the account","text":"<p>Gmail will display the account name. It will ask you to accept Gmail\u2019s terms and conditions &amp; confirm your personalization settings.</p>"},{"location":"Installing-AndroidAPS/Dedicated-Google-account-for-AAPS/#customize-the-new-profile-display","title":"Customize the new profile display","text":"<p>At this point you should be on Gmail\u2019s MyAccount page showing your new AAPS-dedicated email account. The profile picture will be set by default to the first letter of your name. Change it to something unique to avoid confusion\u2026 in this example, Donald.Muck.AAPS has replaced  with </p> <p>\\ </p>"},{"location":"Installing-AndroidAPS/Dedicated-Google-account-for-AAPS/#open-the-gmail-website-on-both-windows-to-configure-the-new-account","title":"Open the Gmail website on both windows to configure the new account","text":"<p>So that you don\u2019t need to monitor a separate email account, forward all the emails from the new AAPS-dedicated account to your everyday account\u00a0\\ This part can be a bit confusing, since you will have to switch back and forth between both accounts. To make it easier, open 2 separate browser windows on top of each other:</p> <ol> <li>Move your existing browser to the top of your screen and resize it such that it only takes about half of the top of the screen\u2026\u00a0</li> <li>Right click on your Browser logo in your taskbar\u00a0</li> <li>From the menu select \u201cNew Window\u201d... and adjust it so it only takes the bottom half of the screen.</li> </ol> <p>Open https://gmail.com\u00a0 in each browser window. Make sure your personal account is on top and the new dedicated AAPS account is on the bottom, and is easily identifiable by the profile picture in the top right corner. (if needed you can always switch accounts by clicking on the profile picture and selecting the correct one.</p> <p></p> <p>Your Gmail homepages\u00a0screen should look like this:\\ </p> <p>#### In the new Gmail account (bottom window), open Gmail settings\u2026\u00a0</p> <ul> <li>Click on the gear on the left of the profile picture\u00a0</li> <li>then select \u201cSee all Settings\u201d</li> </ul> <p></p>"},{"location":"Installing-AndroidAPS/Dedicated-Google-account-for-AAPS/#setup-forwarding","title":"Setup forwarding\u2026","text":"<ul> <li>Click on the \u201cForwarding and POP/IMAP\u201d Setting tab</li> <li>Click on \u201cadd a forwarding address\u201d</li> <li>Add your \u201ceveryday\u201d email address</li> <li>Gmail will send a verification code to your \u201ceveryday\u201d email address.\u00a0</li> <li>You will switch back to your everyday profile and click on the link to verify that you accept the forwarding (or get the code from Gmail\u2019s verification email in your \u201ceveryday\u201d Gmail window and cut and paste it in your \u201cnew AAPS dedicated\u201d Gmail window).</li> </ul> <p>There is quite a bit of back and forth between the windows but this will ensure that when you check your \u201ceveryday\u201d account emails you will also see the emails forwarded from your AAPS dedicated account such as Gmail alerts.</p> <p></p>"},{"location":"Installing-AndroidAPS/Dedicated-Google-account-for-AAPS/#verify-the-forwarded-email-address","title":"Verify the forwarded email address","text":"<ul> <li>In the \u201cEveryday\u201d gmail (top window), you will get the \u201cGmail forwarding Confirmation\u201d email.\u00a0</li> <li>Open it and \u201cclick the link to confirm the request\u201d</li> </ul>"},{"location":"Installing-AndroidAPS/Dedicated-Google-account-for-AAPS/#archive-forwarded-emails-in-the-new-dedicated-gmail-account-bottom-window","title":"Archive forwarded emails in the new dedicated Gmail account (bottom window)","text":"<ol> <li>Refresh the bottom window</li> <li>Check \u201cforward incoming email\u201d</li> <li>And archive Gmail\u2019s copy (to keep your new dedicated mailbox clean)</li> <li>Scroll all the way to the bottom to save your changes\\    </li> </ol> <p>Congratulations! Now you have created an AAPS-dedicated Google account. The next step is to build the AAPS app.</p>"},{"location":"Installing-AndroidAPS/Dev_branch/","title":"Dev branch","text":""},{"location":"Installing-AndroidAPS/Dev_branch/#development-branch","title":"Development branch","text":"<p>Attention: Dev branch is for the further development of AAPS only. It should be used on a separate phone for testing not for actual looping!</p> <p>The most stable version of AAPS to use is that in the Master branch.  It is advised to stay on the Master branch for actual looping.</p> <p>The dev version of AAPS is only for developers and testers comfortable dealing with stacktraces, looking through log files and maybe firing up the debugger to produce bug reports that are helpful to the developers (in short: people that know what they are doing without being assisted!). Therefore many unfinished features are disabled. To enable these features enter Engineering Mode by creating a file named <code>engineering_mode</code> in directory /AAPS/extra . Enabling the engineering mode might break the loop entirely.</p> <p>However, the Dev branch is a good place to see what features are being tested and to help iron out the bugs and give feedback on how the new features work in practice.  Often people will test the Dev branch on an old phone and pump until they are confident it is stable - any use of it is at your own risk.  When testing any new features, remember that you are choosing to test a still-in-development feature. Do so at your own risk &amp; with due diligence to keep yourself safe.</p> <p>If you find a bug or think something wrong has happened when using the Dev branch, then view the issues tab to check whether anyone else has found it, or add it yourself if not.  The more information you can share here the better (don't forget you may need to share your log files.  The new features can also be discussed on discord.</p> <p>A dev version has an expiration date. This seems inconvenient when using it satisfactorily, but serves a purpose. When a single dev version doing the rounds, it is easier to keep track of bugs that people are reporting. The developers do not want to be in a position where there are three versions of dev in the wild where bugs are fixed in some and not others, and people continue to report the fixed ones.</p>"},{"location":"Installing-AndroidAPS/Nightscout/","title":"Nightscout","text":"<p>(Nightscout-security-considerations)=</p>"},{"location":"Installing-AndroidAPS/Nightscout/#security-considerations","title":"Security considerations","text":"<p>Besides reporting Nightscout can also be used to control AAPS. I.e. you can set temp targets or add future carbs. This information will be picked up by AAPS and it will act correspondingly. Therefore it is worth thinking about securing your Nightscout website.</p>"},{"location":"Installing-AndroidAPS/Nightscout/#nightscout-settings","title":"Nightscout settings","text":"<p>You can deny public access to your Nightscout site by using authentication roles.</p>"},{"location":"Installing-AndroidAPS/Nightscout/#aaps-settings","title":"AAPS settings","text":"<p>There is an NS upload only (no sync) function in AAPS settings. By doing so AAPS will not pick up changes done in Nightscout such as temp targets or future carbs. </p> <ul> <li>Tap 3-dot menu on top right corner on your AAPS homescreen.</li> <li>Select \"Preferences\".</li> <li>Scroll down and tap \"Advanced settings\".</li> <li>Activate \"NS upload only</li> </ul> <p></p>"},{"location":"Installing-AndroidAPS/Nightscout/#further-security-settings","title":"Further security settings","text":"<p>Keep your phone up to date as described in safety first.</p> <p>(Nightscout-manual-nightscout-setup)=</p>"},{"location":"Installing-AndroidAPS/Nightscout/#manual-nightscout-setup","title":"Manual Nightscout setup","text":"<p>It is assumed you already have a Nightscout site, if not visit the Nightscout page for full instructions on set up, the instructions below are then settings you will also need to add to your Nightscout site.  Your Nightscout site needs to be at least version 10 (displayed as 0.10...), so please check you are running the latest version otherwise you will get an error message on your AAPS app.  Some people find looping uses more than the azure free quota allowed, so heroku is the preferred choice.</p> <ul> <li> <p>Go to https://herokuapp.com/</p> </li> <li> <p>Click your App Service name.</p> </li> <li> <p>Click Application settings (azure) or Settings &gt; \"Reveal Config Variables (heroku)</p> </li> <li> <p>Add or edit the variables as follows:</p> </li> <li><code>ENABLE</code> = <code>careportal boluscalc food bwp cage sage iage iob cob basal ar2 rawbg pushover bgi pump openaps</code></li> <li><code>DEVICESTATUS_ADVANCED</code> = <code>true</code></li> <li><code>SHOW_FORECAST</code> = <code>openaps</code></li> <li><code>PUMP_FIELDS</code> = <code>reservoir battery clock</code></li> <li>Various alarms can be set for monitoring the pump, battery % in particular is encouraged:<ul> <li><code>PUMP_WARN_BATT_P</code> = <code>51</code></li> <li><code>PUMP_URGENT_BATT_P</code> = <code>26</code> </li> </ul> </li> </ul> <p></p> <ul> <li>Click \"Save\" at the top of the panel.</li> </ul>"},{"location":"Installing-AndroidAPS/Nightscout/#nightscout-as-a-paid-saas-software-as-a-service","title":"Nightscout as a paid SaaS (Software as a Service)","text":"<p>While Nightscout is an free open source software which you can download yourself free of charge you need</p> <ol> <li> <p>a cloud service provider to host your own Nightscout instance</p> </li> <li> <p>invest time to setup your Nightscout instance and MongoDB and</p> </li> <li> <p>operate your Nightscout instance which can be as easy as updating from time to time the Nightscout instance or much more complex if errors occur.</p> </li> </ol> <p>An alternative can be to pay for these SaaS services and get rid of these tasks.</p> <p>Here you find a randomly ordered list of possible service providers. We will not recommend any of them but we want to give new users a place to jump to their web site and inform themself!</p> <p></p> <p></p>"},{"location":"Installing-AndroidAPS/Releasenotes/","title":"Releasenotes","text":"<p>(Releasenotes-release-notes)=</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#release-notes","title":"Release notes","text":"<p>Please follow the instructions in the update manual. You can also find a troubleshooting section addressing the most common difficulties when updating on the update manual page.</p> <p>You will receive the following information as soon as a new update is available:</p> <p>```{image} ../images/AAPS_LoopDisable90days.png :alt: Update info <pre><code>Then you have 60 days to update. If you do not update within these 60 days AAPS will fall back to LGS (low glucose suspend - see [glossary](../Getting-Started/Glossary.md)) as in [objective 6](../Usage/Objectives.html).\n\nIf you do not update for another 30 days (90 days from new release date) AAPS will switch to Open Loop.\n\nPlease understand that this change is not intended to bug you but is due to safety reasons. New versions of AAPS do not only provide new features but also important safety fixes. Therefore it is necessary that every user updates a.s.a.p.. Unfortunately there are still bug reports from very old versions so this is a try to improve safety for every single user and the whole DIY community. Thanks for your understanding.\n\n```{admonition} First version of AAPS\n:class: note\n\nThe first test version started already in 2015. In 2016 has been the first released version.\n\nThe chronology of these releases is not available at the moment but as this questions is asked severeal times we document it here.\n</code></pre></p>"},{"location":"Installing-AndroidAPS/Releasenotes/#android-version-and-aaps-version","title":"Android version and AAPS version","text":"<p>If your smartphone uses an Android Version older than Android 9 you will not be able to use AAPS v3 and up as it requires at least Android 9.</p> <p>In order to allow users with older Android to use older version of AAPS new versions were pushed which only change version verification. No other improvements are included.</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#android-9-and-up","title":"Android 9 and up","text":"<ul> <li>Use latest AAPS version</li> <li>Download AAPS Code from https://github.com/nightscout/AndroidAPS</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#android-8","title":"Android 8","text":"<ul> <li>Use AAPS version 2.8.2.1</li> <li>Download AAPS Code from https://github.com/nightscout/AndroidAPS branch 2.8.2.1</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#android-7","title":"Android 7","text":"<ul> <li>Use AAPS version 2.6.2</li> <li>Download AAPS Code from https://github.com/nightscout/AndroidAPS branch 2.6.2</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#wearos-version","title":"WearOS version","text":"<ul> <li>AAPS 3.2 requires at least WearOS API level 28 (Android 9)</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#version-3200-dedicated-to-philoul","title":"Version 3.2.0.0 dedicated to @Philoul","text":"<p>Release date: 23-10-2023</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#important-hints","title":"Important hints","text":"<ul> <li>NS 15 is required</li> <li>While using websockets in NS v3 plugin treatments entered through NS UI (plus button) and other applications using v1 API are not sent to AAPS. This will be fixed in future release of NS. Always use the same client (v1 or v3) in AAPS and AAPSClient until NS fully switch to v3 internaly. The same is valid for AAPS and AAPSClient itself.</li> <li>Websockets in v3 plugin works similiar way to v1 plugin. Without websockets enabled AAPS schedules regularly downloads from NS which should lead to lower power consumption because NS is not permanently connected. On the oposite side it means delays in exchanging data. Please read here the important comments from the dev team before you use it!</li> <li>If you are using xdrip as cgm source you must select it again after update due to internal changes</li> <li>Tidepool can be used as a replacement of NS to pass first objective</li> <li>If you send to xDrip+ you must configure xDrip synchronization plugin. In order to receive BGs from AAPS in xDrip it must be selected source \"xDrip+ Sync Follower\"</li> <li>If you want to switch to ComboV2 driver, Ruffy must be uninstalled and pump paired again to AAPS</li> <li>In order to use DynISF plugin you have to start Objective 11 (all previous must be in finished state to allow start of 11)</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#changes","title":"Changes","text":"<ul> <li>EOPatch2 / GlucomenDay pump driver @jungsomyeonggithub @MilosKozak</li> <li>ComboV2 pump driver (no need of Ruffy) @dv1</li> <li>Medtrum Nano driver @jbr7rr</li> <li>Korean DanaI support @MilosKozak</li> <li>Glunovo CGM support @christinadamianou</li> <li>G7 support @MilosKozak @rICTx-T1D @khskekec</li> <li>NSClient v3 plugin @MilosKozak</li> <li>Tidepool support @MilosKozak</li> <li>Smoothing plugin @MilosKozak, @justmara, Exponential smoothing @nichi (Tsunami), Average smoothing @jbr7rr</li> <li>DynamicISF plugin @Chris Wilson, @tim2000s</li> <li>Garmin watchface &amp; HeartRate support @buessow</li> <li>New logo @thiagomsoares</li> <li>New watchface @Philoul</li> <li>fixed tons of issues from 3.1 version</li> <li>allow add notes on more places @Sergey Zorchenko</li> <li>UI fixes @MilosKozak @osodebailar @Andries-Smit @yodax @Philoul @dv1 @paravoid</li> <li>new SMS commands LOOP LGS/CLOSED @pzadroga</li> <li>wear translations @Andries-Smit</li> <li>xdrip communication moved to separate module @MilosKozak</li> <li>internal changes: updated libs versions, rx3 migration, new modules structure @MilosKozak</li> <li>Diaconn driver fixes @miyeongkim</li> <li>more database maintenance options @MilosKozak</li> <li>AAPSClient provides info if main phone is plugged in electricity @MilosKozak</li> <li>Change in BolusWizard. If CGM is not available percentage is ignored (ie 100% is used)</li> <li>migration to kts build system @MilosKozak</li> <li>improved CI integration @MilosKozak @buessow</li> <li>tests cleaup @ryanhaining @MilosKozak</li> <li>new 110k+ lines of code, changed 240k lines, 6884 changed files</li> </ul> <p>(Important-comments-on-using-v3-versus-v1-API-for-Nightscout-with-AAPS)=</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#important-comments-on-using-v3-versus-v1-api-for-nightscout-with-aaps","title":"Important comments on using v3 versus v1 API for Nightscout with AAPS","text":"<p>v1 is the old protocol used for exchanging data between NS web site and NS server. It has many limitations - v1 sends only 2 days of data - v1 send all 2 days data on every reconnection - using websockets is mandatory = permanent connection, more battery compsumption - during frequent disconnects to NS connection is paused for 15 minutes to prevent high data usage</p> <p>v3 is new protocol. More safe and efficient - while using tokens you can better define access rights - protocol is more efficient on both sides (AAPS &amp; NS) - It can read up to 3 months of data from NS - you can choose to use or to not use websockets on every device (using means faster updates, not using means lower power compsumption, but slower updates ie. minutes) - NSClient is not paused on disconnections</p> <p>LIMITATIONS - NS 15 must be used with AAPS 3.2 - v3 doesn't see updates done by v1 protocol (probably it will be resolved in some future version of NS) - in opposite because of old uneffective method of tracking changes v1 see changes done by v3 - remember NS still uses v1 internaly so far thus is not possible to enter data through NS web UI if you are using v3. You must use AAPSClient on SMS if you want enter data remotely</p> <p>RECOMMENDED SETTING - because of all above you should choose only one method and use it on all devices (remember all other uploaders at time of writing this are using v1). If you decide to go to v3, select v3 in AAPS and all AAPSClients - v3 is preffered because of efficiency - using websockets or not using with v3 depends on your preference - it HIGHLY recommended to let AAPS gather all data and then upload it to NS as a single uploader. All other devices/applications should only read from NS. By doing it you'll prevent conflicts and sync errors. This is valid for getting BG data to NS using Dexcom Share connector etc. too</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#version-310","title":"Version 3.1.0","text":"<p>Release date: 19-07-2022</p> <p>(Releasenotes-important-hints-3-1-0)=</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#important-hints_1","title":"Important hints","text":"<ul> <li>after update uninstall Wear app and install new version</li> <li>Omnipod users: update on pod change !!!</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#changes_1","title":"Changes","text":"<ul> <li>fixed issues from 3.0 version</li> <li>fix application freezing @MilosKozak</li> <li>fixed DASH driver @avereha</li> <li>fixed Dana drivers @MilosKozak</li> <li>huge UI improvement, cleanup and unification, migration to material design, styles, white theme, new icons. @Andries-Smit @MilosKozak @osodebailar @Philoul</li> <li>widget @MilosKozak</li> <li>Aidex CGM support @andyrozman @markvader (Pumpcontrol only)</li> <li>Watch <code>Wear OS tiles &lt;../Configuration/Configuration/Watchfaces.mdl#wear-os-tiles&gt;</code>, translations @Andries-Smit</li> <li>Wear code refactored. Not backward compatible anymore @MilosKozak</li> <li>a11y improvements @Andries-Smit</li> <li>new protection option PIN @Andries-Smit</li> <li>allow graph scale from menu @MilosKozak</li> <li>more statistics available @MilosKozak</li> <li>MDI plugin removed in favor of VirtualPump</li> <li>new automation action: StopProcessing (following rules)</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#version-300","title":"Version 3.0.0","text":"<p>Release date: 31-01-2022</p> <p>(Releasenotes-important-hints-3-0-0)=</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#important-hints_2","title":"Important hints","text":"<ul> <li>Minimum Android version is 9.0 now.</li> <li>Data is not migrated to new database. Do not complain, it's so huge change so it's simply not possible. Thus after update IOB, COB, treatments etc. will be cleared. You have to create new profile switch and start with zero IOB and COB. Plan the update carefully!!! Best in situation without active insulin and carbs</li> <li>Use the same version of AAPS and NSClient</li> </ul> <p>Make sure to check and adjust settings after updating to 3.0 as described here.</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#preparation-steps","title":"Preparation steps","text":"<p>At least two days before update:</p> <ul> <li>disable Dexcom bridge in Nightscout</li> <li>if you are using G5/G6 and xDrip as a collector, you have to update xDrip to a nightly version newer than 14th January 2022</li> <li>if you are using G5/G6 switching to BYODA as collector is recommended to take advantage of back-smoothing (you can still use xDrip for other purposes, xDrip can receive data from BYODA)</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#changes_2","title":"Changes","text":"<ul> <li> <p>100k lines changed, 105k new lines of code</p> </li> <li> <p>Omnipod DASH support @AdrianLxM @avereha @bartsopers @vanelsberg</p> </li> <li> <p>Dana-i support @MilosKozak</p> </li> <li> <p>DiaconnG8 support</p> </li> <li> <p>Glunovo support</p> </li> <li> <p>Internal database upgraded to Room @MilosKozak @Tebbe @AdrianLxm @Philoul @andyrozman</p> </li> <li> <p>Lot of code rewritten to Kotlin @MilosKozak</p> </li> <li> <p>New internal interface for pump drivers</p> </li> <li> <p>NSClient rewritten for better synchronization and more detailed customization @MilosKozak</p> </li> <li> <p>Record deletion from NS is not allowed (only invalidation through NSClient)</p> </li> <li>Record modification from NS is not allowed</li> <li>Sync setting available without engineering mode (for parents)</li> <li> <p>Ability to resync data</p> </li> <li> <p>Profile switch behavior change. Now is distinguished between Profile Switch (something that user wants) and Profile change (when change is executed by pump) @MilosKozak @Tebbe</p> </li> <li> <p>You can start activity temporary target during creation of profile switch @MilosKozak</p> </li> <li> <p>NSProfile is gone, just local profile can be used. Local profile can be synced to NS. @MilosKozak.</p> </li> <li> <p>Forgotten master password reset procedure @MilosKozak</p> </li> <li> <p>User actions tracing @Philoul</p> </li> <li> <p>New automation TempTargetValue trigger @Philoul</p> </li> <li> <p>New automation Careportal action @Philoul</p> </li> <li> <p>Add Bolus reminder in Carbs Dialog @Philoul</p> </li> <li> <p>Bolus Wizard improvement</p> </li> <li> <p>UI improvements @MilosKozak</p> </li> <li> <p>New user buttons for automations @MilosKozak</p> </li> <li> <p>New automation layout @MilosKozak</p> </li> <li> <p>History browser updated and fixed @MilosKozak</p> </li> <li> <p>Objective9 removed @MilosKozak</p> </li> <li> <p>Fixed bug associated to unstable CGM data @MilosKozak</p> </li> <li> <p>DanaR and DanaRS communication improvement @MilosKozak</p> </li> <li> <p>CircleCI integration @MilosKozak</p> </li> <li> <p>Files location change:</p> </li> </ul> <ul> <li>/AAPS/extra (engineering mode)</li> <li>/AAPS/logs /AAPS/exports</li> <li>/AAPS/preferences</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#version-282","title":"Version 2.8.2","text":"<p>Release date: 23-01-2021</p> <ul> <li>Please see also important hints for version 2.8.1.1 below.</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#changes_3","title":"Changes","text":"<ul> <li>stability improvements</li> <li>more tweaking for Android 8+</li> <li>improved icons</li> <li>watch improvements</li> <li>NSClient fixes</li> <li>Bolus advisor now works with Pumpcontrol and NSClient</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#version-2811","title":"Version 2.8.1.1","text":"<p>Release date: 12-01-2021</p> <p>(important-hints-2-8-1-1)</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#important-hints_3","title":"Important hints","text":"<ul> <li>Option NS_UPLOAD_ONLY has been forced ON for all 2.8.1 users.</li> <li>If you use NSClient to enter TT, carbs or profile switches you must turn it off in AAPS but only in case your synchronization is working well (ie. you don't see unwanted data changes like self modification of TT, TBR etc).</li> <li>ATTENTION: DO NOT do this if you have any other app handle treatments ( like xDrip broadcast/upload/sync...).</li> <li>NS_UPLOAD_ONLY can only be turned off if engineering mode is enabled.</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#major-changes","title":"Major changes","text":"<ul> <li>RileyLink, Omnipod and MDT pump improvements and fixes</li> <li>forced NS_UPLOAD_ONLY</li> <li>fix for SMB &amp; Dexcom app</li> <li>watchface fixes</li> <li>crash reporting improved</li> <li>gradle reverted to allow direct watchface instalation</li> <li>automation fixes</li> <li>RS driver improvement</li> <li>various crashes fixed</li> <li>UI fixes and improvements</li> <li>new translations</li> </ul> <p>(Releasenotes-version-2-8-0)=</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#version-280","title":"Version 2.8.0","text":"<p>Release date: 01-01-2021</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#important-hints_4","title":"Important hints","text":"<ul> <li>Minimum Android version is 8.0 now. For older Android versions you can still use 2.6.1.4 from old repo.</li> <li>Objectives have changed. Finish not completed objectives before update.</li> <li>Repository location still on https://github.com/nightscout/AndroidAPS . If you are not familiar with git the easiest way for update is remove directory with AAPS and do a new clone.</li> <li>Please use Android Studio 4.1.1 or newer to build the apk.</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#major-new-features","title":"Major new features","text":"<ul> <li>Omnipod Eros support @bartsopers @andyrozman @ktomy @samspycher @TeleRiddler @vanelsberg @eurenda and special thanks to @ps2 @itsmojo, everybody else involved in the Loop driver for Omnipod and @jlucasvt from GetRileyLink.org</li> <li>bolus advisor &amp; eating reminder @MilosKozak</li> <li>New watchface @rICTx-T1D</li> <li>Dana RS connection improvements @MilosKozak</li> <li>Removed \"Unchanged CGM values\" behavior in SMB for Dexcom native app</li> <li>New Low Ressolution Skin</li> <li>New \"Pregnant\" patient type @Brian Quinion</li> <li>New NSClient tablet layout @MilosKozak</li> <li>NSClient transfer insulin, senstivity and display settings directly from main AAPS @MilosKozak</li> <li>Preferences filter @Brian Quinion</li> <li>New pump icons @Rig22 @@teleriddler @osodebailar</li> <li>New insulin type Lyumjev</li> <li>SetupWizard improvements @MilosKozak</li> <li>Security improvements @dlvoy</li> <li>Various improvements and fixes @AdrianLxM @Philoul @swissalpine  @MilosKozak @Brian Quinion</li> </ul> <p>(Releasenotes-version-2-7-0)=</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#version-270","title":"Version 2.7.0","text":"<p>Release date: 24-09-2020</p> <p>Make sure to check and adjust settings after updating to 2.7 as described here.</p> <p>You need at least start objective 11 (in later versions objective 10!) in order to continue using Automation feature (all previous objectives must be completed otherwise starting Objective 11 is not possible). If for example you did not finish the exam in objective 3 yet, you will have to complete the exam before you can start objective 11. This will not effect other objectives you have already finished. You will keep all finished objectives!</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#major-new-features_1","title":"Major new features","text":"<ul> <li>internal use of dependency injection, updates libraries, code rewritten to kotlin @MilosKozak @AdrianLxM</li> <li>using modules for Dana pumps @MilosKozak</li> <li>new layout, layout selection @MilosKozak</li> <li>new status lights layout @MilosKozak</li> <li>multiple graphs support @MilosKozak</li> <li>Profile helper @MilosKozak</li> <li>visualization of dynamic target adjustment @Tornado-Tim</li> <li>new preferences layout @MilosKozak</li> <li>SMB algorithm update @Tornado-Tim</li> <li>Low glucose suspend mode @Tornado-Tim</li> <li>carbs required notifications @twain47 @Tornado-Tim</li> <li>removed Careportal (moved to Actions) @MilosKozak</li> <li>new encrypted backup format @dlvoy</li> <li>new SMS TOTP authentication @dlvoy</li> <li>new SMS PUMP CONNECT, DISCONNECT commands @Lexsus</li> <li>better support for tiny basals on Dana pumps @Mackwe</li> <li>small Insight fixes @TebbeUbben @MilosKozak</li> <li>\"Default language\" option @MilosKozak</li> <li>vector icons @Philoul</li> <li>set neutral temps for MDT pump @Tornado-Tim</li> <li>History browser improvements @MilosKozak</li> <li>removed OpenAPS MA algorithm @Tornado-Tim</li> <li>removed Oref0 sensitivity @Tornado-Tim</li> <li>Biometric or password protection for settings, bolus @MilosKozak</li> <li>new automation trigger @PoweRGbg</li> <li>Open Humans uploader @TebbeUbben @AdrianLxM</li> <li>New documentation @Achim</li> </ul> <p>(Releasenotes-version-2-6-1-4)=</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#version-2614","title":"Version 2.6.1.4","text":"<p>Release date: 04-05-2020</p> <p>Please use Android Studio 3.6.1 or newer to build the apk.</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#major-new-features_2","title":"Major new features","text":"<ul> <li>Insight: Disable vibration on bolus for firmware version 3 - second attempt</li> <li>Otherwise is equal to 2.6.1.3. Update is optional.</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#version-2613","title":"Version 2.6.1.3","text":"<p>Release date: 03-05-2020</p> <p>Please use Android Studio 3.6.1 or newer to build the apk.</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#major-new-features_3","title":"Major new features","text":"<ul> <li>Insight: Disable vibration on bolus for firmware version 3</li> <li>Otherwise is equal to 2.6.1.2. Update is optional.</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#version-2612","title":"Version 2.6.1.2","text":"<p>Release date: 19-04-2020</p> <p>Please use Android Studio 3.6.1 or newer to build the apk.</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#major-new-features_4","title":"Major new features","text":"<ul> <li>Fix crashing in Insight service</li> <li>Otherwise is equal to 2.6.1.1. If you are not affected by this bug you don't need to upgrade.</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#version-2611","title":"Version 2.6.1.1","text":"<p>Release date: 06-04-2020</p> <p>Please use Android Studio 3.6.1 or newer to build the apk.</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#major-new-features_5","title":"Major new features","text":"<ul> <li>Resolves SMS CARBS command issue while using Combo pump</li> <li>Otherwise is equal to 2.6.1. If you are not affected by this bug you don't need to upgrade.</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#version-261","title":"Version 2.6.1","text":"<p>Release date: 21-03-2020</p> <p>Please use Android Studio 3.6.1 or newer to build the apk.</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#major-new-features_6","title":"Major new features","text":"<ul> <li>Allow to enter only <code>https://</code> in NSClient settings</li> <li>Fixed BGI displaying bug on watches</li> <li>Fixed small UI bugs</li> <li>Fixed Insight crashes</li> <li>Fixed future carbs with Combo pump</li> <li>Fixed LocalProfile -&gt; NS sync</li> <li>Insight alerts improvements</li> <li>Improved detection of boluses from pump history</li> <li>Fixed NSClient connection settings (wifi, charging)</li> <li>Fixed sending of calibrations to xDrip</li> </ul> <p>(Releasenotes-version-2-6-0)=</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#version-260","title":"Version 2.6.0","text":"<p>Release date: 29-02-2020</p> <p>Please use Android Studio 3.6.1 or newer to build the apk.</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#major-new-features_7","title":"Major new features","text":"<ul> <li> <p>Small design changes (startpage...)</p> </li> <li> <p>Careportal tab / menu removed - more details here</p> </li> <li> <p>New Local Profile plugin</p> </li> <li> <p>Local profile can hold more than 1 profile</p> </li> <li>Profiles can be cloned and edited</li> <li>Ability of upload profiles to NS</li> <li>Old profile switches can be cloned to new profile in LocalProfile (timeshift and percentage is applied)</li> <li> <p>Veritical NumberPicker for targets</p> </li> <li> <p>SimpleProfile is removed</p> </li> <li> <p>Extended bolus feature - closed loop will be disabled</p> </li> <li> <p>MDT plugin: Fixed bug with duplicated entries</p> </li> <li> <p>Units are not specified in profile but it's global setting</p> </li> <li> <p>Added new settings to startup wizard</p> </li> <li> <p>Different UI and internal improvements</p> </li> <li> <p>Wear complications</p> </li> <li> <p>New SMS commands BOLUS-MEAL, SMS, CARBS, TARGET, HELP</p> </li> <li> <p>Fixed language support</p> </li> <li> <p>Objectives: Allow to go back, Time fetching dialog</p> </li> <li> <p>Automation: allow sorting</p> </li> <li> <p>Automation: fixed bug when automation was running with disabled loop</p> </li> <li> <p>New status line for Combo</p> </li> <li> <p>GlucoseStatus improvement</p> </li> <li> <p>Fixed TempTarget NS sync</p> </li> <li> <p>New statistics activity</p> </li> <li> <p>Allow Extended bolus in open loop mode</p> </li> <li> <p>Android 10 alarm support</p> </li> <li> <p>Tons on new translations</p> </li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#version-251","title":"Version 2.5.1","text":"<p>Release date: 31-10-2019</p> <p>Please note the important notes and limitations listed for version 2.5.0. * Fixed a bug in the network state receiver that lead to crashes with many (not critical but would waste a lot of energy re-calculating things). * New versioning that will allow to do minor updates without triggering the update-notification.</p> <p>(Releasenotes-version-2-5-0)=</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#version-250","title":"Version 2.5.0","text":"<p>Release date: 26-10-2019</p> <p>(Releasenotes-important-notes-2-5-0)=</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#important-notes","title":"Important notes","text":"<ul> <li>Please use Android Studio Version 3.5.1 or newer to build the apk or update.</li> <li>If you are using xDrip identify receiver must be set.</li> <li>If you are using Dexcom G6 with the patched Dexcom app you will need the version from the 2.4 folder.</li> <li>Glimp is supported from version 4.15.57 and newer.</li> </ul> <p>(Releasenotes-is-this-update-for-me-currently-is-not-supported)=</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#is-this-update-for-me-currently-is-not-supported","title":"Is this update for me? Currently is NOT supported","text":"<ul> <li>Android 5 and lower</li> <li>Poctech</li> <li>600SeriesUploader</li> <li>Patched Dexcom from 2.3 directory</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#major-new-features_8","title":"Major new features","text":"<ul> <li>Internal change of targetSDK to 28 (Android 9), jetpack support</li> <li>RxJava2, Okhttp3, Retrofit support</li> <li>Old Medtronic pumps support (RileyLink need)</li> <li>New Automation plugin</li> <li>Allow to bolus only part from bolus wizard calculation</li> <li>Rendering insulin activity</li> <li>Adjusting IOB predictions by autosens result</li> <li>New support for patched Dexcom apks (2.4 folder)</li> <li>Signature verifier</li> <li>Allow to bypass objectives for OpenAPS users</li> <li>New objectives - exam, application handling   (If you started at least objective \"Starting on an open loop\" in previous versions exam is optional.)</li> <li>Fixed bug in Dana* drivers where false time difference was reported</li> <li>Fixed bug in SMS communicator</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#version-23","title":"Version 2.3","text":"<p>Release date: 25-04-2019</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#major-new-features_9","title":"Major new features","text":"<ul> <li>Important safety fix for Insight (really important if you use Insight!)</li> <li>Fix History-Browser</li> <li>Fix delta calculations</li> <li>Language updates</li> <li>Check for GIT and warn on gradle upgrade</li> <li>More automatic testing</li> <li>Fixing potential crash in AlarmSound Service (thanks @lee-b !)</li> <li>Fix broadcast of BG data (works independently of SMS permission now!)</li> <li>New Version-Checker</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#version-222","title":"Version 2.2.2","text":"<p>Release date: 07-04-2019</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#major-new-features_10","title":"Major new features","text":"<ul> <li>Autosens fix: deactivate TT raises/lowers target</li> <li>New translations</li> <li>Insight driver fixes</li> <li>SMS plugin fix</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#version-22","title":"Version 2.2","text":"<p>Release date: 29-03-2019</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#major-new-features_11","title":"Major new features","text":"<ul> <li>DST fix</li> <li>Wear Update</li> <li>SMS plugin update</li> <li>Go back in objectives.</li> <li>Stop loop if phone disk is full</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#version-21","title":"Version 2.1","text":"<p>Release date: 03-03-2019</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#major-new-features_12","title":"Major new features","text":"<ul> <li>Accu-Chek Insight support (by Tebbe Ubben and JamOrHam)</li> <li>Status lights on main screen (Nico Schmitz)</li> <li>Daylight saving time helper (Roumen Georgiev)</li> <li>Fix processing profile names comming from NS (Johannes Mockenhaupt)</li> <li>Fix UI blocking (Johannes Mockenhaupt)</li> <li>Support for updated G5 app (Tebbe Ubben and Milos Kozak)</li> <li>G6, Poctech, Tomato, Eversense BG source support (Tebbe Ubben and Milos Kozak)</li> <li>Fixed disabling SMB from preferences (Johannes Mockenhaupt)</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#misc","title":"Misc","text":"<ul> <li>If you are using non default <code>smbmaxminutes</code> value you have to setup this value again</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#version-20","title":"Version 2.0","text":"<p>Release date: 03-11-2018</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#major-new-features_13","title":"Major new features","text":"<ul> <li>oref1/SMB support (oref1 documentation) Be sure to read the documentation to know what to expect of SMB, how it will behave, what it can achieve and how to use it so it can operate smoothly.</li> <li>_Accu-Chek Combo pump support</li> <li>Setup wizard: guides you through the process of setting up AAPS</li> </ul> <p>(Releasenotes-settings-to-adjust-when-switching-from-ama-to-smb)=</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#settings-to-adjust-when-switching-from-ama-to-smb","title":"Settings to adjust when switching from AMA to SMB","text":"<ul> <li> <p>Objective 10 must be started for SMBs to be enabled (SMB tab generally shows what restrictions apply)</p> </li> <li> <p>maxIOB now includes _all_ IOB, not just added basal. That is, if given a bolus of 8 U for a meal and maxIOB is 7 U, no SMBs will be delivered until IOB drops below 7 U.</p> </li> <li> <p>min_5m_carbimpact default has changed from 3 to 8 going from AMA to SMB. If you are upgrading from AMA to SMB, you have to change it manually</p> </li> <li> <p>Note when building AAPS 2.0 apk: Configuration on demand is not supported by the current version of the Android Gradle plugin! If your build fails with an error regarding \"on demand configuration\" you can do the following:</p> </li> <li> <p>Open the Preferences window by clicking File &gt; Settings (on Mac, Android Studio &gt; Preferences).</p> </li> <li>In the left pane, click Build, Execution, Deployment &gt; Compiler.</li> <li>Uncheck the Configure on demand checkbox.</li> <li>Click Apply or OK.</li> </ul> <p>(Releasenotes-overview-tab)=</p>"},{"location":"Installing-AndroidAPS/Releasenotes/#overview-tab","title":"Overview tab","text":"<ul> <li>Top ribbon gives access to suspend/disable loop, view/adjust profile and to start/stop temporary targets (TTs). TTs use defaults set in preferences. The new Hypo TT option is a high temp TT to prevent the loop from too aggressively overcorrection rescue carbs.</li> <li>Treatment buttons: old treatment button still available, but hidden by default. Visibility of buttons can now be configured. New insulin button, new carbs button (including eCarbs/extended carbs)</li> <li>Colored prediction lines</li> <li>Option to show a notes field in insulin/carbs/calculator/prime+fill dialogs, which are uploaded to NS</li> <li>Updated prime/fill dialog allows priming and creating careportal entries for site change and cartridge change</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#watch","title":"Watch","text":"<ul> <li>Separate build variant dropped, included in regular full build now. To use bolus controls from watch, enable this setting on the phone</li> <li>Wizard now only asks for carbs (and percentage if enabled in watch settings). Which parameters are included in the calculation can be configured in the settings on the phone</li> <li>confirmations and info dialogs now work on wear 2.0 as well</li> <li>Added eCarbs menu entry</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#new-plugins","title":"New plugins","text":"<ul> <li>PocTech app as BG source</li> <li>Dexcom patched app as BG source</li> <li>oref1 sensitivity plugin</li> </ul>"},{"location":"Installing-AndroidAPS/Releasenotes/#misc_1","title":"Misc","text":"<ul> <li>App now uses drawer to show all plugins; plugins selected as visible in config builder are shown as tabs on top (favourites)</li> <li>Overhaul for config builder and objectives tabs, adding descriptions</li> <li>New app icon</li> <li>Lots of improvements and bugfixes</li> <li>Nightscout-independent alerts if pump is unreachable for a longer time (e.g. depleted pump battery) and missed BG readings (see Local alerts in settings)</li> <li>Option to keep screen on</li> <li>Option to show notification as Android notification</li> <li>Advanced filtering (allowing to always enable SMB and 6h after meals) supported with patched Dexcom app or xDrip with G5 native mode as BG source.</li> </ul>"},{"location":"Installing-AndroidAPS/Tidepool/","title":"Tidepool","text":"<p>Tidepool is a third party tool that collects data regarding BG, insulin and carbs and can be used to analyze and share this data with your clinical team. As of AAPS version 3.2 it can be used as an alternative to Nightscout for satisfying part of Objective 1. It can also be used in combination with Nightscout as an alternative reporting platform that integrates well with clinical settings. This may be the desired option for children using AAPS who want to have the remote monitoring and control capabilities of Nightscout, but want a reporting platform that their clinical team are more comfortable with.</p> <p>It is important to understand the tidepool is for reporting only. It is NOT a real-time follow app. If you need to have followers apart from the main AAPS phone you must setup Nightscout as well. </p> <p>Note: the Tidepool organization is also working on bringing the iOS Loop product to market with FDA approval. This effort has nothing to do with their data reporting platform or AAPS.</p>"},{"location":"Installing-AndroidAPS/Tidepool/#step-1-setup-a-tidepool-account","title":"Step 1 - Setup a tidepool account","text":"<p>-Navigate to tidepool.org</p> <p>-Select \u201cPersonal Sign Up\u201d or \u201cSign Up\u201d</p> <p>-Create and document an email and password</p> <p>-Select \u201cPersonal Account\u201d and click \u201cContinue\u201d</p> <p>-Complete the patient information section and accept the terms of use</p> <p>-Verify your email address via the instructions received to your email</p>"},{"location":"Installing-AndroidAPS/Tidepool/#step-2-enter-credentials-into-aaps","title":"Step 2 - Enter credentials into AAPS","text":"<p>-Select the three-line \u201chamburger\u201d menu in the top left and the select \u201cConfig Builder\u201d (if \u201cConfig Builder is not located there it will instead be one of the tabs along the top)</p> <p>-Scroll down to the \u201cSynchronization\u201d section and select the check mark to the left of \u201cTidepool\u201d </p> <p>-Click the gear icon to the right of \u201cTidepool\u201d</p> <p>-Enter the username and password you created in Step 1 above</p> <p>-Click \u201cTest Tidepool Login\u201d</p> <p>-If you get the \u201cSuccessfully logged into Tidepool\u201d message you have successfully connected. If not, confirm your credentials are correct and that you have verified your email address with Tidepool.</p> <p>-Click on \u201cConnection settings\u201d and set based on your personal preferences</p> <p>For more assistance on how to use your data once it is uploaded to Tidepool please visit: https://www.tidepool.org/viewing-your-data </p>"},{"location":"Installing-AndroidAPS/Transferring-and-installing-AAPS/","title":"Transferring and Installing AAPS on your smartphone","text":"<p>In the previous section, building AAPS, you built the AAPS app (which is an .apk file) on a computer. </p> <p>The next steps are to transfer the AAPS APK file (as well as other apps you may need, like BYODA, Xdrip+ or another CGM reciever app) to your Android smartphone, and then install the app(s). </p> <p>Following installation of AAPS on the smartphone, you will then be able to move onto configuring the AAPS loop.</p> <p>There are several ways to transfer the AAPS APK file from your computer to the smartphone. Here we explain two different ways: </p> <ul> <li>Option 1 -  Use your Google drive (Gdrive)</li> <li>Option 2 -  Use a USB cable</li> </ul> <p>Please note that transfer by email might cause difficulties, and is discouraged.</p>"},{"location":"Installing-AndroidAPS/Transferring-and-installing-AAPS/#option-1-use-google-drive-to-transfer-files","title":"Option 1. Use Google drive to transfer files","text":"<p>Open Google.com in your web browser and login to your Google Account.</p> <p>On the right upper side select the Drive app in the Google menu.</p> <p></p> <p>Right click in the free area below the files and folders in the Google Drive app and select \"Upload File\".</p> <p></p> <p>The apk file should now be uploaded on Google Drive.</p>"},{"location":"Installing-AndroidAPS/Transferring-and-installing-AAPS/#use-the-google-drive-app-to-excute-the-apk-file-for-installation","title":"use the Google Drive app to excute the apk file for installation","text":"<p>Switch to your mobile and start the Google Drive app. It is a preinstalled app and can be found where the other Google apps are located or with search for the name of the app.</p> <p></p> <p>Launch the apk installation by double click on the filename in the Google Drive App on the mobile.</p> <p></p> <p>In case you get a security notice that you are not allowed to install apps from Google Driver at the moment please allow it for that short moment and disallow it afterwards as it is a security risk when you let it enable all the time.</p> <p></p> <p></p> <p>After the installation finished your are done with this step.</p> <p>you should see the AAPS icon and be able to open the app.</p> <pre><code>**IMPORTANT SAFETY NOTICE**\nDid you remeber to disallow the installation from Google Drive?\n</code></pre>"},{"location":"Installing-AndroidAPS/Transferring-and-installing-AAPS/#please-go-on-with-configuring-the-aaps-loop","title":"Please go on with configuring the AAPS loop.","text":""},{"location":"Installing-AndroidAPS/Transferring-and-installing-AAPS/#option-2-use-a-usb-cable-to-transfer-files","title":"Option 2. Use a USB cable to transfer files","text":"<p>The second way to transfer the AAPS apk file is with a  USB cable.</p> <p>Transfer the file from its location on your computer to the \"downloads\" folder on the phone. </p> <p>On your phone, you will have to allow installation from unknown sources. Explanations of how to do this can be found on the internet (e.g. here or here).</p> <p>Once you have transferred the file by dragging it across, to install it, open the \"downloads\" folder on the phone, press the AAPS apk and select \"install\". You can then proceed to the next step, Setup Wizard, which will help you setup the AAPS app and loop on your smartphone.    </p>"},{"location":"Installing-AndroidAPS/Update-to-new-version/","title":"Update to a new version or branch","text":""},{"location":"Installing-AndroidAPS/Update-to-new-version/#build-yourself-instead-of-download","title":"Build yourself instead of download","text":"<p>AAPS is not available to download, due to regulations concerning medical devices. It is legal to build the app for your own use, but you must not give a copy to others! See FAQ page for details.</p>"},{"location":"Installing-AndroidAPS/Update-to-new-version/#important-notes","title":"Important notes","text":"<ul> <li>Please update to the new version of AAPS as soon as possible after a new release is available.</li> <li>When a new release is available, in the AAPS app itself, you will receive an information banner about the new version.</li> <li>The new version will also be announced on Facebook at the time of release.</li> <li>Following the release, please read the Release Notes in detail, and clarify any queries with the community on Facebook or Discord, before proceeding with the update.</li> <li>For AAPS versions 2.7 and newer, the location for the new files is at https://github.com/nightscout/AndroidAPS.</li> <li>You need to use the latest version of Android Studio, Hedgehog, 2023.1.1. </li> <li>If building the AAPS app using a Windows platform, you will need to use a Windows 64-bit system since 32-bit systems are not supported.</li> </ul>"},{"location":"Installing-AndroidAPS/Update-to-new-version/#overview-for-updating-to-a-new-version-of-aaps","title":"Overview for updating to a new version of AAPS","text":"<ol> <li>Export your settings from the existing AAPS version on your phone. You might not need it, but better be safe than sorry.</li> <li>Update local copy of the AAPS sourcecode (Git-&gt;Fetch and Git -&gt; Pull)</li> <li>Build signed APK</li> <li>Transfer the built apk to your phone and install it</li> <li>Check the version in AAPS</li> <li>Depending on your BG source make sure to identify receiver in xDrip or use the 'Build your own Dexcom App'.</li> </ol> <p>In case you experience problems, see separate page for troubleshooting Android Studio.</p>"},{"location":"Installing-AndroidAPS/Update-to-new-version/#1-export-your-settings","title":"1. Export your settings","text":"<p>See the Export &amp; import settings page if you don't remember how to do this.</p> <p>(Update-to-new-version-update-your-local-copy)=</p>"},{"location":"Installing-AndroidAPS/Update-to-new-version/#2-update-your-local-copy","title":"2. Update your local copy","text":"<p>As of version 2.7 repository location changed to https://github.com/nightscout/AndroidAPS. If you are not familiar with git the easiest way for update is remove directory with AAPS on your disk and follow the instructions to do a New clone.</p> <p>If you have already changed the URL or update from version 2.8.x, follow these steps:</p> <ul> <li>Open your existing AAPS project with Android Studio. You might need to select your project. (Double) click on the AAPS project.</li> </ul> <p></p> <ul> <li>In the menu bar of Android Studio, select Git -&gt; Fetch</li> </ul> <p></p> <ul> <li>You will see a message in the lower right corner that Fetch was successful.</li> </ul> <p></p> <ul> <li>In the menu bar, now select Git -&gt; Pull</li> </ul> <p> </p> <ul> <li>Leave all options as they are (origin/master) and select Pull</li> </ul> <p></p> <ul> <li>Wait while download is in progress, you will see this as info in the bottom bar. When it's done, you will see a success message. Note: The files that were updated may vary! This is not an indication</li> </ul> <p></p> <ul> <li>Gradle Sync will be running a couple of seconds to download some dependencies. Wait until it is finished.</li> </ul> <p></p> <p>(Update-to-new-version-build-the-signed-apk)=</p>"},{"location":"Installing-AndroidAPS/Update-to-new-version/#3-build-the-signed-apk","title":"3. Build the Signed APK","text":"<p>Your sourcecode is now the current released version. It's time to build the signed apk from it as described in the build signed apk section.</p>"},{"location":"Installing-AndroidAPS/Update-to-new-version/#4-transfer-the-apk","title":"4. Transfer the apk","text":"<p>You need to transfer the apk to your phone so you can install it.</p> <p>See the instructions for Transfer APK to smartphone</p>"},{"location":"Installing-AndroidAPS/Update-to-new-version/#5-install-apk","title":"5. Install apk","text":"<p>On your phone you have to allow installation from unknown sources. Manuals how to do this can be found on the internet (i.e. here or here).  Note: If you completed the build with the same existing key store in Android Studio, then you do not need to remove the existing app on your phone. When you install the apk, follow the prompts to install updates. For other scenarios such as establishing a new key store in Android Studio for your signed apk, you will need to delete the old app before installing the apk.</p> <p>(Update-to-new-version-check-aaps-version-on-phone)=</p>"},{"location":"Installing-AndroidAPS/Update-to-new-version/#6-check-aaps-version-on-phone","title":"6. Check AAPS version on phone","text":"<p>After you installed the new apk, you can check the AAPS version on your phone by clicking the three dots menu on the top right and then About. You should see the current version.</p> <p></p>"},{"location":"Installing-AndroidAPS/Update-to-new-version/#troubleshooting","title":"Troubleshooting","text":"<p>If anything goes wrong, don't panic.</p> <p>Take a breath!</p> <p>Then see the separate page troubleshooting Android Studio if your problem is already documented!</p>"},{"location":"Installing-AndroidAPS/building-AAPS/","title":"Building AAPS","text":""},{"location":"Installing-AndroidAPS/building-AAPS/#build-yourself-instead-of-download","title":"Build yourself instead of download","text":"<p>The AAPS app (an apk file) is not available for download, due to regulations around medical devices. It is legal to build the app for your own use, but you must not give a copy to others!</p> <p>See FAQ page for details.</p> <p>(Building-APK-recommended-specification-of-computer-for-building-apk-file)=</p>"},{"location":"Installing-AndroidAPS/building-AAPS/#computer-and-software-specifications-for-building-aaps","title":"Computer and software specifications for building AAPS","text":"<ul> <li>Please use the Android Studio version called \"Hedgehog\"(2023.1.1) to build the apk. If you use an older version, please use one which is no older than \"Giraffe\".</li> <li>Windows 32-bit systems are not supported by Android Studio. Please keep in mind that both 64 bit CPU and 64 bit OS are mandatory condition. If your system DOES NOT meet this condition, you have to change affected hardware or software or the whole system.  </li> </ul> OS (Only 64 bit) Windows 8 or higher Mac OS 10.14 or higher Any Linux supports Gnome, KDE, or Unity DE;\u00a0\u00a0GNU C Library 2.31 or later <p>CPU (Only 64 bit) x86_64 CPU architecture; 2nd generation Intel Core or newer, or AMD CPU with support for a Windows Hypervisor ARM-based chips, or 2nd generation Intel Core or newer with support for Hypervisor.Framework x86_64 CPU architecture; 2nd generation Intel Core or newer, or AMD processor with support for AMD Virtualization (AMD-V) and SSSE3 <p>RAM <p>8GB or more <p>Disk <p>At least 30GB free space. SSD is recommended. <p>Resolution <p>1280 x 800 Minimum  <p>Internet <p>Broadband <p>It is strongly recommended (not mandatory) to use SSD (Solid State Disk) instead of HDD (Hard Disk Drive) because it will take less time when you are building the AAPS apk file.  You can still use a HDD when you are building the AAPS apk file. If you do, the building process may take a long time to complete, but once it has started, you can leave it running unattended.</p>"},{"location":"Installing-AndroidAPS/building-AAPS/#help-and-support-during-the-building-process","title":"Help and support during the building process","text":"<p>If you run into difficulties in the process of building the AAPS app, there is a dedicated troubleshooting Android Studio section, please consult that first. </p> <p>If you think something in the building instructions is wrong, missing or confusing, or you are still struggling, please reach out to other AAPS users on Facebook or Discord. If you want to change something yourself (updating screenshots etc), please submit a pull request (PR). </p>"},{"location":"Installing-AndroidAPS/building-AAPS/#step-by-step-guide-to-building-the-aaps-app","title":"Step-by-step guide to building the AAPS app","text":"<p>The overall steps for building the AAPS apk file are as follows:</p> <p>4.1 Install Git</p> <p>4.2 Install Android Studio</p> <p>4.3 Download AAPS code</p> <p>4.4. Set Git path in Android Studio preferences</p> <p>4.5. Build AAPS \"signed\" apk </p> <p>In this guide you will find example screenshots of building of AAPS apk file. Because  Android Studio - the software which we use to build the AAPS apk - is regularly updated, these screenshots may not be identical to your installation, but they should still be possible to follow. </p> <p>Since Android Studio runs on Windows, Mac OS X and Linux platforms, there might be also be minor differences in the steps for the different  platforms.</p> <p>(Install-Git)=</p>"},{"location":"Installing-AndroidAPS/building-AAPS/#install-git-if-you-dont-have-it","title":"Install Git (if you don't have it)","text":"<p>:::{admonition} Why Git?  :class: dropdown</p> <p>Git is known as a \u201cVersioning Control System\u201d (VCS).\\ Git is a program that allows you to track changes in code and to collaborate with others. You will use Git to make a copy of the AAPS source code from the Github website to your local computer. Then, you will use Git on your computer to build the AAPS application (apk).  :::</p>"},{"location":"Installing-AndroidAPS/building-AAPS/#steps-for-installing-git","title":"Steps for Installing Git","text":"<ol> <li>Check that you don\u2019t already have Git installed. You can do this by typing \u201cgit\u201d in the Windows search bar \u2013 if you see \u201cGit bash\u201d or some other form of Git, it is already installed and you can go straight to installing Android Studio: </li> </ol> <ol> <li>If you don\u2019t have Git installed, download and install the latest version for your system from here. Any recent Git version should work, select the correct version according to your system, either Mac, Windows and Linux. </li> </ol> <p>Note for Mac users: the Git webpage will also guide you to install an additional program called \"homebrew\" to aid the installation. If you install Git via homebrew, there is no need to change any preferences.</p> <p>(Make_a_note_of_Git_path)=</p> <ul> <li> <p>During the installation, when you are asked to \"select destination location\" make a note of where Git is being installed (the \"installation path\") you will need to check it in the next step. It will be something similar to \"C:\\Program Files\\Git\\cmd\\git.exe\"</p> </li> <li> <p>As you proceed through several steps of the Git installation, just accept all the default options.</p> </li> <li> <p>After the install, if you forgot to make a note of the where Git was installed, you can find it as follows: type \"git\" into the PC search bar, right click on \"Git bash\", select \"open file location\" hover over the \"Git bash\" icon with your mouse, which will then reveal where it is installed. </p> </li> <li> <p>Reboot your computer before the next step.</p> </li> </ul> <p>(Building-APK-install-android-studio)=</p>"},{"location":"Installing-AndroidAPS/building-AAPS/#install-android-studio","title":"Install Android Studio","text":"<ul> <li>You have to be online all of the time during the following steps, as Android Studio downloads several updates</li> </ul> <p>:::{admonition} What is Android Studio? :class: dropdown Android Studio is a program which runs on your computer. It allows you to download source code from the internet (using Git) and build smartphone (and smartwatch) apps. You cannot \"break\" a current, looping version of AAPS which you might have running on a smartphone by building a new or updated app on your PC with Android Studio, these are totally separate processes.  :::</p> <p>The following screenshots have been taken from Android Studio Version Hedgehog. </p> <p>One of the most important things when installing Android Studio is be patient! During installation and setup, Android Studio is downloading a lot of stuff which will take time.</p> <p>Download the latest version of Android Studio from here, locate it in your browser downloads folder, and install it on your computer:</p> <p></p> <p>When you first start Android Studio, you will be greeted as follows:</p> <p></p> <p>select \"Next\":</p> <p></p> <p>Leave the boxes checked, and select \"Next\":</p> <p></p> <p>Allow the installation at the default location suggested, and select \"Next\":</p> <p></p> <p>When asked to choose the Smart Menu Folder, simply select \"Install\". You will now need to wait a few minutes while Android Studio is being installed. You should then see that the Installation is Complete, select \"Next\":</p> <p></p> <p>Now select \"Finish\":</p> <p></p> <p>Android Studio will now start. </p> <p>Decide whether you want to share data with Google or not (if unsure, just select \"Don't send\").</p> <p></p> <p>You will now get a message about a missing software development kit (SDK) (don't worry, this will be solved soon), select \"Next\": </p> <p></p> <p>The software should autoselect the required (SDK) and choose a location. </p> <p>:::{admonition} What is an Android SDK? :class: dropdown</p> <p>In order to run AAPS on the phone the application needs to integrate with Android itself. Android provides \u201csoftware development kits\u201d (SDK) which allow apps like AAPS to interface with an Android operating system. :::</p> <p>The SDK platform package does not relate to the version of Android running on your phone, but to the build of AAPS. AAPS version 3.2 (and newer) builds on top of API level 34, which is automatically selected in the Hedgehog version of Android Studio. Therefore, simply click \"Next\":</p> <p></p> <p>When asked to verify settings, just select \"Next\":</p> <p></p> <p>When asked about the Licence Agreement, select \"Accept\" and then click \"Finish\":</p> <p></p> <p>Note:  Depending on your set-up, the licenses to be accepted might vary from what is shown in the screenshot.</p> <p>Wait while Android Studio downloads additional components, this may take a few minutes: </p> <p></p> <p>Once everything is downloaded, the \"Finish\" button turns blue, and you can click it:</p> <p></p> <p>You are now greeted with the \"Welcome to Android Studio\" screen:</p> <p></p> <p>(Building-APK-download-AAPS-code)=</p>"},{"location":"Installing-AndroidAPS/building-AAPS/#download-the-aaps-code","title":"Download the AAPS code","text":"<p>:::{admonition} Why can it take a long time to download the AAPS code? :class: dropdown</p> <p>The first time AAPS is downloaded, Android Studio will connect over the internet to the Github website to download the source code for AAPS. This should take about 1 minute. </p> <p>Android Studio will then use Gradle (a development tool in  Android studio) to identify other components needed to install these items on your computer. </p> <p>:::</p> <p>On the Android Studio Welcome screen, check that \"Projects\" (1) is highlighted on the left. Then click \"Get from VCS\" (2) at the top right:</p> <p></p> <ul> <li> <p>We will now tell Android Studio where to get the code from:</p> </li> <li> <p>\"Repository URL\" should be selected (by default) on the left (1).</p> </li> <li>\"Git\" should be selected (by default) as version control (2).</li> </ul> <p>Now copy this URL:       <pre><code>https://github.com/nightscout/AndroidAPS.git\n</code></pre></p> <p>and paste it into the URL textbox (3).</p> <ul> <li> <p>Check the (default) directory for saving the cloned code is sensible (4).</p> </li> <li> <p>Now click the button \"Clone\" (5).</p> </li> </ul> <p></p> <p>You will now see a screen telling you that the repository is being cloned:</p> <p></p> <p>At some point, you may be asked whether you want to trust the project. Click on \"Trust project\":</p> <p></p> <ul> <li>If your firewall asks for permission, grant access:</li> </ul> <p></p> <p>If asked if you want to import settings, select \"Do not import settings\". We don't want to import settings from previous installations:</p> <p></p> <p>After the repository is cloned successfully, Android Studio will open the cloned project. Wait patiently (this may take a few minutes), and particularly, do not update the project as suggested in the pop-up:</p> <p></p> <p>:::{admonition} NEVER UPDATE GRADLE! :class: warning</p> <p>Android Studio might recommend updating the gradle system. Never update gradle! This will lead to difficulties. :::</p> <p>Optional - If you want to clear the pop-up for \"project update recommended\", click on the blue text \"More\" (1). In the dialog box the select \"Don't ask for this project\" (2).</p> <p></p> <p>If any errors occur, do not continue with the following steps, consult the troubleshooting section for known problems.</p> <p>Now close Android Studio (select File-Exit). </p> <p>If you have not restarted your computer since installing or updating Git, restart your computer now, and then re-open Android Studio. </p> <p>(Building-APK-set-git-path-in-preferences)=</p>"},{"location":"Installing-AndroidAPS/building-AAPS/#set-git-path-in-android-studio-preferences","title":"Set git path in Android Studio preferences","text":"<p>Now we will tell Android studio where to find Git, which you installed earlier. * Make sure you have restarted your computer after installing Git. * Open Android Studio (you can find it by searching in the Start menu).  * In the top left corner of Android Studio, navigate to File-Settings (Windows) or Android Studio &gt; Preferences (Mac). This opens the following window, click to expand the dropdown called \"version control\" (1):</p> <p></p> <ul> <li>Now select \"Git\" (2). </li> <li>In the lower middle of the page, make sure update method \"Merge\" (3) is selected.</li> <li>Check if Android Studio can automatically locate the correct path to git.exe automatically by clicking the button \"Test\" (4):</li> </ul> <p></p> <ul> <li>If the automatic setting is successful, your current version of Git will be displayed next to the path.</li> </ul> <p></p> <ul> <li>If you find that git.exe is not found automatically, or that clicking \"Test\" results in an error (1), you can either manually enter the path which you saved earlier, or click on the folder icon (2) and manually navigating to the directory where git.exe is stored:</li> </ul> <p></p> <ul> <li> <p>Use the search function in windows explorer to find \"git.exe\" if you are unsure where git has been installed. How to do this is explained above in more detail.</p> </li> <li> <p>If you have manually selected it, check your selected Git path with the \"Test\" button as described above.</p> </li> </ul> <p>When the Git version is displayed next to the path (see screenshot above) you have completed this stage successfully and you can close the Android Studio \"Settings\" window by clicking the \"OK\" button (5):</p> <p></p> <p>(Building-APK-generate-signed-apk)=</p>"},{"location":"Installing-AndroidAPS/building-AAPS/#build-the-aaps-signed-apk","title":"Build the AAPS \"signed\" APK","text":"<p>:::{admonition} Why does the AAPS app need to be \"signed\"? :class: dropdown</p> <p>Android requires each app to be signed, to ensure that it can only be updated later from the same trusted source that released the original app. For more information on this topic, follow this link. For our purposes, this just means that we generate a signing or \"keystore\" file and use it when we build the AAPS app. :::</p> <ul> <li>In the menu bar, click \"Build\" (1), select \"Generate Signed Bundle/APK (2)</li> </ul> <p></p> <ul> <li>Select \"APK\" instead of \"Android App Bundle\" and click \"Next\":</li> </ul> <p></p> <ul> <li>In the next screen, make sure that \"Module\" is set to \"AAPS.app\" (1).</li> <li>Click \"Create new...\" (2) to start creating your key store.</li> </ul> <p>Note: The key store is a file in which the information for signing the app is stored. It is encrypted, and the information is secured with passwords.</p> <p></p> <ul> <li>Click the \"folder\" symbol (1) to select a path on your computer for your key store:</li> </ul> <p></p> <ul> <li>Click on the drop-down menu (1), to select where you want to save your keystore file. In this example, it is being saved in \"My Documents\" (2). Do not save the keystore in same folder as your Android Studio files (StudioProject). Type in a simple name for your key store (3) and confirm it with \"OK\" (4):</li> </ul> <p></p> <p>This will take you back to the previous screen. Your chosen location for saving the key store file is shown. </p> <p>Now choose a simple password (make a note of it), enter it in the password box (1), and confirm it (2).  The passwords for key store and key do not have to be sophisticated. If you lose your password in the future, see troubleshooting for lost key store.</p> <p>The default alias (3) for your key is \"key0\", leave this unchanged.</p> <p>You now need a password for your key. To keep it simple, if you want, you can use the same password you used for your keystore, above. Enter a password (4) and confirm (5) it.</p> <p>The validity (6) is 25 years by default, leave it as it is.</p> <p>Enter your first and last name (7). No other information needs to be added.</p> <p>Click \"OK\" (8) to continue:</p> <p></p> <p>On the \"Generate signed bundle or APK\" page, the path to your keystore will now be displayed. Now re-enter the Key Store password (1) and Key password (2), and tick the box to remember passwords is checked (3), so you don't have to enter them again next time you build the apk (i.e. when updating to a new AAPS version). Click \"Next\" (4):</p> <p></p> <p>On the next screen, select build variant \"fullRelease\" (1) and click \"Create\" (2).</p> <p></p> <p>Android Studio will now build the AAPS apk. It will show \"Gradle Build running\" at the bottom right. The process takes some time, depending on your computer and internet connection, be patient! If you want to watch the progress of the build, click on the small hammer \"build\" at the bottom of Android Studio:</p> <p></p> <p>Now you can watch the building progress:</p> <p></p> <p>Android Studio will display the information \"BUILD SUCCESSFUL\" after build is finished. You may see a popup notification which you can click to select \"locate\". If you miss this, click on the notification \"locate or analyse the APK\" (yellow highlight) at the very bottom of the screen to bring up the Notifications:</p> <p></p> <p>If the build was not successful, refer to the troubleshooting section.</p> <p>In the Notifications box, click on the blue link \"locate\":</p> <p>    Your file manager/explorer will open. Navigate to the directory \"full\" (1) &gt; \"release\" (2).</p> <p></p> <p>Open the folder \"release\". The file \"app-full-release.apk\" (1) is the AAPS apk that you have just built, you will be transferring this file to your smartphone in the next section of the docs: </p> <p>Optional at this stage - if you are planning to also build the \"AAPS wear\" app for your smartwatch so you can remotely control AAPS, delete the \"output-metadata\" .json file (2) from this folder, to avoid the error of uncommitted changes during the AAPS wear app build:</p> <p></p> <p>Congratulations! Now you have built the AAPS apk file, you can move to the next stage of Transferring and Installing AAPS.</p>"},{"location":"Installing-AndroidAPS/change-configuration/","title":"Making changes to your AAPS configuration","text":"<p>After you have completed the Setup Wizard you don't need to run the entire Wizard again if you want to only change parts of the configuration.</p> <p>There are three routes to change the different configuration settings, which route you take is simply a matter of convenience, each route leads to the same configuration settings. </p> <p>These are as follows: </p> <ol> <li>Config builder,</li> <li>Three dot menu on the right and select \"preferences\" or</li> <li>Three dot menu on the right and select \"plugin preferences\".</li> </ol> <p>Here we explain which option is most convenient for each situation:</p>"},{"location":"Installing-AndroidAPS/change-configuration/#config-builder","title":"Config builder","text":"<p>The config builder is used if you want to enable plugins and their visibility in the top level menu. If they are enabled, they will still run, you can decide if you want to be able to see them in the top menu or not. </p> <p>Plugins which you have not enabled (i.e. disabled) plugins can not be made visible. For example, when you first start with AAPS on objective 1, you cannot yet use automations, so the automations plugin cannot be enabled and made visible in the top menu. </p> <p>Config builder is the easiest way to further modify your configuration after you have used the Setup Wizard.</p> <p>The documentation relating to the config builder is available here.</p>"},{"location":"Installing-AndroidAPS/change-configuration/#preferences","title":"Preferences","text":"<p>The preferences dialogue can be reached via the top right three dot menu on the home screen of AAPS. It gives you the possibilty to change the configuration of all enabled plugins at once.</p> <p>This is a good route if you are not really sure where to look for an configuration option, but it can be a bit tedious if you know you want to change the configuration for just one specific plugin.</p> <p>The documentation of the preferences is available here.</p>"},{"location":"Installing-AndroidAPS/change-configuration/#plugin-preferences","title":"Plugin preferences","text":"<p>The plugin preferences dialogue can be reached via the top right three dot menu on the home screen of AAPS. It provides the possibilty to change the configuration of all enabled plugins at once.</p> <p>This is a good route if you know that e.g. you just want to change the configuration for BYODA. Then, you would select the tab \"BYODA\" on the top menu of AAPS, and then once you are on the BYODA page, in the top right, select the three dot menu and then the \"plugin preferences\" entry. You are taken directly to the preferences dialogue specifically for the BYODA plugin.</p> <p>This is a \"short cut\" to the general preferences dialogue, the documentation of the preferences is available here.</p>"},{"location":"Installing-AndroidAPS/git-install/","title":"Install git","text":""},{"location":"Installing-AndroidAPS/git-install/#windows","title":"Windows","text":""},{"location":"Installing-AndroidAPS/git-install/#1-download-git","title":"1. Download git","text":"<ul> <li>You have to be online all of the time as Android Studio downloads several updates!</li> <li>Any git version should work. For example https://git-scm.com/download/win.</li> <li>Make sure to note down the installation path. You will need it in the next step.</li> </ul> <p>```{admonition} make git.exe available via Windows PATH :class: note</p> <p>Make sure that you can call git.exe without the prefing path as Android Studio needs this to find git.exe. It will then automatically sets the path to git.exe correct in the Android Studio settings.</p> <pre><code>```{image} ../images/Update_GitPath.png\n:alt: Git installation path\n</code></pre>"},{"location":"Installing-AndroidAPS/git-install/#2-set-git-path-in-android-studio","title":"2. Set git path in Android Studio","text":"<ul> <li>Open File &gt; Settings</li> </ul> <p><code>{image} ../images/Update_GitSettings1.png   :alt: Android Studio - open settings</code></p> <ul> <li> <p>Click the small triangle next to Version Control (1.) to open the sub-menu.</p> </li> <li> <p>Click Git (2.).</p> </li> <li> <p>Make sure update method \"Merge\" (3.) is selected.</p> </li> <li> <p>Check if Android Studio can locate path to git.exe automatically by clicking the button \"Test\" (4.)</p> </li> </ul> <p><code>{image} ../images/AndroidStudio361_09.png   :alt: Android Studio settings</code></p> <ul> <li> <p>If automatic setting is successful git version will be displayed.</p> </li> <li> <p>Click \"OK\" in the dialog box (1.) and \"OK\" in the settings window (2.).</p> </li> </ul> <p><code>{image} ../images/AndroidStudio361_10.png   :alt: Automatic git installation succeeded</code></p> <ul> <li> <p>In case file git.exe cannot be found click \"OK\" in the dialog box (1.) and then the button with the three dots (2.).</p> </li> <li> <p>Use search function in windows explorer to find \"git.exe\" if you are unsure where it can be found. You are looking for git.exe located in binfolder.</p> </li> <li> <p>Select path to git.exe and make sure you selected the one in \\bin\\ folder (3.) and click \"OK\" (4.).</p> </li> <li> <p>Close settings window by clicking \"OK\" button (5.).</p> </li> </ul> <p><code>{image} ../images/AndroidStudio361_11.png   :alt: Automatic git installation failed</code></p>"},{"location":"Installing-AndroidAPS/git-install/#3-reboot","title":"3. Reboot","text":"<ul> <li>Reboot your PC to update System Environment.</li> </ul> <p>(git-install-check-git-settings-in-android-studio)=</p>"},{"location":"Installing-AndroidAPS/git-install/#4-check-git-settings-in-android-studio","title":"4. Check git settings in Android Studio","text":"<ul> <li> <p>Open Terminal window in Android Studio</p> </li> <li> <p>Enter <code>git --version</code> (without quotation marks and no spaces between the two - [minus sign]!) and press Return</p> </li> </ul> <p><code>{image} ../images/AndroidStudio_gitversion1.png   :alt: git - -version</code></p> <ul> <li>If git is installed and connected properly you will receive an information about the installed version that looks as follows:</li> </ul> <p><code>{image} ../images/AndroidStudio_gitversion2.png   :alt: result git-version</code></p>"},{"location":"Installing-AndroidAPS/git-install/#mac","title":"Mac","text":"<ul> <li>Any git version should work. For example https://git-scm.com/download/mac</li> <li>Use homebrew to install git: <code>`$ brew install git`</code>.</li> <li>For details on installing git see the official git documentation.</li> <li>If you install git via homebrew there is no need to change any preferences. Just in case: They can be found here: Android Studio - Preferences.</li> </ul>"},{"location":"Installing-AndroidAPS/setting-up-the-reporting-server/","title":"Setting up the Reporting Server","text":"<p>There are currently two reporting servers available for use with AAPS:</p> <ul> <li>Nightscout</li> <li>Tidepool</li> </ul> <p></p> <p>We recommend using Nightscout.</p>"},{"location":"Installing-AndroidAPS/setting-up-the-reporting-server/#nightscout","title":"Nightscout","text":"<p>Nightscout is a powerful platform which has been integrated into AAPS for many years. It enables users and caregivers to track the patient's diabetes data in near real-time (only a few minutes may pass between data reception and data provision if there is a sufficient Internet connection between all components involved). It also allows caregivers to send remote commands to AAPS.</p> <p>Nightscout is provided as open-source software. Anyone can create and operate a Nightscout server, using either free or paid-for services. </p>"},{"location":"Installing-AndroidAPS/setting-up-the-reporting-server/#option-1-setup-your-nightscout-server-yourself","title":"Option 1 - Setup your Nightscout server yourself","text":"<p>Creating your Nightscout reporting server can require one or more web-based applications that will require maintenance. In order to have a completely free service, you may need to migrate your Nightscout site and data, if and when providers remove the free tier.</p> <p>A description of how you can set up Nightscout with the advantages and disadvantages of the various operating options, including an estimate of the costs, can be found here.</p>"},{"location":"Installing-AndroidAPS/setting-up-the-reporting-server/#option-2-pay-for-a-hosted-nightscout-service","title":"Option 2 - Pay for a hosted Nightscout service","text":"<p>There are also options from different service providers who host Nightscout for you, with a monthly fee. The costs are manageable, and the advantage of a hosted option is that you do not need to be IT-literate, or have any operating infrastructure. </p> <p>Existing Nightscout users can reconsider where and how their Nightscout server is hosted from time to time, and change to a different option if it becomes more suitable.</p> <p>Some Nightscout hosted services are listed here.</p>"},{"location":"Installing-AndroidAPS/setting-up-the-reporting-server/#tidepool","title":"Tidepool","text":"<p>Tidepool has only been available in AAPS since version 3.2 which was released in late 2023.</p> <p>:::{admonition} Tidepool with AAPS is only for reporting :class: danger As there is a delay of three hours between data income and data reporting when using AAPS, Tidepool it is not suitable for sharing real-time information with caregivers. On the other hand, Tidepool can be a great solution for sharing reports with a patient's endocrinologist if Nightscout is not an accepted solution. :::</p> <p>Tidepool is an open source project. It offers to run an account free of charge on the Tidepool servers.</p> <p>You can create a Tidepool account here.</p> <p>:::{admonition} AAPS has a the uploader for Tidepool integrated :class: note You do not need to use the uploader app to Tidepool: AAPS will upload blood glucose, treatments and basal for you. You only need a personal account with Tidepool. Do not upload your data with the separate Tidepool uploader tool as it will lead to duplicate values. :::</p> <p>Once you have set up your reporting server, you can now either set up a dedicated Google account for AAPS use, or go straight to building the AAPS app. </p>"},{"location":"Installing-AndroidAPS/setup-wizard/","title":"AAPS Setup Wizard","text":"<p>When you first start AAPS you are guided by the \"Setup Wizard\", to quickly setup all the basic configurations of your app in one go. Setup Wizard guides you, in order to avoid forgetting something crucial. For example, the permission settings are fundamental for setting up AAPS correctly.</p> <p>However, it's not mandatory to get everything completely configured in the first run of using the Setup Wizard and you can easily exit the Wizard and come back to it later. There are three routes available after the Setup Wizard to further optimise/change the configuration. These will be explained in the next section. So, it's okay if you skip some points in the Setup Wizard, you can easily configure them later.</p> <p>During, and directly after using the Setup Wizard you may not notice any significant observable changes in AAPS. To enable your AAPS loop, you have to follow the Objectives to enable feature after feature. You will start Objective 1 at the end of the Setup Wizard. You are the master of AAPS, not the other way around.</p> <p>:::{admonition} Preview Objectives :class: note If you are keen to know the structure of the objectives, please read Completing the objectives but then come back here to run the Setup Wizard first.</p> <p>:::</p> <p>From previous experience, we are aware that new starters often put themselves under pressure to setup AAPS as fast as possible, which can lead to frustration as it is a big learning curve. </p> <p>So, please take your time in configuring your loop, the benefits of a well-running AAPS loop are huge.</p> <p>:::{admonition} Ask for Help :class: note If there is an error in the documentation or you have a better idea for how something can be explained, you can ask for help from the community as explained at Connect with other users. :::</p>"},{"location":"Installing-AndroidAPS/setup-wizard/#step-wise-guide-to-the-aaps-setup-wizard","title":"Step-wise guide to the AAPS Setup Wizard","text":""},{"location":"Installing-AndroidAPS/setup-wizard/#welcome-message","title":"Welcome message","text":"<p>This is just the welcome message which you can skip with the \"NEXT\" button:</p> <p></p>"},{"location":"Installing-AndroidAPS/setup-wizard/#license-agreement","title":"License agreement","text":"<p>In the end user license agreement there is important information about the legal aspects of using AAPS. Please read it carefully.</p> <p>If you don't understand, or can't agree to the end user license agreement please don't use AAPS at all!</p> <p>If you understand and agree, please click the \"I UNDERSTAND AND AGREE\" button and follow the Setup Wizard:</p> <p></p>"},{"location":"Installing-AndroidAPS/setup-wizard/#required-permissions","title":"Required permissions","text":"<p>AAPS needs some requirements to operate correctly.</p> <p>In the following screens you are asked several questions you have to agree to, to get AAPS working. The Wizard itself explains why it asks for the relevant setting.</p> <p>In this screen, we aim to give some more background information, translate more technical speak into common language or explain the reason.</p> <p>Please click the \"NEXT\" button:</p> <p></p> <p>Battery consumption on smartphones is still a consideration, as the performance of the batteries is still quite limited. Therefore, the Android operating system on your smartphone is quite restrictive about allowing applications to run and consume CPU time, and therefore battery power.</p> <p>However, AAPS needs to run regularly, e.g. to receive the glucose readings every few minutes and then apply the algorithm to decide how to deal with your glucose levels, based on your specifications. Therefore it must be allowed to do so by Android.</p> <p>You do this by confirming the setting.</p> <p>Please click the \"ASK FOR PERMISSION\" button:</p> <p></p> <p>Please select \"Allow\":</p> <p></p> <p>Android requires special permission for apps if they want to send you notifications.</p> <p>While it is a good feature to disable notifications e.g. from  social media apps, it is essential that you allow AAPS to send you notifications.</p> <p>Please click the \"ASK FOR PERMISSION\" button:</p> <p></p> <p>Select the \"AAPS\" app:</p> <p></p> <p>Enable \"Allow display over other apps\" by sliding the slider to the right:</p> <p></p> <p>The slider should look this way if it is enabled:</p> <p></p> <p>Android links the use of bluetooth communication to the ability to use location services. Perhaps you have seen it with other apps too. It's common to need location permission if you want to access bluetooth.</p> <p>AAPS uses bluetooth to communicate with your CGM and insulin pump if they are directly controlled by AAPS and not another app which is used by AAPS. Details may differ from setup to setup.</p> <p>Click the \"ASK FOR PERMISSION\" button:</p> <p></p> <p>This is important. Otherwise AAPS can not work properly at all.</p> <p>Click \"While using the app\":</p> <p></p> <p>Click the \"NEXT\" button:</p> <p></p> <p>AAPS needs to log information to the permanent storage of your smartphone. Permanent storage means that it will be available even after rebooting your smartphone. Other information is just lost, as it is not saved to permanent storage.</p> <p>Click the \"ASK FOR PERMISSION\" button:</p> <p></p> <p>Click \"Allow\":</p> <p></p> <p>You are being informed that you have to reboot your smartphone after this change to take effect.</p> <p>Please don't stop the Setup Wizard now. You can do it after finishing the Setup Wizard.</p> <p>Click \"OK\" and then the \"NEXT\" button:</p> <p></p>"},{"location":"Installing-AndroidAPS/setup-wizard/#master-password","title":"Master password","text":"<p>As the configuration of AAPS contains some sensitive data (e.g. API_KEY for accessing your Nightscout server) it is encrypted by a password you can set here.</p> <p>The second sentence is very important, please DO NOT LOSE YOUR MASTER PASSWORD. Please make a note of it e.g. on Google Drive. Google Drive is a good place as it is backed up by Google for you. Your smartphone or PC can crash and you may have no actual copy. If you forget your Master Password, it can be difficult to recover your profile configuration and progress through the Objectives at a later date.</p> <p>After filling in the password twice, please click the \"NEXT\" button:</p> <p></p>"},{"location":"Installing-AndroidAPS/setup-wizard/#fabric-upload","title":"Fabric upload","text":"<p>Here you can setup the usage of an automated crash and usage reporting service.</p> <p>It's not mandatory, but it is good practice to use it.</p> <p>It helps the developers to better understand your usage of the app, and informs them about crashes which happen.</p> <p>They get:</p> <ol> <li>The information that the app crashed, which they would not otherwise know since in their own set-up everything works fine and</li> <li>In the send data (crash information), there is information about the circumstances under which the crash happened, and what kind of configuration is being used.</li> </ol> <p>So it helps the developers to improve the app.</p> <p>Please enable the \"Fabric Upload\" by sliding the slider to the right:</p> <p></p> <p>Furthermore you can identify yourself that just in case the developers want to reach out to you for questions or urgent concerns:</p> <p></p> <p>After filling in your \"contact information\" click the \"OK\" button. Contact information can be your identification on Facebook, on Discord, ... Just the information you think is helpful to contact you through the best route:</p> <p></p> <p>Click the \"NEXT\" button:</p> <p></p>"},{"location":"Installing-AndroidAPS/setup-wizard/#units-mgdl-mmoldl","title":"Units (mg/dl &lt;-&gt; mmol/dL)","text":"<p>Please select if your glucose values are in mg/dl or mmol/L and then please click the \"NEXT\" button:</p> <p></p>"},{"location":"Installing-AndroidAPS/setup-wizard/#display-settings","title":"Display settings","text":"<p>Here you select the range for the sensor glucose display, which will be shown as \"in range\" between the values you set. You can leave it as the default values for now, and edit it later.</p> <p>The values you choose only affect the graphical presentation of the diagram, and nothing else.</p> <p>Your glucose target e.g. is configured separately in your profile.</p> <p>Your range to analyze TIR (time in range) is configured separately in your reporting server.</p> <p>Please press the \"NEXT\" button:</p> <p></p>"},{"location":"Installing-AndroidAPS/setup-wizard/#synchronization-with-the-reporting-server-and-more","title":"Synchronization with the reporting server and more","text":"<p>Here you are configuring the data upload to your reporting server.</p> <p>You could do other configurations here too, but for the first run we will just focus on the reporting server.</p> <p>If you are not able to set it up at the moment, skip it for now. You can configure it later.</p> <p>If you select an item here on the left tick box, on the right you can then ticking the visibility (eye) box, which will place this plugin in the upper menu on the AAPS home screen. Please select the visibility too if you configure your reporting server at this point.</p> <p>In this example we select Nightscout as reporting server, and will configure it.</p> <p>:::{admonition}  Make sure to choose the correct NSClient version for your needs!  :class: Note Click here for the release notes of AAPS 3.2.0.2 which explain the differences between the top option NSClient (this is \"v1\", although it is not explicitly labelled) and the second option, NSClient v3. </p> <p>Nightscout users should choose NSClient v3, unless you want to monitor or send remote treatments (e.g. as a parent or caregiver using AAPS for a child) through Nightscout, in which case, choose the first option \"NSClient\" until further notice.  :::</p> <p>For Tidepool it is even simpler, as you only need your personal login information.</p> <p>After making your selection, please press the \"NEXT\" button:</p> <p></p> <p>Here you are configuring the Nightscout reporting server.</p> <p>Please click on \"Nightscout URL\":</p> <p></p> <p>Enter you Nightscout URL which is your personal Nightscout server. It's just an URL you setup yourself, or you were given from your service provider for Nightscout.</p> <p>Please click the \"OK\" button:</p> <p></p> <p>Enter your nightscout access token. This is the access token for your Nightscout server you configured. Without this token, access will not work.</p> <p>If you don't have it at the moment please check the documentation for setting up the reporting server in the AAPS documentation.</p> <p>After filling in the \"NS access token\" and clicking \"OK\", please click on the \"Synchronization\" button:</p> <p></p> <p>Please select \"Upload data to NS\" if you already configured nightscout in the previous steps of the Setup Wizard.</p> <p>If you have stored profiles on Nightscout and want to download them to AAPS, enable \"Receive profile store\":</p> <p></p> <p>Go back to the previous screen and select \"Alarm option\":</p> <p></p> <p>For now, leave the switches disabled. We only walked to the screen to make you familar with possible options you might configure in the future. At the moment there is no need to do it.</p> <p>Go back to the previous screen before and select \"Connection settings\". </p> <p>Here you can configure how to transfer your data to the reporting server.</p> <p>Caregivers must enable \"use cellular connection\" as otherwise the smartphone which serves the dependant/child can not upload data outside of WiFi range e.g. on the way to school.</p> <p>Other AAPS users can disable the tranfer via cellular connection if they want to save data or battery.</p> <p>If in doubt, just leave all enabled.</p> <p>Go back to the screen before and select \"Advanced Settings\".</p> <p></p> <p>Enable \"Log app start to NS\" if you want get this information in the reporting server. It can help you to know remotely if and when the app has been restarted, particularly as a caregiver. </p> <p>It might be interesting to see if AAPS is correctly configured now, but later it is usually not that important to be able to see AAPS stopping or starting in Nightscout.</p> <p>Enable \"Create announcements from errors\" and \"Create announcements from carbs required alerts\".</p> <p>Leave \"Slow down uploads\" disabled. You would only use it in unusual circumstances if for example a lot of information is to be transfered to the Nightscout server, and the Nightscout server is being slow in processing this data.</p> <p>Go back to the screen before and select \"NEXT\" to go to the next screen:</p> <p></p>"},{"location":"Installing-AndroidAPS/setup-wizard/#patient-name","title":"Patient name","text":"<p>Here you can setup your name in AAPS.</p> <p>It can be anything. It's just for differentiating users.</p> <p>To keep it simple just enter first name and last name.</p> <p>Press \"NEXT\" to go to the next screen.</p> <p></p>"},{"location":"Installing-AndroidAPS/setup-wizard/#patient-type","title":"Patient type","text":"<p>Here you select your \"Patient type\" which is important, as the AAPS software has different limits, depending on the age of the patient. This is important for security and safety reasons.</p> <p>Here is where you also configure the maximum allowed bolus for a meal. That is, the largest bolus you need to give to cover your typical meals. It's a security feature to help avoid accidentally overdosing when you are bolusing for meal.</p> <p>The second limit is similar in concept, but relates to the max carbohydrate intake you expect.</p> <p>After setting these values, press \"NEXT\" to go to the next screen:</p> <p></p>"},{"location":"Installing-AndroidAPS/setup-wizard/#used-insulin","title":"Used insulin","text":"<p>Select the type of insulin being used in the pump.</p> <p>The insulin names should be self-explanatory.</p> <p>:::{admonition} Don't use the \"Free-Peak Oref\" unless you know what you are doing :class: danger For advanced users or medical studies there is the possibility to define with \"Free-Peak Oref\" a customised profile of how insulin acts. Please don't use it unless you are an expert, usually the pre-defined values work well for each branded insulin. :::</p> <p>Press \"NEXT\" to go to the next screen:</p> <p></p>"},{"location":"Installing-AndroidAPS/setup-wizard/#blood-sugar-source","title":"Blood sugar source","text":"<p>Select the BG source you are using. Please read the documentation for your BG source.</p> <p>As there are several options available, we don't explain the configuration for all of them here. We are using Dexcom G6 with the BYODA app in our example here:</p> <p></p> <p>If you are using Dexcom G6 with BYODA, enable the visibility in the top level menu by clicking the tickbox on the right side.</p> <p>After making your selection, press \"NEXT\" to go to the next screen:</p> <p></p> <p>If you are using Dexcom G6 with BYODA, click on the \"cog/gearwheel\" to access the settings for BYODA.</p> <p>Enable the \"Upload BG data to NS\" and \"Log sensor change to NS\".</p> <p>Press \"NEXT\" to go to the next screen:</p> <p></p>"},{"location":"Installing-AndroidAPS/setup-wizard/#profile","title":"Profile","text":"<p>Now we are entering a very important part of the Setup Wizard.</p> <p>Please read the documentation about profiles before you try to enter your profile details on the following screen.</p> <p>:::{admonition} Working profile required - no exceptions here ! :class: danger An accurate profile is necessary to control the safe action of AAPS</p> <p>It's required that you have determined and discussed your profile with your doctor, and that it has been proven to work by successful basal rate, ISF and IC testing!</p> <p>If a robot has an incorrect input it will fail - consistently. AAPS can only work with the information it is given. If your profile is too strong, you risk hypoglycemia, and if it is too weak, you risk hyperglycemia.  :::</p> <p>Press \"NEXT\" to go to the next screen. Enter a \"profile name\":</p> <p></p> <p>You can have several profiles in the long-term if needed. We only create one here.</p> <p>:::{admonition} Profile only for tutorial - not for your usage :class: information The example profile here is only to show you how to enter data.</p> <p>It is not intended to be an accurate profile or something very well optimised, because each person's needs are so different.</p> <p>Don't use it for actually looping! :::</p> <p>Enter your Duration of insulin Action (DIA) in hours. Then press \"IC\":</p> <p></p> <p>Enter your IC values:</p> <p></p> <p>Press \"ISF\". Enter your ISF values:</p> <p></p> <p>Press \"BAS\". Enter your basal values:</p> <p></p> <p>Press \"TARG\". Enter your blood sugar target values.</p> <p>For open looping this target can be a wider range, as otherwise AAPS notifies you permanently to change the temporary basal rate or another setting, which can be exhausting.</p> <p>Later, for closed looping, you will generally have only one value for top and bottom. That makes it easier for AAPS to hit the target and give you better overall diabetes control.</p> <p>Enter/confirm the target values: </p> <p></p> <p>Save the profile by clicking on \"SAVE\":</p> <p></p> <p>After saving a new buttom \"Activate Profile\" occurs.</p> <p>:::{admonition} Several defined but only one active profile :class: information You can have several profiles defined, but only one activated profile running at any given time. :::</p> <p>Press \"Activate Profile\":</p> <p></p> <p>The profile switch dialogue appears. In this case let it stay as preset.</p> <p>:::{admonition} Several defined but only one active profile :class: information You will learn later how to use this general dialog to handle situations like illness or sport, where you need to change your profile suitable for the circumstances. :::</p> <p>Press \"OK\":</p> <p></p> <p>A confirmation dialog for the profile switch appears.</p> <p>You can confirm it with pressing \"OK\". Press \"NEXT\" to go to the next screen:</p> <p></p> <p>Your profile has now been set:</p> <p></p>"},{"location":"Installing-AndroidAPS/setup-wizard/#insulin-pump","title":"Insulin pump","text":"<p>Now you are selecting your insulin pump.</p> <p>You get an important warning dialog. Please read it, and press \"OK\".</p> <p>If your have already setup your profile in the steps before and you know how to connect your pump, feel free to connect it now. </p> <p>Otherwise, leave the Setup Wizard, using the arrow in the top left corner and let AAPS first show you some blood glucose values. You can come back anytime or use one of the direct configuration options (not using the Wizard).</p> <p>Please read the documentation for your insulin pump.</p> <p>Press \"NEXT\" to go to the next screen.</p> <p></p> <p>In this case we select \"Virtual Pump\".</p> <p>Press \"NEXT\" to go to the next screen:</p> <p></p>"},{"location":"Installing-AndroidAPS/setup-wizard/#aps-algorithm","title":"APS algorithm","text":"<p>Use the OpenAPS SMB algorithm as your APS algorithm. Despite the name the SMB feature of the algorithm is disabled until you are familar with AAPS and already worked through the first objectives. OpenAPS SMB is newer and in general better compared to the OpenAPS AMA anyway.</p> <p>The reason SMB is disabled in the beginning is because the SMB feature enables faster reaction on blood sugar increase through the Super Micro Bolus instead of increasing the basal rate percentage. As in the begining your profile is in general not as good as after some time of experience the feature is disabled in the begining.</p> <p>:::{admonition} Only use the older algorithm OpenAPS AMA if you know what you are doing :class: information OpenAPS AMA is the most basic algorithm which does not support micro boluses to correct high values. There might be circumstances where it is better to use this algorithm but it is not the recommendation. :::</p> <p>Press \"NEXT\" to go to the next screen:</p> <p></p> <p>Only read the text and change nothing here.</p> <p>Due to the limitations which are imposed by the Objectives you can't use either \"closed loop\" or \"SMB features\" at the moment anyway.</p> <p>Press \"NEXT\" to go to the next screen:</p> <p></p>"},{"location":"Installing-AndroidAPS/setup-wizard/#aps-mode","title":"APS mode","text":"<p>Let \"Open Loop\" remain selected.</p> <p>Press \"NEXT\" to go to the next screen:</p> <p></p>"},{"location":"Installing-AndroidAPS/setup-wizard/#sensitivity-detection","title":"Sensitivity detection","text":"<p>Let \"Sensitivity Oref1\" the standard for the sensitivty plugins selected.</p> <p>Press \"NEXT\" to go to the next screen:</p> <p></p>"},{"location":"Installing-AndroidAPS/setup-wizard/#start-objective-1","title":"Start Objective 1","text":"<p>You are entering now the Objectives. The qualification for access to further AAPS features.</p> <p>Here we start Objective 1, even if at the moment our setup is not completely ready to successfully complete this Objective.</p> <p>But this is the start.</p> <p>Press the green \"START\" to to start objective 1:</p> <p></p> <p>You see that you already made some progress, but other areas are to be done.</p> <p>Press \"FINISH\" to go to the next screen.</p> <p></p> <p>You are coming to the home screen of AAPS.</p> <p>Here you find the information message in AAPS that you set your profile.</p> <p>This was done when we switched to our new profile.</p> <p>You can click \"SNOOZE\" and it will disappear.</p> <p></p> <p>If you accidentally leave the Setup Wizard at any point, you can either simply re-start the Wizard, or change the configuration of the AAPS loop manually. </p> <p>If your AAPS loop is now fully setup, please move on to the next section \"Completing the objectives\".</p>"},{"location":"Installing-AndroidAPS/troubleshooting_androidstudio/","title":"Troubleshooting androidstudio","text":"<p>(troubleshooting_androidstudio-troubleshooting-android-studio)=</p>"},{"location":"Installing-AndroidAPS/troubleshooting_androidstudio/#troubleshooting-android-studio","title":"Troubleshooting Android Studio","text":"<p>(troubleshooting_androidstudio-lost-keystore)=</p>"},{"location":"Installing-AndroidAPS/troubleshooting_androidstudio/#lost-keystore","title":"Lost keystore","text":"<p>If you use the same keystore when updating AAPS you do not have to uninstall the previous version on your smartphone. That's why it is recommended to store the keystore in a save place.</p> <p>If you try to install the apk, signed with a different keystore than before, you will get an error message that the installation failed!</p> <p>In case you cannot find your old keystore or its password anymore, proceed as follows:</p> <ol> <li>Export settings on your phone.</li> <li>Copy or upload the settings file from your phone to an external location (i.e. your computer, cloud storage service...).</li> <li>Generate signed apk of new version as described on the Update guide and transfer it to your phone.</li> <li>Uninstall previous AAPS version on your phone.</li> <li>Install new AAPS version on your phone.</li> <li>Import settings to restore your objectives and configuration.</li> </ol> <p>If you can't find them on your phone copy them from the external storage to your phone.</p> <ol> <li>Check your battery optimization options and disable them again.</li> <li>Keep on looping.</li> </ol>"},{"location":"Installing-AndroidAPS/troubleshooting_androidstudio/#gradle-sync-failed","title":"Gradle Sync failed","text":"<p>Gradle Sync can fail to various reasons. Wen you get a message saying that gradle sync failed, open the \"Build\" tab (1) at the bottom of Android Studio and check what error message (2) is displayed.</p> <p></p> <p>These are the usual gradle sync failures: * Uncommitted changes * No cached version of ... available * Android Gradle requires Java 11 to run</p> <p>Important: After you have followed the instructions for your specific problem, you need to trigger the gradle sync again.</p> <p>(troubleshooting_androidstudio-uncommitted-changes)=</p>"},{"location":"Installing-AndroidAPS/troubleshooting_androidstudio/#uncommitted-changes","title":"Uncommitted changes","text":"<p>If you receive a failure message like</p> <p></p>"},{"location":"Installing-AndroidAPS/troubleshooting_androidstudio/#step-1-check-git-installation","title":"Step 1 - Check git installation","text":"<ul> <li> <p>Open the terminal tab (1) at the bottom of Android Studio and copy the following text and paste or type into the terminal.     <pre><code>git --version\n</code></pre></p> <p></p> <p>Note: There is a space and two hyphens between git and version!</p> </li> <li> <p>You must receive a message saying what git version is installed, as you can see in the screenshot above. In this case, go to Step 2.</p> </li> <li> <p>In case you get an message saying     <pre><code>Git: command not found\n</code></pre>     your Git installation is not right.</p> </li> <li> <p>Check git installation</p> </li> <li> <p>if on Windows and git was just installed, you should restart your computer to make git globally available after the installation</p> </li> <li> <p>If Git is installed, you have restarted (if on windows), and git still couldn't found:</p> </li> <li> <p>Search your computer for a file \"git.exe\".</p> <p>Note for yourself, what directory it is in.</p> </li> <li> <p>Go to the Environment variables in windows, select the variable \"PATH\" and click edit. Add the directory where   you have found your git installation.</p> </li> <li> <p>Save and close.</p> </li> <li> <p>Restart Android Studio.</p> </li> </ul>"},{"location":"Installing-AndroidAPS/troubleshooting_androidstudio/#step-2-check-for-uncommitted-changes","title":"Step 2: Check for uncommitted changes.","text":"<ul> <li>In Android Studio, oben the \"Commit\" Tab (1) on the left-hand side.     </li> <li> <p>You can see either a \"Default changeset\" (2) or \"Unversioned files\" (3):</p> <ul> <li> <p>For \"Default changeset\", you probably updated gradle or changed some of the file contents by mistake.</p> </li> <li> <p>Right click on \"Default Changeset\" and select \"Rollback\"</p> </li> </ul> <p></p> <ul> <li>The files are fetched again from the Git server. If there are no other changes in the commit tab, go to Step 3.</li> </ul> </li> <li> <p>If you can see \"Unversioned Files\", you might have stored files in your sourecode directory which should be better places somewhere else, e.g. your keystore file.</p> <ul> <li> <p>Use your regular file explorer on your computer to move or cut and paste that file to a save place.</p> </li> <li> <p>Go back to Android Studio and click the Refresh button (4) within the Commit tab to make sure the file is not stored in the AAPS directory anymore.</p> </li> </ul> <p>If there are no other changes in the commit tab, go to Step 3.</p> </li> </ul> <p>(troubleshooting_androidstudio-step-3-gradle-resync)=</p>"},{"location":"Installing-AndroidAPS/troubleshooting_androidstudio/#step-3-resync-gradle-again","title":"Step 3: Resync Gradle (again)","text":"<p>Follow the instructions at Gradle Resync.</p> <p>(troubleshooting_androidstudio-android-gradle-plugin-requires-java-11-to-run)=</p>"},{"location":"Installing-AndroidAPS/troubleshooting_androidstudio/#incompatible-version-of-android-gradle-plugin","title":"Incompatible version of Android Gradle plugin","text":"<p>If you experience the following error message</p> <p></p> <p>You are using an outdated version of Android Studio.    In the menu, go to Help &gt; Check for updates and install any updates of Android Studio and its plugins that are found.</p>"},{"location":"Installing-AndroidAPS/troubleshooting_androidstudio/#android-gradle-plugin-requires-java-17-to-run","title":"Android Gradle plugin requires Java 17 to run","text":"<p>You might experience this error message:</p> <p></p> <p>Click on \"Gradle Settings\" (1) to go to open the gradle settings.</p> <p>If you don't have the link to the \"Gradle Settings\", open the Gradle settings manually by selecting the Gradle Tab on the right border (1), select the tools icon (2) and there the item 'Gradle Settings' (3).</p> <p></p> <p>When you have opened the Gradle settings dialog, open the options (1) at \"Gradle JDK\" and selected the \"jbr-17\" (2), which should be located within your Android Studion installation directory.</p> <p></p> <p>Press \"OK\" to save and close the settings dialog.</p> <p>Important: If you don't see the setting \"Gradle JDK\", you might have not updated Android Studio. Make sure you are using Android Studio 2022.3 Giraffe) or newer.</p> <p>Now you need to trigger a Gradle Resync</p> <p>(troubleshooting_androidstudio-could-not-resolve-no-cached-version)=</p>"},{"location":"Installing-AndroidAPS/troubleshooting_androidstudio/#could-not-resolveno-cached-version","title":"Could not resolve/No cached version","text":"<p>You might get this error message:</p> <pre><code>![Could not resolve... No cached version](../images/studioTroubleshooting/08_NoCachedVersion.png)\n</code></pre> <ul> <li> <p>On the right side, open the Gradle tab (1).</p> <p>Make sure the button shown at (2) is NOT selected.</p> <p></p> </li> <li> <p>Now you need to trigger a Gradle Resync</p> </li> </ul> <p>(troubleshooting_androidstudio-unable-to-start-daemon-process)=</p>"},{"location":"Installing-AndroidAPS/troubleshooting_androidstudio/#unable-to-start-daemon-process","title":"Unable to start daemon process","text":"<p>If you see an error message like the one below you probably use a Windows 10 32-bit system. This is not supported by Android Studio 3.5.1 and above and unfortunately nothing the AAPS developer can do about.</p> <p>If you are using Windows 10 you must use a 64-bit operating system.</p> <p>There are a lot of manuals on the internet how to determine wether you have a 32-bit or 64-bit OS - i.e. this one.</p> <p></p>"},{"location":"Installing-AndroidAPS/troubleshooting_androidstudio/#gradle-resync","title":"Gradle Resync","text":"<p>If you can still see the message that the gradle sync failed, now select the Link \"Try again\".   </p> <p>If you don't see the a message anymore, you can still trigger this manually:</p> <ul> <li> <p>Open the Gradle tab (1) on the right border of Android Studio.</p> <p></p> </li> <li> <p>Right-click on AAPS (2)</p> </li> <li> <p>Click on \"Reload Gradle Project\" (3)</p> </li> </ul>"},{"location":"Installing-AndroidAPS/troubleshooting_androidstudio/#generate-signed-apk-generated-successfully-with-0-build-variants","title":"Generate Signed APK generated successfully with 0 build variants","text":"<p>When you generate the signed apk, you might get the notification that generation was successfully but are told that 0 build variants where generated:</p> <p></p> <p>This is a false warning. Check the directory your selected as \"Destination folder\" for generation (step Generate Signed APK) and you will find the generated apk there!</p>"},{"location":"Installing-AndroidAPS/troubleshooting_androidstudio/#app-was-created-with-compilerkotlin-warnings","title":"App was created with compiler/kotlin warnings","text":"<p>If your build completed successfully but you get compiler or kotlin warnings (indicated by a yellow or blue exclamation mark) then you can just ignore these warnings.</p> <p></p> <p>Your app was build successfully and can be transferred to phone!</p>"},{"location":"Installing-AndroidAPS/troubleshooting_androidstudio/#key-was-created-with-errors","title":"Key was created with errors","text":"<p>When creating a new keystore for building the signed APK, on Windows the following error message might appear</p> <p></p> <p>This seems to be a bug with Android Studio 3.5.1 and its shipped Java environment in Windows. The key is created correctly but a recommendation is falsely displayed as an error. This can currently be ignored.</p>"},{"location":"Installing-AndroidAPS/troubleshooting_androidstudio/#no-cgm-data-is-received-by-aaps","title":"No CGM data is received by AAPS","text":"<ul> <li> <p>In case you are using patched Dexcom G6 app: This app is outdated. Use the BYODA app instead.</p> </li> <li> <p>In case you are using xDrip+: Identify receiver as described on xDrip+ settings page.</p> </li> </ul>"},{"location":"Installing-AndroidAPS/troubleshooting_androidstudio/#app-not-installed","title":"App not installed","text":"<ul> <li>Make sure you have transferred the \u201capp-full-release.apk\u201d file to your phone.</li> <li> <p>If \"App not installed\" is displayed on your phone follow these steps:</p> </li> <li> <p>Export settings (in AAPS version already installed on your phone)</p> </li> <li>Uninstall AAPS on your phone.</li> <li>Enable airplane mode &amp; turn off bluetooth.</li> <li>Install new version (\u201capp-full-release.apk\u201d)</li> <li>Import settings</li> <li>Turn bluetooth back on and disable airplane mode</li> </ul>"},{"location":"Installing-AndroidAPS/troubleshooting_androidstudio/#app-installed-but-old-version","title":"App installed but old version","text":"<p>If you built the app successfully, transferred it to your phone and installed it successfully but the version number stays the same then you might have missed to update your local copy</p>"},{"location":"Installing-AndroidAPS/troubleshooting_androidstudio/#none-of-the-above-worked","title":"None of the above worked","text":"<p>If non of the above tips helped you might consider building the app from scratch:</p> <ol> <li> <p>Export settings (in AAPS version already installed on your phone)</p> </li> <li> <p>Have your key password and key store password ready. In case you have forgotten passwords you can try to find them in project files as described here.</p> <p>Or you just use a new keystore.</p> </li> <li> <p>Build app from scratch as described here.</p> </li> <li> <p>When you have build the APK successfully delete the exiting app on your phone, transfer the new apk to your phone and install.</p> </li> <li>Import settings again to restore your objectives and settings.</li> <li>You should check your battery optimization options and disable them again.</li> </ol>"},{"location":"Installing-AndroidAPS/troubleshooting_androidstudio/#worst-case-scenario","title":"Worst case scenario","text":"<p>In case even building the app from scratch does not solve your problem you might want to try to uninstall Android Studio completely. Some Users reported that this solved their problem.</p> <p>Make sure to uninstall all files associated with Android Studio. If you do not completely remove Android Studio with all hidden files, uninstalling may cause new problems instead of solving your existing one(s). Manuals for complete uninstall can be found online i.e.</p> <p>https://stackoverflow.com/questions/39953495/how-to-completely-uninstall-android-studio-from-windowsv10.</p> <p>Install Android Studio from scratch as described here.</p>"},{"location":"Installing-AndroidAPS/update2_7/","title":"Necessary checks after update coming from AAPS 2.6","text":"<ul> <li>The program code was changed significantly when switching to AAPS 2.7.</li> <li>Therefore it is important that you make some changes or check settings after the update.</li> <li>Please see release notes for details on new and extended features.</li> </ul>"},{"location":"Installing-AndroidAPS/update2_7/#check-bg-source","title":"Check BG source","text":"<ul> <li>Check if BG source is correct after update.</li> <li>Especially when using xDrip+ it might happen, that BG source is changed to Dexcom app (patched).</li> <li>Open Config builder (hamburger menu on top left side of home screen)</li> <li>Scroll down to \"BG source\".</li> <li>Select correct BG source if changes are necessary.</li> </ul> <p>```{image} ../images/ConfBuild_BG.png :alt: BG source <pre><code>## Finish exam\n\n- AAPS 2.7 contains new objective 11 (in later versions renumbered to objective 10!) for [automation](../Usage/Automation.md).\n- You have to finish exam ([objective 3 and 4](Objectives-objective-3-prove-your-knowledge)) in order to complete [objective 11](Objectives-objective-10-automation).\n- If for example you did not finish the exam in [objective 3](../Usage/Objectives-objective-3-prove-your-knowledge) yet, you will have to complete the exam before you can start [objective 11](Objectives-objective-10-automation).\n- This will not effect other objectives you have already finished. You will keep all finished objectives!\n\n## Set master password\n\n- Necessary to be able to [export settings](../Usage/ExportImportSettings.md) as they are encrypted as of version 2.7.\n- Open Preferences (three-dot-menu on top right of home screen)\n- Click triangle below \"General\"\n- Click \"Master-Password\"\n- Enter password, confirm password and click ok.\n\n```{image} ../images/MasterPW.png\n:alt: Set master password\n</code></pre></p>"},{"location":"Installing-AndroidAPS/update2_7/#export-settings","title":"Export settings","text":"<ul> <li>AAPS 2.7 uses a new encrypted backup format.</li> <li>You must export your settings after updating to version 2.7.</li> <li>Settings files from previous versions can only be imported in AAPS 2.7. Export will be in new format.</li> <li>Make sure to store your exported settings not only on your phone but also in at least one safe place (your pc, cloud storage...).</li> <li>If you build AAPS 2.7 apk with the same keystore than in previous versions you can install new version without deleting the previous version.</li> <li>All settings as well as finished objectives will remain as they were in the previous version.</li> <li>In case you have lost your keystore build version 2.7 with new keystore and import settings from previous version as described in the troubleshooting section.</li> </ul>"},{"location":"Installing-AndroidAPS/update2_7/#autosens-hint-no-action-necessary","title":"Autosens (Hint - no action necessary)","text":"<ul> <li>Autosens is changed to a dynamic switching model which replicates the reference design.</li> <li>Autosens will now switch between a 24 and 8 hours window for calculating sensitivity. It will pick which ever one is more sensitive.</li> <li>If users have come from oref1 they will probably notice the system may be less dynamic to changes, due to the varying of either 24 or 8 hours of sensitivity.</li> </ul>"},{"location":"Installing-AndroidAPS/update2_7/#set-pump-password-for-dana-rs-if-using-dana-rs","title":"Set Pump Password for Dana RS (if using Dana RS)","text":"<ul> <li>Pump password for Dana RS was not checked in previous versions.</li> <li>Open Preferences (three-dot-menu on top right of screen)</li> <li>Scroll down and click triangle next to \"Dana RS\".</li> <li>Click \"Pump password (v1 only)\"</li> <li>Enter pump password (Default password is different depending on firmware version) and click OK.</li> </ul> <p><code>{image} ../images/DanaRSPW.png :alt: Set Dana RS password</code></p> <p>To change password on Dana RS follow instructions on DanaRS page.</p>"},{"location":"Installing-AndroidAPS/update3_0/","title":"Necessary checks after update to AAPS 3.0","text":"<ul> <li>Minimum Android version is 9.0 now.</li> <li>Data is not migrated to new database.</li> </ul> <p>Do not complain, it's so huge change so it's simply not possible. Thus after update IOB, COB, treatments etc. will be cleared. You have to create new profile switch and start with zero IOB and COB.</p> <p>Plan the update carefully!!! Best in situation without active insulin and carbs</p> <ul> <li>Please see the Release Notes for details on new and changed features.</li> </ul>"},{"location":"Installing-AndroidAPS/update3_0/#check-automations","title":"Check automations","text":"<ul> <li>New restrictions were introduced. Check your automations, especially if your conditions are still valid.</li> <li>If one of the conditions is missing, you need to add it again.</li> <li>Red automations contain invalid actions, go and edit them and reset to valid values</li> </ul> <p>Example: A profile change to 140% was allowed earlier but is now restriced to 130%.</p>"},{"location":"Installing-AndroidAPS/update3_0/#check-your-nsclient-settings-and-set-the-synchronization-complications","title":"Check your nsclient settings and set the synchronization complications","text":"<ul> <li>The implementation of the nsclient plugin has changed completly.</li> <li>Go to the nsclient tab and open the settings in the right-hand menu. A new preference \"Synchronization\" is available now.</li> <li>You can now make a detailed selection about which items shall be synchronized with your Nightscout site.</li> </ul>"},{"location":"Installing-AndroidAPS/update3_0/#nightscout-profile-cannot-be-pushed","title":"Nightscout profile cannot be pushed","text":"<ul> <li>The nightscout profile is gone, rest in peace!</li> <li>To copy your current nightscout profile into a local profile, go to the treatments page (now to be opened in the right-hand menu).</li> <li>Search for a profile switch with 100% and press clone.</li> <li>A new local profile is added, valid from the current date.</li> <li>To update profile from NS side use \"Clone\" (record!!, not profile) and save changes. You should see \"Profile valid from:\" set to currrent date.</li> </ul> <p>(update3_0-reset-master-password)=</p>"},{"location":"Installing-AndroidAPS/update3_0/#reset-master-password","title":"Reset master password","text":"<ul> <li>You can now reset your master password in case you have forgotten it.</li> <li>You need to add a file named <code>PasswordReset</code> to the <code>/AAPS/extra</code> directory on your phones fileystem.</li> <li>Restart AAPS.</li> <li>The new password will be the serial number of your active pump.</li> <li>For Dash: The serial number is always 4241.</li> <li>For EROS it is also listed on the POD tab as \"Sequence Number\"</li> </ul>"},{"location":"Installing-AndroidAPS/update3_0/#warning-signal-beneath-bg","title":"Warning signal beneath BG","text":"<p>Beginning with Android 3.0, you might get a warning signal beneath your BG number on the main screen.</p> <p></p> <p></p> <p>For details see AAPS screens page</p>"},{"location":"Installing-AndroidAPS/update3_0/#failure-message-data-from-different-pump","title":"Failure message: Data from different pump","text":"<p>To resolve this issue go to config builder. Change pump to virtual pump and back to your actual pump. This will reset the pump state.</p>"},{"location":"Sandbox/crowdintest/","title":"Small Crowdin Test","text":"<p>This is a small set for testing the translation with Crowdin.</p> <p>We want to see how changes to a sentence affect the existing translation of the entire page.</p> <p>Normally, only one sentence should need to be retranslated and not everything.</p> <p>We can see it now.</p>"},{"location":"Sandbox/sandbox1/","title":"internal sandbox file 1 for testing our sprint","text":"<p>Note</p> <p>This my note!</p> <p>Warning</p> <p>No need to translate this.</p> <p>Danger</p> <p>Here is danger on the road.</p> <p>Test IoB</p> <p>W3C</p> <p>\"The number 43 is, in The Hitchhiker's Guide to the Galaxy by Douglas Adams, the \"Answer to the Ultimate Question of Life, the Universe, and Everything,\" calculated by an enormous supercomputer named Deep Thought over a period of 7.5 million years.\" - Wikipedia.</p> <p>This is an internal sandbox file for the documentation team to test </p> <ol> <li> <p>markdown syntax and </p> </li> <li> <p>background process for </p> <ol> <li>CROWDIN translation and</li> <li>Read The Docs deployment.</li> </ol> </li> </ol> <p>You can dirctly jump from here to the second label in this file - \"Jump\".</p> <p>And you can jump to the first label too - \"Jump\".</p> <p>Here you can jump to the second sandbox file - \"Jump\".</p> <p>You can dirctly jump from here to the first label in the sandbox2.md file - \"Jump\".</p> <p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p> <p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p> <p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>"},{"location":"Sandbox/sandbox1/#this-is-a-test","title":"This is a test","text":"<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p> <p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>"},{"location":"Sandbox/sandbox1/#this-is-another-test","title":"This is another test","text":"<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p> <p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>"},{"location":"Sandbox/sandbox2/","title":"internal sandbox file 2 for testing","text":"<p>```{admonition} no need to translate this :class: note</p> <p>No need to translate this. ```</p> <p>This is an internal sandbox file for the documentation team to test </p> <ol> <li> <p>markdown syntax and </p> </li> <li> <p>background process for </p> <ol> <li>CROWDIN translation and</li> <li>Read The Docs deployment.</li> </ol> </li> </ol> <p>You can dirctly jump from here to the first label in the sandbox1.md file - \"Jump\".</p> <p>You can dirctly jump from here to the second label in this file - \"Jump\".</p> <p>Here you can jump to the first sandbox file - \"Jump\".</p> <p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p> <p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p> <p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>"},{"location":"Sandbox/sandbox2/#this-is-a-test","title":"This is a test","text":"<p>This is a test if labels must be unique.</p>"}]}